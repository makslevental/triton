; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @matmul_kernel(ptr addrspace(1) inreg nocapture readonly %0, ptr addrspace(1) inreg nocapture readonly %1, ptr addrspace(1) inreg nocapture writeonly %2, ptr addrspace(1) inreg nocapture readnone %3, i32 inreg %4, i32 inreg %5, i32 inreg %6, i32 inreg %7, i32 inreg %8, i32 inreg %9, i32 inreg %10, ptr addrspace(1) inreg nocapture readnone %11) local_unnamed_addr #0 !dbg !4 {
  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %14 = sdiv i32 %13, 8
  %15 = mul i32 %13, 76
  %16 = mul i32 %14, -607
  %17 = add i32 %16, %15
  %18 = add i32 %5, 255
  %19 = sdiv i32 %18, 256
  %20 = shl nsw i32 %19, 2
  %.frozen = freeze i32 %20
  %21 = sdiv i32 %17, %.frozen
  %22 = shl nsw i32 %21, 2
  %23 = mul i32 %21, %.frozen
  %.decomposed = sub i32 %17, %23
  %24 = add i32 %4, 255
  %25 = sdiv i32 %24, 256
  %26 = sub nsw i32 %25, %22
  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 4)
  %.decomposed.frozen = freeze i32 %.decomposed
  %.frozen3900 = freeze i32 %27
  %28 = sdiv i32 %.decomposed.frozen, %.frozen3900
  %29 = mul i32 %28, %.frozen3900
  %.decomposed3901 = sub i32 %.decomposed.frozen, %29
  %30 = add nsw i32 %.decomposed3901, %22
  %31 = shl i32 %30, 8
  %32 = tail call i32 @llvm.amdgcn.workitem.id.x()
  %33 = lshr i32 %32, 3
  %34 = and i32 %33, 16
  %35 = and i32 %33, 31
  %36 = or disjoint i32 %35, 32
  %37 = or disjoint i32 %35, 64
  %38 = or disjoint i32 %35, 96
  %39 = or disjoint i32 %35, 128
  %40 = or disjoint i32 %35, 160
  %41 = or disjoint i32 %35, 192
  %42 = or disjoint i32 %35, 224
  %43 = mul i32 %31, %7
  %44 = mul i32 %7, %35
  %45 = mul i32 %7, %36
  %46 = mul i32 %7, %37
  %47 = mul i32 %7, %38
  %48 = mul i32 %7, %39
  %49 = mul i32 %7, %40
  %50 = mul i32 %7, %41
  %51 = mul i32 %7, %42
  %52 = sext i32 %43 to i64
  %53 = getelementptr half, ptr addrspace(1) %0, i64 %52
  %54 = shl i32 %32, 3
  %55 = and i32 %54, 56
  %56 = add i32 %44, %55
  %57 = add i32 %45, %55
  %58 = add i32 %46, %55
  %59 = add i32 %47, %55
  %60 = add i32 %48, %55
  %61 = add i32 %49, %55
  %62 = add i32 %50, %55
  %63 = add i32 %51, %55
  %64 = getelementptr i8, ptr addrspace(1) %53, i64 128
  %65 = add i32 %6, 63
  %66 = icmp sgt i32 %65, 63
  %67 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %53, i16 0, i32 2147483646, i32 159744)
  %68 = shl i32 %56, 1
  %69 = select i1 %66, i32 %68, i32 -2147483648
  %70 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %69, i32 0, i32 0)
  %71 = shl i32 %57, 1
  %72 = select i1 %66, i32 %71, i32 -2147483648
  %73 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %72, i32 0, i32 0)
  %74 = shl i32 %58, 1
  %75 = select i1 %66, i32 %74, i32 -2147483648
  %76 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %75, i32 0, i32 0)
  %77 = shl i32 %59, 1
  %78 = select i1 %66, i32 %77, i32 -2147483648
  %79 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %78, i32 0, i32 0)
  %80 = shl i32 %60, 1
  %81 = select i1 %66, i32 %80, i32 -2147483648
  %82 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %81, i32 0, i32 0)
  %83 = shl i32 %61, 1
  %84 = select i1 %66, i32 %83, i32 -2147483648
  %85 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %84, i32 0, i32 0)
  %86 = shl i32 %62, 1
  %87 = select i1 %66, i32 %86, i32 -2147483648
  %88 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %87, i32 0, i32 0)
  %89 = shl i32 %63, 1
  %90 = select i1 %66, i32 %89, i32 -2147483648
  %91 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %90, i32 0, i32 0)
  %92 = icmp sgt i32 %65, 127
  %93 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %64, i16 0, i32 2147483646, i32 159744)
  %94 = select i1 %92, i32 %68, i32 -2147483648
  %95 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %94, i32 0, i32 0)
  %96 = bitcast <4 x i32> %95 to <8 x half>
  %97 = select i1 %92, i32 %71, i32 -2147483648
  %98 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %97, i32 0, i32 0)
  %99 = bitcast <4 x i32> %98 to <8 x half>
  %100 = select i1 %92, i32 %74, i32 -2147483648
  %101 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %100, i32 0, i32 0)
  %102 = bitcast <4 x i32> %101 to <8 x half>
  %103 = select i1 %92, i32 %77, i32 -2147483648
  %104 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %103, i32 0, i32 0)
  %105 = bitcast <4 x i32> %104 to <8 x half>
  %106 = select i1 %92, i32 %80, i32 -2147483648
  %107 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %106, i32 0, i32 0)
  %108 = bitcast <4 x i32> %107 to <8 x half>
  %109 = select i1 %92, i32 %83, i32 -2147483648
  %110 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %109, i32 0, i32 0)
  %111 = bitcast <4 x i32> %110 to <8 x half>
  %112 = select i1 %92, i32 %86, i32 -2147483648
  %113 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %112, i32 0, i32 0)
  %114 = bitcast <4 x i32> %113 to <8 x half>
  %115 = select i1 %92, i32 %89, i32 -2147483648
  %116 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %115, i32 0, i32 0)
  %117 = bitcast <4 x i32> %116 to <8 x half>
  %118 = shl i32 %28, 8
  %119 = mul i32 %118, %8
  %120 = mul i32 %8, %35
  %121 = mul i32 %8, %36
  %122 = mul i32 %8, %37
  %123 = mul i32 %8, %38
  %124 = mul i32 %8, %39
  %125 = mul i32 %8, %40
  %126 = mul i32 %8, %41
  %127 = mul i32 %8, %42
  %128 = sext i32 %119 to i64
  %129 = getelementptr half, ptr addrspace(1) %1, i64 %128
  %130 = add i32 %120, %55
  %131 = add i32 %121, %55
  %132 = add i32 %122, %55
  %133 = add i32 %123, %55
  %134 = add i32 %124, %55
  %135 = add i32 %125, %55
  %136 = add i32 %126, %55
  %137 = add i32 %127, %55
  %138 = getelementptr i8, ptr addrspace(1) %129, i64 128
  %139 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %129, i16 0, i32 2147483646, i32 159744)
  %140 = shl i32 %130, 1
  %141 = select i1 %66, i32 %140, i32 -2147483648
  %142 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %141, i32 0, i32 0)
  %143 = shl i32 %131, 1
  %144 = select i1 %66, i32 %143, i32 -2147483648
  %145 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %144, i32 0, i32 0)
  %146 = shl i32 %132, 1
  %147 = select i1 %66, i32 %146, i32 -2147483648
  %148 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %147, i32 0, i32 0)
  %149 = shl i32 %133, 1
  %150 = select i1 %66, i32 %149, i32 -2147483648
  %151 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %150, i32 0, i32 0)
  %152 = shl i32 %134, 1
  %153 = select i1 %66, i32 %152, i32 -2147483648
  %154 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %153, i32 0, i32 0)
  %155 = shl i32 %135, 1
  %156 = select i1 %66, i32 %155, i32 -2147483648
  %157 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %156, i32 0, i32 0)
  %158 = shl i32 %136, 1
  %159 = select i1 %66, i32 %158, i32 -2147483648
  %160 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %159, i32 0, i32 0)
  %161 = shl i32 %137, 1
  %162 = select i1 %66, i32 %161, i32 -2147483648
  %163 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %162, i32 0, i32 0)
  %164 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %138, i16 0, i32 2147483646, i32 159744)
  %165 = select i1 %92, i32 %140, i32 -2147483648
  %166 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %165, i32 0, i32 0)
  %167 = bitcast <4 x i32> %166 to <8 x half>
  %168 = select i1 %92, i32 %143, i32 -2147483648
  %169 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %168, i32 0, i32 0)
  %170 = bitcast <4 x i32> %169 to <8 x half>
  %171 = select i1 %92, i32 %146, i32 -2147483648
  %172 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %171, i32 0, i32 0)
  %173 = bitcast <4 x i32> %172 to <8 x half>
  %174 = select i1 %92, i32 %149, i32 -2147483648
  %175 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %174, i32 0, i32 0)
  %176 = bitcast <4 x i32> %175 to <8 x half>
  %177 = select i1 %92, i32 %152, i32 -2147483648
  %178 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %177, i32 0, i32 0)
  %179 = bitcast <4 x i32> %178 to <8 x half>
  %180 = select i1 %92, i32 %155, i32 -2147483648
  %181 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %180, i32 0, i32 0)
  %182 = bitcast <4 x i32> %181 to <8 x half>
  %183 = select i1 %92, i32 %158, i32 -2147483648
  %184 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %183, i32 0, i32 0)
  %185 = bitcast <4 x i32> %184 to <8 x half>
  %186 = select i1 %92, i32 %161, i32 -2147483648
  %187 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %186, i32 0, i32 0)
  %188 = bitcast <4 x i32> %187 to <8 x half>
  %189 = icmp sgt i32 %7, 0
  tail call void @llvm.assume(i1 %189)
  %190 = icmp sgt i32 %8, 0
  tail call void @llvm.assume(i1 %190)
  %191 = icmp sgt i32 %9, 0
  tail call void @llvm.assume(i1 %191)
  %192 = icmp sgt i32 %10, 0
  tail call void @llvm.assume(i1 %192)
  %193 = icmp sgt i32 %30, 0
  tail call void @llvm.assume(i1 %193)
  %194 = icmp sgt i32 %28, 0
  tail call void @llvm.assume(i1 %194)
  %195 = xor i32 %54, %32
  %196 = and i32 %195, 56
  %197 = shl nuw nsw i32 %35, 6
  %198 = or disjoint i32 %197, %196
  %199 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %198
  store <4 x i32> %70, ptr addrspace(3) %199, align 16
  %200 = or disjoint i32 %198, 2048
  %201 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %200
  store <4 x i32> %73, ptr addrspace(3) %201, align 16
  %202 = or disjoint i32 %198, 4096
  %203 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %202
  store <4 x i32> %76, ptr addrspace(3) %203, align 16
  %204 = or disjoint i32 %198, 6144
  %205 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %204
  store <4 x i32> %79, ptr addrspace(3) %205, align 16
  %206 = or disjoint i32 %198, 8192
  %207 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %206
  store <4 x i32> %82, ptr addrspace(3) %207, align 16
  %208 = or disjoint i32 %198, 10240
  %209 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %208
  store <4 x i32> %85, ptr addrspace(3) %209, align 16
  %210 = or disjoint i32 %198, 12288
  %211 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %210
  store <4 x i32> %88, ptr addrspace(3) %211, align 16
  %212 = or disjoint i32 %198, 14336
  %213 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %212
  store <4 x i32> %91, ptr addrspace(3) %213, align 16
  %214 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %198
  store <4 x i32> %142, ptr addrspace(3) %214, align 16
  %215 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %200
  store <4 x i32> %145, ptr addrspace(3) %215, align 16
  %216 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %202
  store <4 x i32> %148, ptr addrspace(3) %216, align 16
  %217 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %204
  store <4 x i32> %151, ptr addrspace(3) %217, align 16
  %218 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %206
  store <4 x i32> %154, ptr addrspace(3) %218, align 16
  %219 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %208
  store <4 x i32> %157, ptr addrspace(3) %219, align 16
  %220 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %210
  store <4 x i32> %160, ptr addrspace(3) %220, align 16
  %221 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %212
  store <4 x i32> %163, ptr addrspace(3) %221, align 16
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %222 = and i32 %32, 15
  %223 = lshr i32 %32, 4
  %224 = and i32 %223, 3
  %225 = or disjoint i32 %34, %222
  %226 = and i32 %32, 7
  %227 = xor i32 %224, %226
  %228 = shl nuw nsw i32 %227, 3
  %229 = shl nuw nsw i32 %225, 6
  %230 = or disjoint i32 %229, %228
  %231 = or disjoint i32 %224, 4
  %232 = xor i32 %231, %226
  %233 = shl nuw nsw i32 %232, 3
  %234 = or disjoint i32 %233, %229
  %235 = or disjoint i32 %230, 2048
  %236 = or disjoint i32 %234, 2048
  %237 = getelementptr half, ptr addrspace(3) @global_smem, i32 %230
  %238 = load <8 x half>, ptr addrspace(3) %237, align 16
  %239 = getelementptr half, ptr addrspace(3) @global_smem, i32 %234
  %240 = load <8 x half>, ptr addrspace(3) %239, align 16
  %241 = getelementptr half, ptr addrspace(3) @global_smem, i32 %235
  %242 = load <8 x half>, ptr addrspace(3) %241, align 16
  %243 = getelementptr half, ptr addrspace(3) @global_smem, i32 %236
  %244 = load <8 x half>, ptr addrspace(3) %243, align 16
  %245 = or disjoint i32 %229, 4096
  %246 = or disjoint i32 %245, %228
  %247 = or disjoint i32 %245, %233
  %248 = or disjoint i32 %246, 2048
  %249 = or disjoint i32 %247, 2048
  %250 = getelementptr half, ptr addrspace(3) @global_smem, i32 %246
  %251 = load <8 x half>, ptr addrspace(3) %250, align 16
  %252 = getelementptr half, ptr addrspace(3) @global_smem, i32 %247
  %253 = load <8 x half>, ptr addrspace(3) %252, align 16
  %254 = getelementptr half, ptr addrspace(3) @global_smem, i32 %248
  %255 = load <8 x half>, ptr addrspace(3) %254, align 16
  %256 = getelementptr half, ptr addrspace(3) @global_smem, i32 %249
  %257 = load <8 x half>, ptr addrspace(3) %256, align 16
  %258 = or disjoint i32 %229, 8192
  %259 = or disjoint i32 %258, %228
  %260 = or disjoint i32 %258, %233
  %261 = or disjoint i32 %259, 2048
  %262 = or disjoint i32 %260, 2048
  %263 = getelementptr half, ptr addrspace(3) @global_smem, i32 %259
  %264 = load <8 x half>, ptr addrspace(3) %263, align 16
  %265 = getelementptr half, ptr addrspace(3) @global_smem, i32 %260
  %266 = load <8 x half>, ptr addrspace(3) %265, align 16
  %267 = getelementptr half, ptr addrspace(3) @global_smem, i32 %261
  %268 = load <8 x half>, ptr addrspace(3) %267, align 16
  %269 = getelementptr half, ptr addrspace(3) @global_smem, i32 %262
  %270 = load <8 x half>, ptr addrspace(3) %269, align 16
  %271 = or disjoint i32 %229, 12288
  %272 = or disjoint i32 %271, %228
  %273 = or disjoint i32 %271, %233
  %274 = or disjoint i32 %272, 2048
  %275 = or disjoint i32 %273, 2048
  %276 = getelementptr half, ptr addrspace(3) @global_smem, i32 %272
  %277 = load <8 x half>, ptr addrspace(3) %276, align 16
  %278 = getelementptr half, ptr addrspace(3) @global_smem, i32 %273
  %279 = load <8 x half>, ptr addrspace(3) %278, align 16
  %280 = getelementptr half, ptr addrspace(3) @global_smem, i32 %274
  %281 = load <8 x half>, ptr addrspace(3) %280, align 16
  %282 = getelementptr half, ptr addrspace(3) @global_smem, i32 %275
  %283 = load <8 x half>, ptr addrspace(3) %282, align 16
  %284 = lshr i32 %32, 2
  %285 = and i32 %284, 16
  %286 = or disjoint i32 %285, %222
  %287 = shl nuw nsw i32 %286, 6
  %288 = or disjoint i32 %228, %287
  %289 = or disjoint i32 %233, %287
  %290 = or disjoint i32 %288, 2048
  %291 = or disjoint i32 %289, 2048
  %292 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %288
  %293 = load <8 x half>, ptr addrspace(3) %292, align 16
  %294 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %289
  %295 = load <8 x half>, ptr addrspace(3) %294, align 16
  %296 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %290
  %297 = load <8 x half>, ptr addrspace(3) %296, align 16
  %298 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %291
  %299 = load <8 x half>, ptr addrspace(3) %298, align 16
  %300 = or disjoint i32 %287, 4096
  %301 = or disjoint i32 %300, %228
  %302 = or disjoint i32 %233, %300
  %303 = or disjoint i32 %301, 2048
  %304 = or disjoint i32 %302, 2048
  %305 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %301
  %306 = load <8 x half>, ptr addrspace(3) %305, align 16
  %307 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %302
  %308 = load <8 x half>, ptr addrspace(3) %307, align 16
  %309 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %303
  %310 = load <8 x half>, ptr addrspace(3) %309, align 16
  %311 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %304
  %312 = load <8 x half>, ptr addrspace(3) %311, align 16
  %313 = or disjoint i32 %287, 8192
  %314 = or disjoint i32 %313, %228
  %315 = or disjoint i32 %233, %313
  %316 = or disjoint i32 %314, 2048
  %317 = or disjoint i32 %315, 2048
  %318 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %314
  %319 = load <8 x half>, ptr addrspace(3) %318, align 16
  %320 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %315
  %321 = load <8 x half>, ptr addrspace(3) %320, align 16
  %322 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %316
  %323 = load <8 x half>, ptr addrspace(3) %322, align 16
  %324 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %317
  %325 = load <8 x half>, ptr addrspace(3) %324, align 16
  %326 = or disjoint i32 %287, 12288
  %327 = or disjoint i32 %326, %228
  %328 = or disjoint i32 %233, %326
  %329 = or disjoint i32 %327, 2048
  %330 = or disjoint i32 %328, 2048
  %331 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %327
  %332 = load <8 x half>, ptr addrspace(3) %331, align 16
  %333 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %328
  %334 = load <8 x half>, ptr addrspace(3) %333, align 16
  %335 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %329
  %336 = load <8 x half>, ptr addrspace(3) %335, align 16
  %337 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %330
  %338 = load <8 x half>, ptr addrspace(3) %337, align 16
  %339 = icmp sgt i32 %65, 191
  %340 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %341 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %342 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %343 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %344 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %345 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %346 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %347 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %348 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %349 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %350 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %351 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %352 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %353 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %354 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %355 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %356 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %357 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %358 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %359 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %360 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %361 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %362 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %363 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %364 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %365 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %366 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %367 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %368 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %369 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %370 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %371 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %372 = shufflevector <8 x half> %238, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %373 = shufflevector <8 x half> %238, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %374 = shufflevector <8 x half> %238, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %375 = shufflevector <8 x half> %238, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %376 = shufflevector <8 x half> %240, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %377 = shufflevector <8 x half> %240, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %378 = shufflevector <8 x half> %240, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %379 = shufflevector <8 x half> %240, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %380 = shufflevector <8 x half> %242, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %381 = shufflevector <8 x half> %242, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %382 = shufflevector <8 x half> %242, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %383 = shufflevector <8 x half> %242, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %384 = shufflevector <8 x half> %244, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %385 = shufflevector <8 x half> %244, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %386 = shufflevector <8 x half> %244, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %387 = shufflevector <8 x half> %244, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %388 = shufflevector <8 x half> %293, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %389 = shufflevector <8 x half> %293, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %390 = shufflevector <8 x half> %293, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %391 = shufflevector <8 x half> %293, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %392 = shufflevector <8 x half> %295, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %393 = shufflevector <8 x half> %295, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %394 = shufflevector <8 x half> %295, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %395 = shufflevector <8 x half> %295, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %396 = shufflevector <8 x half> %297, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %397 = shufflevector <8 x half> %297, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %398 = shufflevector <8 x half> %297, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %399 = shufflevector <8 x half> %297, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %400 = shufflevector <8 x half> %299, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %401 = shufflevector <8 x half> %299, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %402 = shufflevector <8 x half> %299, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %403 = shufflevector <8 x half> %299, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %404 = shufflevector <8 x half> %251, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %405 = shufflevector <8 x half> %251, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %406 = shufflevector <8 x half> %251, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %407 = shufflevector <8 x half> %251, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %408 = shufflevector <8 x half> %253, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %409 = shufflevector <8 x half> %253, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %410 = shufflevector <8 x half> %253, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %411 = shufflevector <8 x half> %253, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %412 = shufflevector <8 x half> %255, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %413 = shufflevector <8 x half> %255, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %414 = shufflevector <8 x half> %255, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %415 = shufflevector <8 x half> %255, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %416 = shufflevector <8 x half> %257, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %417 = shufflevector <8 x half> %257, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %418 = shufflevector <8 x half> %257, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %419 = shufflevector <8 x half> %257, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %420 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %421 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %422 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %423 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %424 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %425 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %426 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %427 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %428 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %429 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %430 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %431 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %432 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %433 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %434 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %435 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %436 = shufflevector <8 x half> %277, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %437 = shufflevector <8 x half> %277, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %438 = shufflevector <8 x half> %277, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %439 = shufflevector <8 x half> %277, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %440 = shufflevector <8 x half> %279, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %441 = shufflevector <8 x half> %279, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %442 = shufflevector <8 x half> %279, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %443 = shufflevector <8 x half> %279, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %444 = shufflevector <8 x half> %281, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %445 = shufflevector <8 x half> %281, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %446 = shufflevector <8 x half> %281, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %447 = shufflevector <8 x half> %281, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %448 = shufflevector <8 x half> %283, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %449 = shufflevector <8 x half> %283, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %450 = shufflevector <8 x half> %283, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %451 = shufflevector <8 x half> %283, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %452 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %453 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %454 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %455 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %456 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %457 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %458 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %459 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %460 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %461 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %462 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %463 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %464 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %465 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %466 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %467 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %468 = shufflevector <8 x half> %319, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %469 = shufflevector <8 x half> %319, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %470 = shufflevector <8 x half> %319, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %471 = shufflevector <8 x half> %319, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %472 = shufflevector <8 x half> %321, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %473 = shufflevector <8 x half> %321, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %474 = shufflevector <8 x half> %321, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %475 = shufflevector <8 x half> %321, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %476 = shufflevector <8 x half> %323, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %477 = shufflevector <8 x half> %323, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %478 = shufflevector <8 x half> %323, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %479 = shufflevector <8 x half> %323, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %480 = shufflevector <8 x half> %325, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %481 = shufflevector <8 x half> %325, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %482 = shufflevector <8 x half> %325, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %483 = shufflevector <8 x half> %325, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %484 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %485 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %486 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %487 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %488 = shufflevector <8 x half> %334, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %489 = shufflevector <8 x half> %334, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %490 = shufflevector <8 x half> %334, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %491 = shufflevector <8 x half> %334, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %492 = shufflevector <8 x half> %336, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %493 = shufflevector <8 x half> %336, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %494 = shufflevector <8 x half> %336, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %495 = shufflevector <8 x half> %336, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %496 = shufflevector <8 x half> %338, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %497 = shufflevector <8 x half> %338, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %498 = shufflevector <8 x half> %338, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %499 = shufflevector <8 x half> %338, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %500 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %501 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %502 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %503 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %504 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %505 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %506 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %507 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %508 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %509 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %510 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %511 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %512 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %513 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %514 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %515 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %516 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %517 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %518 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %519 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %520 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %521 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %522 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %523 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %524 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %525 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %526 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %527 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %528 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %529 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %530 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %531 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br i1 %339, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %12
  %532 = lshr i32 %65, 6
  %533 = add nsw i32 %532, -3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %534 = phi float [ %1943, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %535 = phi float [ %1944, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %536 = phi float [ %1945, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %537 = phi float [ %1946, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %538 = phi float [ %1949, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %539 = phi float [ %1950, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %540 = phi float [ %1951, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %541 = phi float [ %1952, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %542 = phi float [ %1955, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %543 = phi float [ %1956, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %544 = phi float [ %1957, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %545 = phi float [ %1958, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %546 = phi float [ %1961, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %547 = phi float [ %1962, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %548 = phi float [ %1963, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %549 = phi float [ %1964, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %550 = phi float [ %1887, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %551 = phi float [ %1888, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %552 = phi float [ %1889, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %553 = phi float [ %1890, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %554 = phi float [ %1893, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %555 = phi float [ %1894, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %556 = phi float [ %1895, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %557 = phi float [ %1896, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %558 = phi float [ %1899, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %559 = phi float [ %1900, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %560 = phi float [ %1901, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %561 = phi float [ %1902, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %562 = phi float [ %1905, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %563 = phi float [ %1906, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %564 = phi float [ %1907, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %565 = phi float [ %1908, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %566 = phi float [ %1719, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %567 = phi float [ %1720, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %568 = phi float [ %1721, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %569 = phi float [ %1722, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %570 = phi float [ %1725, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %571 = phi float [ %1726, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %572 = phi float [ %1727, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %573 = phi float [ %1728, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %574 = phi float [ %1731, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %575 = phi float [ %1732, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %576 = phi float [ %1733, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %577 = phi float [ %1734, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %578 = phi float [ %1737, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %579 = phi float [ %1738, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %580 = phi float [ %1739, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %581 = phi float [ %1740, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %582 = phi float [ %1671, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %583 = phi float [ %1672, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %584 = phi float [ %1673, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %585 = phi float [ %1674, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %586 = phi float [ %1677, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %587 = phi float [ %1678, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %588 = phi float [ %1679, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %589 = phi float [ %1680, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %590 = phi float [ %1683, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %591 = phi float [ %1684, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %592 = phi float [ %1685, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %593 = phi float [ %1686, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %594 = phi float [ %1689, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %595 = phi float [ %1690, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %596 = phi float [ %1691, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %597 = phi float [ %1692, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %598 = phi float [ %1831, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %599 = phi float [ %1832, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %600 = phi float [ %1833, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %601 = phi float [ %1834, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %602 = phi float [ %1837, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %603 = phi float [ %1838, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %604 = phi float [ %1839, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %605 = phi float [ %1840, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %606 = phi float [ %1843, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %607 = phi float [ %1844, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %608 = phi float [ %1845, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %609 = phi float [ %1846, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %610 = phi float [ %1849, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %611 = phi float [ %1850, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %612 = phi float [ %1851, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %613 = phi float [ %1852, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %614 = phi float [ %1775, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %615 = phi float [ %1776, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %616 = phi float [ %1777, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %617 = phi float [ %1778, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %618 = phi float [ %1781, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %619 = phi float [ %1782, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %620 = phi float [ %1783, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %621 = phi float [ %1784, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %622 = phi float [ %1787, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %623 = phi float [ %1788, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %624 = phi float [ %1789, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %625 = phi float [ %1790, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %626 = phi float [ %1793, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %627 = phi float [ %1794, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %628 = phi float [ %1795, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %629 = phi float [ %1796, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %630 = phi float [ %1615, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %631 = phi float [ %1616, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %632 = phi float [ %1617, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %633 = phi float [ %1618, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %634 = phi float [ %1621, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %635 = phi float [ %1622, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %636 = phi float [ %1623, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %637 = phi float [ %1624, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %638 = phi float [ %1627, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %639 = phi float [ %1628, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %640 = phi float [ %1629, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %641 = phi float [ %1630, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %642 = phi float [ %1633, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %643 = phi float [ %1634, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %644 = phi float [ %1635, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %645 = phi float [ %1636, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %646 = phi float [ %1567, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %647 = phi float [ %1568, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %648 = phi float [ %1569, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %649 = phi float [ %1570, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %650 = phi float [ %1573, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %651 = phi float [ %1574, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %652 = phi float [ %1575, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %653 = phi float [ %1576, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %654 = phi float [ %1579, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %655 = phi float [ %1580, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %656 = phi float [ %1581, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %657 = phi float [ %1582, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %658 = phi float [ %1585, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %659 = phi float [ %1586, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %660 = phi float [ %1587, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %661 = phi float [ %1588, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %662 = phi float [ %1511, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %663 = phi float [ %1512, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %664 = phi float [ %1513, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %665 = phi float [ %1514, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %666 = phi float [ %1517, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %667 = phi float [ %1518, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %668 = phi float [ %1519, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %669 = phi float [ %1520, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %670 = phi float [ %1523, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %671 = phi float [ %1524, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %672 = phi float [ %1525, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %673 = phi float [ %1526, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %674 = phi float [ %1529, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %675 = phi float [ %1530, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %676 = phi float [ %1531, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %677 = phi float [ %1532, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %678 = phi float [ %1463, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %679 = phi float [ %1464, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %680 = phi float [ %1465, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %681 = phi float [ %1466, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %682 = phi float [ %1469, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %683 = phi float [ %1470, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %684 = phi float [ %1471, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %685 = phi float [ %1472, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %686 = phi float [ %1475, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %687 = phi float [ %1476, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %688 = phi float [ %1477, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %689 = phi float [ %1478, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %690 = phi float [ %1481, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %691 = phi float [ %1482, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %692 = phi float [ %1483, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %693 = phi float [ %1484, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %694 = phi float [ %1415, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %695 = phi float [ %1416, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %696 = phi float [ %1417, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %697 = phi float [ %1418, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %698 = phi float [ %1421, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %699 = phi float [ %1422, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %700 = phi float [ %1423, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %701 = phi float [ %1424, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %702 = phi float [ %1427, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %703 = phi float [ %1428, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %704 = phi float [ %1429, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %705 = phi float [ %1430, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %706 = phi float [ %1433, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %707 = phi float [ %1434, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %708 = phi float [ %1435, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %709 = phi float [ %1436, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %710 = phi float [ %1367, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %711 = phi float [ %1368, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %712 = phi float [ %1369, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %713 = phi float [ %1370, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %714 = phi float [ %1373, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %715 = phi float [ %1374, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %716 = phi float [ %1375, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %717 = phi float [ %1376, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %718 = phi float [ %1379, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %719 = phi float [ %1380, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %720 = phi float [ %1381, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %721 = phi float [ %1382, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %722 = phi float [ %1385, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %723 = phi float [ %1386, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %724 = phi float [ %1387, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %725 = phi float [ %1388, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %726 = phi float [ %1311, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %727 = phi float [ %1312, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %728 = phi float [ %1313, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %729 = phi float [ %1314, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %730 = phi float [ %1317, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %731 = phi float [ %1318, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %732 = phi float [ %1319, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %733 = phi float [ %1320, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %734 = phi float [ %1323, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %735 = phi float [ %1324, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %736 = phi float [ %1325, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %737 = phi float [ %1326, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %738 = phi float [ %1329, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %739 = phi float [ %1330, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %740 = phi float [ %1331, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %741 = phi float [ %1332, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %742 = phi float [ %1237, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %743 = phi float [ %1238, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %744 = phi float [ %1239, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %745 = phi float [ %1240, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %746 = phi float [ %1243, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %747 = phi float [ %1244, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %748 = phi float [ %1245, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %749 = phi float [ %1246, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %750 = phi float [ %1249, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %751 = phi float [ %1250, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %752 = phi float [ %1251, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %753 = phi float [ %1252, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %754 = phi float [ %1255, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %755 = phi float [ %1256, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %756 = phi float [ %1257, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %757 = phi float [ %1258, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %758 = phi float [ %1141, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %759 = phi float [ %1142, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %760 = phi float [ %1143, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %761 = phi float [ %1144, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %762 = phi float [ %1147, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %763 = phi float [ %1148, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %764 = phi float [ %1149, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %765 = phi float [ %1150, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %766 = phi float [ %1153, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %767 = phi float [ %1154, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %768 = phi float [ %1155, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %769 = phi float [ %1156, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %770 = phi float [ %1159, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %771 = phi float [ %1160, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %772 = phi float [ %1161, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %773 = phi float [ %1162, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %774 = phi ptr addrspace(1) [ %1259, %.lr.ph ], [ %138, %.lr.ph.preheader ]
  %775 = phi ptr addrspace(1) [ %1089, %.lr.ph ], [ %64, %.lr.ph.preheader ]
  %776 = phi float [ %1067, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %777 = phi float [ %1068, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %778 = phi float [ %1069, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %779 = phi float [ %1070, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %780 = phi float [ %1073, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %781 = phi float [ %1074, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %782 = phi float [ %1075, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %783 = phi float [ %1076, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %784 = phi float [ %1079, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %785 = phi float [ %1080, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %786 = phi float [ %1081, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %787 = phi float [ %1082, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %788 = phi float [ %1085, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %789 = phi float [ %1086, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %790 = phi float [ %1087, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %791 = phi float [ %1088, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %792 = phi i32 [ %1965, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %793 = phi <2 x half> [ %2125, %.lr.ph ], [ %499, %.lr.ph.preheader ]
  %794 = phi <2 x half> [ %2124, %.lr.ph ], [ %498, %.lr.ph.preheader ]
  %795 = phi <2 x half> [ %2123, %.lr.ph ], [ %497, %.lr.ph.preheader ]
  %796 = phi <2 x half> [ %2122, %.lr.ph ], [ %496, %.lr.ph.preheader ]
  %797 = phi <2 x half> [ %2121, %.lr.ph ], [ %495, %.lr.ph.preheader ]
  %798 = phi <2 x half> [ %2120, %.lr.ph ], [ %494, %.lr.ph.preheader ]
  %799 = phi <2 x half> [ %2119, %.lr.ph ], [ %493, %.lr.ph.preheader ]
  %800 = phi <2 x half> [ %2118, %.lr.ph ], [ %492, %.lr.ph.preheader ]
  %801 = phi <2 x half> [ %2117, %.lr.ph ], [ %491, %.lr.ph.preheader ]
  %802 = phi <2 x half> [ %2116, %.lr.ph ], [ %490, %.lr.ph.preheader ]
  %803 = phi <2 x half> [ %2115, %.lr.ph ], [ %489, %.lr.ph.preheader ]
  %804 = phi <2 x half> [ %2114, %.lr.ph ], [ %488, %.lr.ph.preheader ]
  %805 = phi <2 x half> [ %2113, %.lr.ph ], [ %487, %.lr.ph.preheader ]
  %806 = phi <2 x half> [ %2112, %.lr.ph ], [ %486, %.lr.ph.preheader ]
  %807 = phi <2 x half> [ %2111, %.lr.ph ], [ %485, %.lr.ph.preheader ]
  %808 = phi <2 x half> [ %2110, %.lr.ph ], [ %484, %.lr.ph.preheader ]
  %809 = phi <2 x half> [ %2109, %.lr.ph ], [ %483, %.lr.ph.preheader ]
  %810 = phi <2 x half> [ %2108, %.lr.ph ], [ %482, %.lr.ph.preheader ]
  %811 = phi <2 x half> [ %2107, %.lr.ph ], [ %481, %.lr.ph.preheader ]
  %812 = phi <2 x half> [ %2106, %.lr.ph ], [ %480, %.lr.ph.preheader ]
  %813 = phi <2 x half> [ %2105, %.lr.ph ], [ %479, %.lr.ph.preheader ]
  %814 = phi <2 x half> [ %2104, %.lr.ph ], [ %478, %.lr.ph.preheader ]
  %815 = phi <2 x half> [ %2103, %.lr.ph ], [ %477, %.lr.ph.preheader ]
  %816 = phi <2 x half> [ %2102, %.lr.ph ], [ %476, %.lr.ph.preheader ]
  %817 = phi <2 x half> [ %2101, %.lr.ph ], [ %475, %.lr.ph.preheader ]
  %818 = phi <2 x half> [ %2100, %.lr.ph ], [ %474, %.lr.ph.preheader ]
  %819 = phi <2 x half> [ %2099, %.lr.ph ], [ %473, %.lr.ph.preheader ]
  %820 = phi <2 x half> [ %2098, %.lr.ph ], [ %472, %.lr.ph.preheader ]
  %821 = phi <2 x half> [ %2097, %.lr.ph ], [ %471, %.lr.ph.preheader ]
  %822 = phi <2 x half> [ %2096, %.lr.ph ], [ %470, %.lr.ph.preheader ]
  %823 = phi <2 x half> [ %2095, %.lr.ph ], [ %469, %.lr.ph.preheader ]
  %824 = phi <2 x half> [ %2094, %.lr.ph ], [ %468, %.lr.ph.preheader ]
  %825 = phi <2 x half> [ %2093, %.lr.ph ], [ %467, %.lr.ph.preheader ]
  %826 = phi <2 x half> [ %2092, %.lr.ph ], [ %466, %.lr.ph.preheader ]
  %827 = phi <2 x half> [ %2091, %.lr.ph ], [ %465, %.lr.ph.preheader ]
  %828 = phi <2 x half> [ %2090, %.lr.ph ], [ %464, %.lr.ph.preheader ]
  %829 = phi <2 x half> [ %2089, %.lr.ph ], [ %463, %.lr.ph.preheader ]
  %830 = phi <2 x half> [ %2088, %.lr.ph ], [ %462, %.lr.ph.preheader ]
  %831 = phi <2 x half> [ %2087, %.lr.ph ], [ %461, %.lr.ph.preheader ]
  %832 = phi <2 x half> [ %2086, %.lr.ph ], [ %460, %.lr.ph.preheader ]
  %833 = phi <2 x half> [ %2085, %.lr.ph ], [ %459, %.lr.ph.preheader ]
  %834 = phi <2 x half> [ %2084, %.lr.ph ], [ %458, %.lr.ph.preheader ]
  %835 = phi <2 x half> [ %2083, %.lr.ph ], [ %457, %.lr.ph.preheader ]
  %836 = phi <2 x half> [ %2082, %.lr.ph ], [ %456, %.lr.ph.preheader ]
  %837 = phi <2 x half> [ %2081, %.lr.ph ], [ %455, %.lr.ph.preheader ]
  %838 = phi <2 x half> [ %2080, %.lr.ph ], [ %454, %.lr.ph.preheader ]
  %839 = phi <2 x half> [ %2079, %.lr.ph ], [ %453, %.lr.ph.preheader ]
  %840 = phi <2 x half> [ %2078, %.lr.ph ], [ %452, %.lr.ph.preheader ]
  %841 = phi <2 x half> [ %2077, %.lr.ph ], [ %451, %.lr.ph.preheader ]
  %842 = phi <2 x half> [ %2076, %.lr.ph ], [ %450, %.lr.ph.preheader ]
  %843 = phi <2 x half> [ %2075, %.lr.ph ], [ %449, %.lr.ph.preheader ]
  %844 = phi <2 x half> [ %2074, %.lr.ph ], [ %448, %.lr.ph.preheader ]
  %845 = phi <2 x half> [ %2073, %.lr.ph ], [ %447, %.lr.ph.preheader ]
  %846 = phi <2 x half> [ %2072, %.lr.ph ], [ %446, %.lr.ph.preheader ]
  %847 = phi <2 x half> [ %2071, %.lr.ph ], [ %445, %.lr.ph.preheader ]
  %848 = phi <2 x half> [ %2070, %.lr.ph ], [ %444, %.lr.ph.preheader ]
  %849 = phi <2 x half> [ %2069, %.lr.ph ], [ %443, %.lr.ph.preheader ]
  %850 = phi <2 x half> [ %2068, %.lr.ph ], [ %442, %.lr.ph.preheader ]
  %851 = phi <2 x half> [ %2067, %.lr.ph ], [ %441, %.lr.ph.preheader ]
  %852 = phi <2 x half> [ %2066, %.lr.ph ], [ %440, %.lr.ph.preheader ]
  %853 = phi <2 x half> [ %2065, %.lr.ph ], [ %439, %.lr.ph.preheader ]
  %854 = phi <2 x half> [ %2064, %.lr.ph ], [ %438, %.lr.ph.preheader ]
  %855 = phi <2 x half> [ %2063, %.lr.ph ], [ %437, %.lr.ph.preheader ]
  %856 = phi <2 x half> [ %2062, %.lr.ph ], [ %436, %.lr.ph.preheader ]
  %857 = phi <2 x half> [ %2061, %.lr.ph ], [ %435, %.lr.ph.preheader ]
  %858 = phi <2 x half> [ %2060, %.lr.ph ], [ %434, %.lr.ph.preheader ]
  %859 = phi <2 x half> [ %2059, %.lr.ph ], [ %433, %.lr.ph.preheader ]
  %860 = phi <2 x half> [ %2058, %.lr.ph ], [ %432, %.lr.ph.preheader ]
  %861 = phi <2 x half> [ %2057, %.lr.ph ], [ %431, %.lr.ph.preheader ]
  %862 = phi <2 x half> [ %2056, %.lr.ph ], [ %430, %.lr.ph.preheader ]
  %863 = phi <2 x half> [ %2055, %.lr.ph ], [ %429, %.lr.ph.preheader ]
  %864 = phi <2 x half> [ %2054, %.lr.ph ], [ %428, %.lr.ph.preheader ]
  %865 = phi <2 x half> [ %2053, %.lr.ph ], [ %427, %.lr.ph.preheader ]
  %866 = phi <2 x half> [ %2052, %.lr.ph ], [ %426, %.lr.ph.preheader ]
  %867 = phi <2 x half> [ %2051, %.lr.ph ], [ %425, %.lr.ph.preheader ]
  %868 = phi <2 x half> [ %2050, %.lr.ph ], [ %424, %.lr.ph.preheader ]
  %869 = phi <2 x half> [ %2049, %.lr.ph ], [ %423, %.lr.ph.preheader ]
  %870 = phi <2 x half> [ %2048, %.lr.ph ], [ %422, %.lr.ph.preheader ]
  %871 = phi <2 x half> [ %2047, %.lr.ph ], [ %421, %.lr.ph.preheader ]
  %872 = phi <2 x half> [ %2046, %.lr.ph ], [ %420, %.lr.ph.preheader ]
  %873 = phi <2 x half> [ %2045, %.lr.ph ], [ %419, %.lr.ph.preheader ]
  %874 = phi <2 x half> [ %2044, %.lr.ph ], [ %418, %.lr.ph.preheader ]
  %875 = phi <2 x half> [ %2043, %.lr.ph ], [ %417, %.lr.ph.preheader ]
  %876 = phi <2 x half> [ %2042, %.lr.ph ], [ %416, %.lr.ph.preheader ]
  %877 = phi <2 x half> [ %2041, %.lr.ph ], [ %415, %.lr.ph.preheader ]
  %878 = phi <2 x half> [ %2040, %.lr.ph ], [ %414, %.lr.ph.preheader ]
  %879 = phi <2 x half> [ %2039, %.lr.ph ], [ %413, %.lr.ph.preheader ]
  %880 = phi <2 x half> [ %2038, %.lr.ph ], [ %412, %.lr.ph.preheader ]
  %881 = phi <2 x half> [ %2037, %.lr.ph ], [ %411, %.lr.ph.preheader ]
  %882 = phi <2 x half> [ %2036, %.lr.ph ], [ %410, %.lr.ph.preheader ]
  %883 = phi <2 x half> [ %2035, %.lr.ph ], [ %409, %.lr.ph.preheader ]
  %884 = phi <2 x half> [ %2034, %.lr.ph ], [ %408, %.lr.ph.preheader ]
  %885 = phi <2 x half> [ %2033, %.lr.ph ], [ %407, %.lr.ph.preheader ]
  %886 = phi <2 x half> [ %2032, %.lr.ph ], [ %406, %.lr.ph.preheader ]
  %887 = phi <2 x half> [ %2031, %.lr.ph ], [ %405, %.lr.ph.preheader ]
  %888 = phi <2 x half> [ %2030, %.lr.ph ], [ %404, %.lr.ph.preheader ]
  %889 = phi <2 x half> [ %2029, %.lr.ph ], [ %403, %.lr.ph.preheader ]
  %890 = phi <2 x half> [ %2028, %.lr.ph ], [ %402, %.lr.ph.preheader ]
  %891 = phi <2 x half> [ %2027, %.lr.ph ], [ %401, %.lr.ph.preheader ]
  %892 = phi <2 x half> [ %2026, %.lr.ph ], [ %400, %.lr.ph.preheader ]
  %893 = phi <2 x half> [ %2025, %.lr.ph ], [ %399, %.lr.ph.preheader ]
  %894 = phi <2 x half> [ %2024, %.lr.ph ], [ %398, %.lr.ph.preheader ]
  %895 = phi <2 x half> [ %2023, %.lr.ph ], [ %397, %.lr.ph.preheader ]
  %896 = phi <2 x half> [ %2022, %.lr.ph ], [ %396, %.lr.ph.preheader ]
  %897 = phi <2 x half> [ %2021, %.lr.ph ], [ %395, %.lr.ph.preheader ]
  %898 = phi <2 x half> [ %2020, %.lr.ph ], [ %394, %.lr.ph.preheader ]
  %899 = phi <2 x half> [ %2019, %.lr.ph ], [ %393, %.lr.ph.preheader ]
  %900 = phi <2 x half> [ %2018, %.lr.ph ], [ %392, %.lr.ph.preheader ]
  %901 = phi <2 x half> [ %2017, %.lr.ph ], [ %391, %.lr.ph.preheader ]
  %902 = phi <2 x half> [ %2016, %.lr.ph ], [ %390, %.lr.ph.preheader ]
  %903 = phi <2 x half> [ %2015, %.lr.ph ], [ %389, %.lr.ph.preheader ]
  %904 = phi <2 x half> [ %2014, %.lr.ph ], [ %388, %.lr.ph.preheader ]
  %905 = phi <2 x half> [ %2013, %.lr.ph ], [ %387, %.lr.ph.preheader ]
  %906 = phi <2 x half> [ %2012, %.lr.ph ], [ %386, %.lr.ph.preheader ]
  %907 = phi <2 x half> [ %2011, %.lr.ph ], [ %385, %.lr.ph.preheader ]
  %908 = phi <2 x half> [ %2010, %.lr.ph ], [ %384, %.lr.ph.preheader ]
  %909 = phi <2 x half> [ %2009, %.lr.ph ], [ %383, %.lr.ph.preheader ]
  %910 = phi <2 x half> [ %2008, %.lr.ph ], [ %382, %.lr.ph.preheader ]
  %911 = phi <2 x half> [ %2007, %.lr.ph ], [ %381, %.lr.ph.preheader ]
  %912 = phi <2 x half> [ %2006, %.lr.ph ], [ %380, %.lr.ph.preheader ]
  %913 = phi <2 x half> [ %2005, %.lr.ph ], [ %379, %.lr.ph.preheader ]
  %914 = phi <2 x half> [ %2004, %.lr.ph ], [ %378, %.lr.ph.preheader ]
  %915 = phi <2 x half> [ %2003, %.lr.ph ], [ %377, %.lr.ph.preheader ]
  %916 = phi <2 x half> [ %2002, %.lr.ph ], [ %376, %.lr.ph.preheader ]
  %917 = phi <2 x half> [ %2001, %.lr.ph ], [ %375, %.lr.ph.preheader ]
  %918 = phi <2 x half> [ %2000, %.lr.ph ], [ %374, %.lr.ph.preheader ]
  %919 = phi <2 x half> [ %1999, %.lr.ph ], [ %373, %.lr.ph.preheader ]
  %920 = phi <2 x half> [ %1998, %.lr.ph ], [ %372, %.lr.ph.preheader ]
  %921 = phi <2 x half> [ %1997, %.lr.ph ], [ %371, %.lr.ph.preheader ]
  %922 = phi <2 x half> [ %2157, %.lr.ph ], [ %531, %.lr.ph.preheader ]
  %923 = phi <2 x half> [ %2156, %.lr.ph ], [ %530, %.lr.ph.preheader ]
  %924 = phi <2 x half> [ %1996, %.lr.ph ], [ %370, %.lr.ph.preheader ]
  %925 = phi <2 x half> [ %1995, %.lr.ph ], [ %369, %.lr.ph.preheader ]
  %926 = phi <2 x half> [ %2155, %.lr.ph ], [ %529, %.lr.ph.preheader ]
  %927 = phi <2 x half> [ %2154, %.lr.ph ], [ %528, %.lr.ph.preheader ]
  %928 = phi <2 x half> [ %1994, %.lr.ph ], [ %368, %.lr.ph.preheader ]
  %929 = phi <2 x half> [ %1993, %.lr.ph ], [ %367, %.lr.ph.preheader ]
  %930 = phi <2 x half> [ %2153, %.lr.ph ], [ %527, %.lr.ph.preheader ]
  %931 = phi <2 x half> [ %2152, %.lr.ph ], [ %526, %.lr.ph.preheader ]
  %932 = phi <2 x half> [ %1992, %.lr.ph ], [ %366, %.lr.ph.preheader ]
  %933 = phi <2 x half> [ %1991, %.lr.ph ], [ %365, %.lr.ph.preheader ]
  %934 = phi <2 x half> [ %2151, %.lr.ph ], [ %525, %.lr.ph.preheader ]
  %935 = phi <2 x half> [ %2150, %.lr.ph ], [ %524, %.lr.ph.preheader ]
  %936 = phi <2 x half> [ %1990, %.lr.ph ], [ %364, %.lr.ph.preheader ]
  %937 = phi <2 x half> [ %1989, %.lr.ph ], [ %363, %.lr.ph.preheader ]
  %938 = phi <2 x half> [ %2149, %.lr.ph ], [ %523, %.lr.ph.preheader ]
  %939 = phi <2 x half> [ %2148, %.lr.ph ], [ %522, %.lr.ph.preheader ]
  %940 = phi <2 x half> [ %1988, %.lr.ph ], [ %362, %.lr.ph.preheader ]
  %941 = phi <2 x half> [ %1987, %.lr.ph ], [ %361, %.lr.ph.preheader ]
  %942 = phi <2 x half> [ %2147, %.lr.ph ], [ %521, %.lr.ph.preheader ]
  %943 = phi <2 x half> [ %2146, %.lr.ph ], [ %520, %.lr.ph.preheader ]
  %944 = phi <2 x half> [ %1986, %.lr.ph ], [ %360, %.lr.ph.preheader ]
  %945 = phi <2 x half> [ %1985, %.lr.ph ], [ %359, %.lr.ph.preheader ]
  %946 = phi <2 x half> [ %2145, %.lr.ph ], [ %519, %.lr.ph.preheader ]
  %947 = phi <2 x half> [ %2144, %.lr.ph ], [ %518, %.lr.ph.preheader ]
  %948 = phi <2 x half> [ %1984, %.lr.ph ], [ %358, %.lr.ph.preheader ]
  %949 = phi <2 x half> [ %1983, %.lr.ph ], [ %357, %.lr.ph.preheader ]
  %950 = phi <2 x half> [ %2143, %.lr.ph ], [ %517, %.lr.ph.preheader ]
  %951 = phi <2 x half> [ %2142, %.lr.ph ], [ %516, %.lr.ph.preheader ]
  %952 = phi <2 x half> [ %1982, %.lr.ph ], [ %356, %.lr.ph.preheader ]
  %953 = phi <2 x half> [ %1981, %.lr.ph ], [ %355, %.lr.ph.preheader ]
  %954 = phi <2 x half> [ %2141, %.lr.ph ], [ %515, %.lr.ph.preheader ]
  %955 = phi <2 x half> [ %2140, %.lr.ph ], [ %514, %.lr.ph.preheader ]
  %956 = phi <2 x half> [ %1980, %.lr.ph ], [ %354, %.lr.ph.preheader ]
  %957 = phi <2 x half> [ %1979, %.lr.ph ], [ %353, %.lr.ph.preheader ]
  %958 = phi <2 x half> [ %2139, %.lr.ph ], [ %513, %.lr.ph.preheader ]
  %959 = phi <2 x half> [ %2138, %.lr.ph ], [ %512, %.lr.ph.preheader ]
  %960 = phi <2 x half> [ %1978, %.lr.ph ], [ %352, %.lr.ph.preheader ]
  %961 = phi <2 x half> [ %1977, %.lr.ph ], [ %351, %.lr.ph.preheader ]
  %962 = phi <2 x half> [ %2137, %.lr.ph ], [ %511, %.lr.ph.preheader ]
  %963 = phi <2 x half> [ %2136, %.lr.ph ], [ %510, %.lr.ph.preheader ]
  %964 = phi <2 x half> [ %1976, %.lr.ph ], [ %350, %.lr.ph.preheader ]
  %965 = phi <2 x half> [ %1975, %.lr.ph ], [ %349, %.lr.ph.preheader ]
  %966 = phi <2 x half> [ %2135, %.lr.ph ], [ %509, %.lr.ph.preheader ]
  %967 = phi <2 x half> [ %2134, %.lr.ph ], [ %508, %.lr.ph.preheader ]
  %968 = phi <2 x half> [ %1974, %.lr.ph ], [ %348, %.lr.ph.preheader ]
  %969 = phi <2 x half> [ %1973, %.lr.ph ], [ %347, %.lr.ph.preheader ]
  %970 = phi <2 x half> [ %2133, %.lr.ph ], [ %507, %.lr.ph.preheader ]
  %971 = phi <2 x half> [ %2132, %.lr.ph ], [ %506, %.lr.ph.preheader ]
  %972 = phi <2 x half> [ %1972, %.lr.ph ], [ %346, %.lr.ph.preheader ]
  %973 = phi <2 x half> [ %1971, %.lr.ph ], [ %345, %.lr.ph.preheader ]
  %974 = phi <2 x half> [ %2131, %.lr.ph ], [ %505, %.lr.ph.preheader ]
  %975 = phi <2 x half> [ %2130, %.lr.ph ], [ %504, %.lr.ph.preheader ]
  %976 = phi <2 x half> [ %1970, %.lr.ph ], [ %344, %.lr.ph.preheader ]
  %977 = phi <2 x half> [ %1969, %.lr.ph ], [ %343, %.lr.ph.preheader ]
  %978 = phi <2 x half> [ %2129, %.lr.ph ], [ %503, %.lr.ph.preheader ]
  %979 = phi <2 x half> [ %2128, %.lr.ph ], [ %502, %.lr.ph.preheader ]
  %980 = phi <2 x half> [ %1968, %.lr.ph ], [ %342, %.lr.ph.preheader ]
  %981 = phi <2 x half> [ %1967, %.lr.ph ], [ %341, %.lr.ph.preheader ]
  %982 = phi <2 x half> [ %2127, %.lr.ph ], [ %501, %.lr.ph.preheader ]
  %983 = phi <2 x half> [ %2126, %.lr.ph ], [ %500, %.lr.ph.preheader ]
  %984 = phi <2 x half> [ %1966, %.lr.ph ], [ %340, %.lr.ph.preheader ]
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %985 = shufflevector <2 x half> %984, <2 x half> %983, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %986 = shufflevector <2 x half> %982, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %987 = shufflevector <8 x half> %985, <8 x half> %986, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %988 = shufflevector <2 x half> %981, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %989 = shufflevector <8 x half> %987, <8 x half> %988, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %989, ptr addrspace(3) %199, align 16
  %990 = shufflevector <2 x half> %980, <2 x half> %979, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %991 = shufflevector <2 x half> %978, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %992 = shufflevector <8 x half> %990, <8 x half> %991, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %993 = shufflevector <2 x half> %977, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %994 = shufflevector <8 x half> %992, <8 x half> %993, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %994, ptr addrspace(3) %201, align 16
  %995 = shufflevector <2 x half> %976, <2 x half> %975, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %996 = shufflevector <2 x half> %974, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %997 = shufflevector <8 x half> %995, <8 x half> %996, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %998 = shufflevector <2 x half> %973, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %999 = shufflevector <8 x half> %997, <8 x half> %998, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %999, ptr addrspace(3) %203, align 16
  %1000 = shufflevector <2 x half> %972, <2 x half> %971, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1001 = shufflevector <2 x half> %970, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1002 = shufflevector <8 x half> %1000, <8 x half> %1001, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1003 = shufflevector <2 x half> %969, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1004 = shufflevector <8 x half> %1002, <8 x half> %1003, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1004, ptr addrspace(3) %205, align 16
  %1005 = shufflevector <2 x half> %968, <2 x half> %967, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1006 = shufflevector <2 x half> %966, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1007 = shufflevector <8 x half> %1005, <8 x half> %1006, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1008 = shufflevector <2 x half> %965, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1009 = shufflevector <8 x half> %1007, <8 x half> %1008, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1009, ptr addrspace(3) %207, align 16
  %1010 = shufflevector <2 x half> %964, <2 x half> %963, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1011 = shufflevector <2 x half> %962, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1012 = shufflevector <8 x half> %1010, <8 x half> %1011, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1013 = shufflevector <2 x half> %961, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1014 = shufflevector <8 x half> %1012, <8 x half> %1013, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1014, ptr addrspace(3) %209, align 16
  %1015 = shufflevector <2 x half> %960, <2 x half> %959, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1016 = shufflevector <2 x half> %958, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1017 = shufflevector <8 x half> %1015, <8 x half> %1016, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1018 = shufflevector <2 x half> %957, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1019 = shufflevector <8 x half> %1017, <8 x half> %1018, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1019, ptr addrspace(3) %211, align 16
  %1020 = shufflevector <2 x half> %956, <2 x half> %955, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1021 = shufflevector <2 x half> %954, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1022 = shufflevector <8 x half> %1020, <8 x half> %1021, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1023 = shufflevector <2 x half> %953, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1024 = shufflevector <8 x half> %1022, <8 x half> %1023, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1024, ptr addrspace(3) %213, align 16
  %1025 = shufflevector <2 x half> %920, <2 x half> %919, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1026 = shufflevector <2 x half> %918, <2 x half> %917, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1027 = shufflevector <2 x half> %916, <2 x half> %915, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1028 = shufflevector <2 x half> %914, <2 x half> %913, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1029 = shufflevector <2 x half> %912, <2 x half> %911, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1030 = shufflevector <2 x half> %910, <2 x half> %909, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1031 = shufflevector <2 x half> %908, <2 x half> %907, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1032 = shufflevector <2 x half> %906, <2 x half> %905, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1033 = shufflevector <2 x half> %904, <2 x half> %903, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1034 = shufflevector <2 x half> %902, <2 x half> %901, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1035 = shufflevector <2 x half> %900, <2 x half> %899, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1036 = shufflevector <2 x half> %898, <2 x half> %897, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1037 = shufflevector <2 x half> %896, <2 x half> %895, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1038 = shufflevector <2 x half> %894, <2 x half> %893, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1039 = shufflevector <2 x half> %892, <2 x half> %891, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1040 = shufflevector <2 x half> %890, <2 x half> %889, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1041 = insertelement <4 x float> poison, float %776, i64 0
  %1042 = insertelement <4 x float> %1041, float %777, i64 1
  %1043 = insertelement <4 x float> %1042, float %778, i64 2
  %1044 = insertelement <4 x float> %1043, float %779, i64 3
  %1045 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1025, <4 x float> %1044, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1046 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1026, <4 x float> %1045, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1047 = insertelement <4 x float> poison, float %780, i64 0
  %1048 = insertelement <4 x float> %1047, float %781, i64 1
  %1049 = insertelement <4 x float> %1048, float %782, i64 2
  %1050 = insertelement <4 x float> %1049, float %783, i64 3
  %1051 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1025, <4 x float> %1050, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1052 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1026, <4 x float> %1051, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1053 = insertelement <4 x float> poison, float %784, i64 0
  %1054 = insertelement <4 x float> %1053, float %785, i64 1
  %1055 = insertelement <4 x float> %1054, float %786, i64 2
  %1056 = insertelement <4 x float> %1055, float %787, i64 3
  %1057 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1029, <4 x float> %1056, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1058 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1030, <4 x float> %1057, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1059 = insertelement <4 x float> poison, float %788, i64 0
  %1060 = insertelement <4 x float> %1059, float %789, i64 1
  %1061 = insertelement <4 x float> %1060, float %790, i64 2
  %1062 = insertelement <4 x float> %1061, float %791, i64 3
  %1063 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1029, <4 x float> %1062, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1064 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1030, <4 x float> %1063, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1065 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1027, <4 x float> %1046, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1066 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1028, <4 x float> %1065, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1067 = extractelement <4 x float> %1066, i64 0
  %1068 = extractelement <4 x float> %1066, i64 1
  %1069 = extractelement <4 x float> %1066, i64 2
  %1070 = extractelement <4 x float> %1066, i64 3
  %1071 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1027, <4 x float> %1052, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1072 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1028, <4 x float> %1071, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1073 = extractelement <4 x float> %1072, i64 0
  %1074 = extractelement <4 x float> %1072, i64 1
  %1075 = extractelement <4 x float> %1072, i64 2
  %1076 = extractelement <4 x float> %1072, i64 3
  %1077 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1031, <4 x float> %1058, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1078 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1032, <4 x float> %1077, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1079 = extractelement <4 x float> %1078, i64 0
  %1080 = extractelement <4 x float> %1078, i64 1
  %1081 = extractelement <4 x float> %1078, i64 2
  %1082 = extractelement <4 x float> %1078, i64 3
  %1083 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1031, <4 x float> %1064, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1084 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1032, <4 x float> %1083, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1085 = extractelement <4 x float> %1084, i64 0
  %1086 = extractelement <4 x float> %1084, i64 1
  %1087 = extractelement <4 x float> %1084, i64 2
  %1088 = extractelement <4 x float> %1084, i64 3
  %1089 = getelementptr i8, ptr addrspace(1) %775, i64 128
  %1090 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %1089, i16 0, i32 2147483646, i32 159744)
  %1091 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %68, i32 0, i32 0)
  %1092 = bitcast <4 x i32> %1091 to <8 x half>
  %1093 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %71, i32 0, i32 0)
  %1094 = bitcast <4 x i32> %1093 to <8 x half>
  %1095 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %74, i32 0, i32 0)
  %1096 = bitcast <4 x i32> %1095 to <8 x half>
  %1097 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %77, i32 0, i32 0)
  %1098 = bitcast <4 x i32> %1097 to <8 x half>
  %1099 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %80, i32 0, i32 0)
  %1100 = bitcast <4 x i32> %1099 to <8 x half>
  %1101 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %83, i32 0, i32 0)
  %1102 = bitcast <4 x i32> %1101 to <8 x half>
  %1103 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %86, i32 0, i32 0)
  %1104 = bitcast <4 x i32> %1103 to <8 x half>
  %1105 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1090, i32 %89, i32 0, i32 0)
  %1106 = bitcast <4 x i32> %1105 to <8 x half>
  %1107 = shufflevector <2 x half> %840, <2 x half> %839, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1108 = shufflevector <2 x half> %838, <2 x half> %837, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1109 = shufflevector <2 x half> %836, <2 x half> %835, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1110 = shufflevector <2 x half> %834, <2 x half> %833, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1111 = shufflevector <2 x half> %832, <2 x half> %831, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1112 = shufflevector <2 x half> %830, <2 x half> %829, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1113 = shufflevector <2 x half> %828, <2 x half> %827, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1114 = shufflevector <2 x half> %826, <2 x half> %825, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1115 = insertelement <4 x float> poison, float %758, i64 0
  %1116 = insertelement <4 x float> %1115, float %759, i64 1
  %1117 = insertelement <4 x float> %1116, float %760, i64 2
  %1118 = insertelement <4 x float> %1117, float %761, i64 3
  %1119 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1025, <4 x float> %1118, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1120 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1026, <4 x float> %1119, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1121 = insertelement <4 x float> poison, float %762, i64 0
  %1122 = insertelement <4 x float> %1121, float %763, i64 1
  %1123 = insertelement <4 x float> %1122, float %764, i64 2
  %1124 = insertelement <4 x float> %1123, float %765, i64 3
  %1125 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1025, <4 x float> %1124, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1126 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1026, <4 x float> %1125, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1127 = insertelement <4 x float> poison, float %766, i64 0
  %1128 = insertelement <4 x float> %1127, float %767, i64 1
  %1129 = insertelement <4 x float> %1128, float %768, i64 2
  %1130 = insertelement <4 x float> %1129, float %769, i64 3
  %1131 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1029, <4 x float> %1130, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1132 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1030, <4 x float> %1131, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1133 = insertelement <4 x float> poison, float %770, i64 0
  %1134 = insertelement <4 x float> %1133, float %771, i64 1
  %1135 = insertelement <4 x float> %1134, float %772, i64 2
  %1136 = insertelement <4 x float> %1135, float %773, i64 3
  %1137 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1029, <4 x float> %1136, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1138 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1030, <4 x float> %1137, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1139 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1027, <4 x float> %1120, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1140 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1028, <4 x float> %1139, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1141 = extractelement <4 x float> %1140, i64 0
  %1142 = extractelement <4 x float> %1140, i64 1
  %1143 = extractelement <4 x float> %1140, i64 2
  %1144 = extractelement <4 x float> %1140, i64 3
  %1145 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1027, <4 x float> %1126, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1146 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1028, <4 x float> %1145, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1147 = extractelement <4 x float> %1146, i64 0
  %1148 = extractelement <4 x float> %1146, i64 1
  %1149 = extractelement <4 x float> %1146, i64 2
  %1150 = extractelement <4 x float> %1146, i64 3
  %1151 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1031, <4 x float> %1132, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1152 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1032, <4 x float> %1151, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1153 = extractelement <4 x float> %1152, i64 0
  %1154 = extractelement <4 x float> %1152, i64 1
  %1155 = extractelement <4 x float> %1152, i64 2
  %1156 = extractelement <4 x float> %1152, i64 3
  %1157 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1031, <4 x float> %1138, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1158 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1032, <4 x float> %1157, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1159 = extractelement <4 x float> %1158, i64 0
  %1160 = extractelement <4 x float> %1158, i64 1
  %1161 = extractelement <4 x float> %1158, i64 2
  %1162 = extractelement <4 x float> %1158, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !7
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !8
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !9
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !10
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !11
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !12
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !13
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !14
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !15
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !16
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !17
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !18
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !19
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !20
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !21
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !22
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !23
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !24
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !25
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !26
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !27
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !28
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !29
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !30
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !31
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !32
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !33
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !34
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !35
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 2), !dbg !36
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 2), !dbg !37
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 2), !dbg !38
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !39
  %1163 = shufflevector <2 x half> %952, <2 x half> %951, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1164 = shufflevector <2 x half> %950, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1165 = shufflevector <8 x half> %1163, <8 x half> %1164, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1166 = shufflevector <2 x half> %949, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1167 = shufflevector <8 x half> %1165, <8 x half> %1166, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1167, ptr addrspace(3) %214, align 16
  %1168 = shufflevector <2 x half> %948, <2 x half> %947, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1169 = shufflevector <2 x half> %946, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1170 = shufflevector <8 x half> %1168, <8 x half> %1169, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1171 = shufflevector <2 x half> %945, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1172 = shufflevector <8 x half> %1170, <8 x half> %1171, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1172, ptr addrspace(3) %215, align 16
  %1173 = shufflevector <2 x half> %944, <2 x half> %943, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1174 = shufflevector <2 x half> %942, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1175 = shufflevector <8 x half> %1173, <8 x half> %1174, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1176 = shufflevector <2 x half> %941, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1177 = shufflevector <8 x half> %1175, <8 x half> %1176, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1177, ptr addrspace(3) %216, align 16
  %1178 = shufflevector <2 x half> %940, <2 x half> %939, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1179 = shufflevector <2 x half> %938, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1180 = shufflevector <8 x half> %1178, <8 x half> %1179, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1181 = shufflevector <2 x half> %937, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1182 = shufflevector <8 x half> %1180, <8 x half> %1181, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1182, ptr addrspace(3) %217, align 16
  %1183 = shufflevector <2 x half> %936, <2 x half> %935, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1184 = shufflevector <2 x half> %934, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1185 = shufflevector <8 x half> %1183, <8 x half> %1184, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1186 = shufflevector <2 x half> %933, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1187 = shufflevector <8 x half> %1185, <8 x half> %1186, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1187, ptr addrspace(3) %218, align 16
  %1188 = shufflevector <2 x half> %932, <2 x half> %931, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1189 = shufflevector <2 x half> %930, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1190 = shufflevector <8 x half> %1188, <8 x half> %1189, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1191 = shufflevector <2 x half> %929, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1192 = shufflevector <8 x half> %1190, <8 x half> %1191, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1192, ptr addrspace(3) %219, align 16
  %1193 = shufflevector <2 x half> %928, <2 x half> %927, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1194 = shufflevector <2 x half> %926, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1195 = shufflevector <8 x half> %1193, <8 x half> %1194, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1196 = shufflevector <2 x half> %925, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1197 = shufflevector <8 x half> %1195, <8 x half> %1196, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1197, ptr addrspace(3) %220, align 16
  %1198 = shufflevector <2 x half> %924, <2 x half> %923, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %1199 = shufflevector <2 x half> %922, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1200 = shufflevector <8 x half> %1198, <8 x half> %1199, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %1201 = shufflevector <2 x half> %921, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1202 = shufflevector <8 x half> %1200, <8 x half> %1201, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %1202, ptr addrspace(3) %221, align 16
  %1203 = shufflevector <2 x half> %824, <2 x half> %823, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1204 = shufflevector <2 x half> %822, <2 x half> %821, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1205 = shufflevector <2 x half> %820, <2 x half> %819, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1206 = shufflevector <2 x half> %818, <2 x half> %817, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1207 = shufflevector <2 x half> %816, <2 x half> %815, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1208 = shufflevector <2 x half> %814, <2 x half> %813, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1209 = shufflevector <2 x half> %812, <2 x half> %811, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1210 = shufflevector <2 x half> %810, <2 x half> %809, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1211 = insertelement <4 x float> poison, float %742, i64 0
  %1212 = insertelement <4 x float> %1211, float %743, i64 1
  %1213 = insertelement <4 x float> %1212, float %744, i64 2
  %1214 = insertelement <4 x float> %1213, float %745, i64 3
  %1215 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1025, <4 x float> %1214, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1216 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1026, <4 x float> %1215, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1217 = insertelement <4 x float> poison, float %746, i64 0
  %1218 = insertelement <4 x float> %1217, float %747, i64 1
  %1219 = insertelement <4 x float> %1218, float %748, i64 2
  %1220 = insertelement <4 x float> %1219, float %749, i64 3
  %1221 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1025, <4 x float> %1220, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1222 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1026, <4 x float> %1221, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1223 = insertelement <4 x float> poison, float %750, i64 0
  %1224 = insertelement <4 x float> %1223, float %751, i64 1
  %1225 = insertelement <4 x float> %1224, float %752, i64 2
  %1226 = insertelement <4 x float> %1225, float %753, i64 3
  %1227 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1029, <4 x float> %1226, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1228 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1030, <4 x float> %1227, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1229 = insertelement <4 x float> poison, float %754, i64 0
  %1230 = insertelement <4 x float> %1229, float %755, i64 1
  %1231 = insertelement <4 x float> %1230, float %756, i64 2
  %1232 = insertelement <4 x float> %1231, float %757, i64 3
  %1233 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1029, <4 x float> %1232, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1234 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1030, <4 x float> %1233, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1235 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1027, <4 x float> %1216, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1236 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1028, <4 x float> %1235, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1237 = extractelement <4 x float> %1236, i64 0
  %1238 = extractelement <4 x float> %1236, i64 1
  %1239 = extractelement <4 x float> %1236, i64 2
  %1240 = extractelement <4 x float> %1236, i64 3
  %1241 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1027, <4 x float> %1222, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1242 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1028, <4 x float> %1241, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1243 = extractelement <4 x float> %1242, i64 0
  %1244 = extractelement <4 x float> %1242, i64 1
  %1245 = extractelement <4 x float> %1242, i64 2
  %1246 = extractelement <4 x float> %1242, i64 3
  %1247 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1031, <4 x float> %1228, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1248 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1032, <4 x float> %1247, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1249 = extractelement <4 x float> %1248, i64 0
  %1250 = extractelement <4 x float> %1248, i64 1
  %1251 = extractelement <4 x float> %1248, i64 2
  %1252 = extractelement <4 x float> %1248, i64 3
  %1253 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1031, <4 x float> %1234, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1254 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1032, <4 x float> %1253, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1255 = extractelement <4 x float> %1254, i64 0
  %1256 = extractelement <4 x float> %1254, i64 1
  %1257 = extractelement <4 x float> %1254, i64 2
  %1258 = extractelement <4 x float> %1254, i64 3
  %1259 = getelementptr i8, ptr addrspace(1) %774, i64 128
  %1260 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %1259, i16 0, i32 2147483646, i32 159744)
  %1261 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %140, i32 0, i32 0)
  %1262 = bitcast <4 x i32> %1261 to <8 x half>
  %1263 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %143, i32 0, i32 0)
  %1264 = bitcast <4 x i32> %1263 to <8 x half>
  %1265 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %146, i32 0, i32 0)
  %1266 = bitcast <4 x i32> %1265 to <8 x half>
  %1267 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %149, i32 0, i32 0)
  %1268 = bitcast <4 x i32> %1267 to <8 x half>
  %1269 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %152, i32 0, i32 0)
  %1270 = bitcast <4 x i32> %1269 to <8 x half>
  %1271 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %155, i32 0, i32 0)
  %1272 = bitcast <4 x i32> %1271 to <8 x half>
  %1273 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %158, i32 0, i32 0)
  %1274 = bitcast <4 x i32> %1273 to <8 x half>
  %1275 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1260, i32 %161, i32 0, i32 0)
  %1276 = bitcast <4 x i32> %1275 to <8 x half>
  %1277 = shufflevector <2 x half> %808, <2 x half> %807, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1278 = shufflevector <2 x half> %806, <2 x half> %805, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1279 = shufflevector <2 x half> %804, <2 x half> %803, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1280 = shufflevector <2 x half> %802, <2 x half> %801, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1281 = shufflevector <2 x half> %800, <2 x half> %799, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1282 = shufflevector <2 x half> %798, <2 x half> %797, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1283 = shufflevector <2 x half> %796, <2 x half> %795, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1284 = shufflevector <2 x half> %794, <2 x half> %793, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1285 = insertelement <4 x float> poison, float %726, i64 0
  %1286 = insertelement <4 x float> %1285, float %727, i64 1
  %1287 = insertelement <4 x float> %1286, float %728, i64 2
  %1288 = insertelement <4 x float> %1287, float %729, i64 3
  %1289 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1025, <4 x float> %1288, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1290 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1026, <4 x float> %1289, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1291 = insertelement <4 x float> poison, float %730, i64 0
  %1292 = insertelement <4 x float> %1291, float %731, i64 1
  %1293 = insertelement <4 x float> %1292, float %732, i64 2
  %1294 = insertelement <4 x float> %1293, float %733, i64 3
  %1295 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1025, <4 x float> %1294, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1296 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1026, <4 x float> %1295, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1297 = insertelement <4 x float> poison, float %734, i64 0
  %1298 = insertelement <4 x float> %1297, float %735, i64 1
  %1299 = insertelement <4 x float> %1298, float %736, i64 2
  %1300 = insertelement <4 x float> %1299, float %737, i64 3
  %1301 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1029, <4 x float> %1300, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1302 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1030, <4 x float> %1301, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1303 = insertelement <4 x float> poison, float %738, i64 0
  %1304 = insertelement <4 x float> %1303, float %739, i64 1
  %1305 = insertelement <4 x float> %1304, float %740, i64 2
  %1306 = insertelement <4 x float> %1305, float %741, i64 3
  %1307 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1029, <4 x float> %1306, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1308 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1030, <4 x float> %1307, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1309 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1027, <4 x float> %1290, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1310 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1028, <4 x float> %1309, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1311 = extractelement <4 x float> %1310, i64 0
  %1312 = extractelement <4 x float> %1310, i64 1
  %1313 = extractelement <4 x float> %1310, i64 2
  %1314 = extractelement <4 x float> %1310, i64 3
  %1315 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1027, <4 x float> %1296, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1316 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1028, <4 x float> %1315, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1317 = extractelement <4 x float> %1316, i64 0
  %1318 = extractelement <4 x float> %1316, i64 1
  %1319 = extractelement <4 x float> %1316, i64 2
  %1320 = extractelement <4 x float> %1316, i64 3
  %1321 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1031, <4 x float> %1302, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1322 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1032, <4 x float> %1321, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1323 = extractelement <4 x float> %1322, i64 0
  %1324 = extractelement <4 x float> %1322, i64 1
  %1325 = extractelement <4 x float> %1322, i64 2
  %1326 = extractelement <4 x float> %1322, i64 3
  %1327 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1031, <4 x float> %1308, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1328 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1032, <4 x float> %1327, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1329 = extractelement <4 x float> %1328, i64 0
  %1330 = extractelement <4 x float> %1328, i64 1
  %1331 = extractelement <4 x float> %1328, i64 2
  %1332 = extractelement <4 x float> %1328, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !40
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !41
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !42
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !43
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !44
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !45
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !46
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !47
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !48
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !49
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !50
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !51
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !52
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !53
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !54
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !55
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !56
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !57
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !58
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !59
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !60
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !61
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !62
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !63
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !64
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !65
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !66
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !67
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !68
  tail call void @llvm.amdgcn.sched.group.barrier(i32 512, i32 1, i32 3), !dbg !69
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 3), !dbg !70
  tail call void @llvm.amdgcn.sched.group.barrier(i32 32, i32 1, i32 3), !dbg !71
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !72
  %1333 = shufflevector <2 x half> %888, <2 x half> %887, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1334 = shufflevector <2 x half> %886, <2 x half> %885, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1335 = shufflevector <2 x half> %884, <2 x half> %883, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1336 = shufflevector <2 x half> %882, <2 x half> %881, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1337 = shufflevector <2 x half> %880, <2 x half> %879, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1338 = shufflevector <2 x half> %878, <2 x half> %877, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1339 = shufflevector <2 x half> %876, <2 x half> %875, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1340 = shufflevector <2 x half> %874, <2 x half> %873, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1341 = insertelement <4 x float> poison, float %710, i64 0
  %1342 = insertelement <4 x float> %1341, float %711, i64 1
  %1343 = insertelement <4 x float> %1342, float %712, i64 2
  %1344 = insertelement <4 x float> %1343, float %713, i64 3
  %1345 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1333, <4 x float> %1344, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1346 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1334, <4 x float> %1345, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1347 = insertelement <4 x float> poison, float %714, i64 0
  %1348 = insertelement <4 x float> %1347, float %715, i64 1
  %1349 = insertelement <4 x float> %1348, float %716, i64 2
  %1350 = insertelement <4 x float> %1349, float %717, i64 3
  %1351 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1333, <4 x float> %1350, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1352 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1334, <4 x float> %1351, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1353 = insertelement <4 x float> poison, float %718, i64 0
  %1354 = insertelement <4 x float> %1353, float %719, i64 1
  %1355 = insertelement <4 x float> %1354, float %720, i64 2
  %1356 = insertelement <4 x float> %1355, float %721, i64 3
  %1357 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1337, <4 x float> %1356, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1358 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1338, <4 x float> %1357, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1359 = insertelement <4 x float> poison, float %722, i64 0
  %1360 = insertelement <4 x float> %1359, float %723, i64 1
  %1361 = insertelement <4 x float> %1360, float %724, i64 2
  %1362 = insertelement <4 x float> %1361, float %725, i64 3
  %1363 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1337, <4 x float> %1362, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1364 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1338, <4 x float> %1363, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1365 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1335, <4 x float> %1346, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1366 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1336, <4 x float> %1365, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1367 = extractelement <4 x float> %1366, i64 0
  %1368 = extractelement <4 x float> %1366, i64 1
  %1369 = extractelement <4 x float> %1366, i64 2
  %1370 = extractelement <4 x float> %1366, i64 3
  %1371 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1335, <4 x float> %1352, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1372 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1336, <4 x float> %1371, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1373 = extractelement <4 x float> %1372, i64 0
  %1374 = extractelement <4 x float> %1372, i64 1
  %1375 = extractelement <4 x float> %1372, i64 2
  %1376 = extractelement <4 x float> %1372, i64 3
  %1377 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1339, <4 x float> %1358, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1378 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1340, <4 x float> %1377, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1379 = extractelement <4 x float> %1378, i64 0
  %1380 = extractelement <4 x float> %1378, i64 1
  %1381 = extractelement <4 x float> %1378, i64 2
  %1382 = extractelement <4 x float> %1378, i64 3
  %1383 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1339, <4 x float> %1364, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1384 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1340, <4 x float> %1383, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1385 = extractelement <4 x float> %1384, i64 0
  %1386 = extractelement <4 x float> %1384, i64 1
  %1387 = extractelement <4 x float> %1384, i64 2
  %1388 = extractelement <4 x float> %1384, i64 3
  %1389 = insertelement <4 x float> poison, float %694, i64 0
  %1390 = insertelement <4 x float> %1389, float %695, i64 1
  %1391 = insertelement <4 x float> %1390, float %696, i64 2
  %1392 = insertelement <4 x float> %1391, float %697, i64 3
  %1393 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1333, <4 x float> %1392, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1394 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1334, <4 x float> %1393, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1395 = insertelement <4 x float> poison, float %698, i64 0
  %1396 = insertelement <4 x float> %1395, float %699, i64 1
  %1397 = insertelement <4 x float> %1396, float %700, i64 2
  %1398 = insertelement <4 x float> %1397, float %701, i64 3
  %1399 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1333, <4 x float> %1398, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1400 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1334, <4 x float> %1399, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1401 = insertelement <4 x float> poison, float %702, i64 0
  %1402 = insertelement <4 x float> %1401, float %703, i64 1
  %1403 = insertelement <4 x float> %1402, float %704, i64 2
  %1404 = insertelement <4 x float> %1403, float %705, i64 3
  %1405 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1337, <4 x float> %1404, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1406 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1338, <4 x float> %1405, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1407 = insertelement <4 x float> poison, float %706, i64 0
  %1408 = insertelement <4 x float> %1407, float %707, i64 1
  %1409 = insertelement <4 x float> %1408, float %708, i64 2
  %1410 = insertelement <4 x float> %1409, float %709, i64 3
  %1411 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1337, <4 x float> %1410, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1412 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1338, <4 x float> %1411, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1413 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1335, <4 x float> %1394, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1414 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1336, <4 x float> %1413, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1415 = extractelement <4 x float> %1414, i64 0
  %1416 = extractelement <4 x float> %1414, i64 1
  %1417 = extractelement <4 x float> %1414, i64 2
  %1418 = extractelement <4 x float> %1414, i64 3
  %1419 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1335, <4 x float> %1400, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1420 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1336, <4 x float> %1419, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1421 = extractelement <4 x float> %1420, i64 0
  %1422 = extractelement <4 x float> %1420, i64 1
  %1423 = extractelement <4 x float> %1420, i64 2
  %1424 = extractelement <4 x float> %1420, i64 3
  %1425 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1339, <4 x float> %1406, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1426 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1340, <4 x float> %1425, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1427 = extractelement <4 x float> %1426, i64 0
  %1428 = extractelement <4 x float> %1426, i64 1
  %1429 = extractelement <4 x float> %1426, i64 2
  %1430 = extractelement <4 x float> %1426, i64 3
  %1431 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1339, <4 x float> %1412, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1432 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1340, <4 x float> %1431, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1433 = extractelement <4 x float> %1432, i64 0
  %1434 = extractelement <4 x float> %1432, i64 1
  %1435 = extractelement <4 x float> %1432, i64 2
  %1436 = extractelement <4 x float> %1432, i64 3
  %1437 = insertelement <4 x float> poison, float %678, i64 0
  %1438 = insertelement <4 x float> %1437, float %679, i64 1
  %1439 = insertelement <4 x float> %1438, float %680, i64 2
  %1440 = insertelement <4 x float> %1439, float %681, i64 3
  %1441 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1333, <4 x float> %1440, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1442 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1334, <4 x float> %1441, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1443 = insertelement <4 x float> poison, float %682, i64 0
  %1444 = insertelement <4 x float> %1443, float %683, i64 1
  %1445 = insertelement <4 x float> %1444, float %684, i64 2
  %1446 = insertelement <4 x float> %1445, float %685, i64 3
  %1447 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1333, <4 x float> %1446, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1448 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1334, <4 x float> %1447, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1449 = insertelement <4 x float> poison, float %686, i64 0
  %1450 = insertelement <4 x float> %1449, float %687, i64 1
  %1451 = insertelement <4 x float> %1450, float %688, i64 2
  %1452 = insertelement <4 x float> %1451, float %689, i64 3
  %1453 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1337, <4 x float> %1452, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1454 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1338, <4 x float> %1453, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1455 = insertelement <4 x float> poison, float %690, i64 0
  %1456 = insertelement <4 x float> %1455, float %691, i64 1
  %1457 = insertelement <4 x float> %1456, float %692, i64 2
  %1458 = insertelement <4 x float> %1457, float %693, i64 3
  %1459 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1337, <4 x float> %1458, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1460 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1338, <4 x float> %1459, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1461 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1335, <4 x float> %1442, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1462 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1336, <4 x float> %1461, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1463 = extractelement <4 x float> %1462, i64 0
  %1464 = extractelement <4 x float> %1462, i64 1
  %1465 = extractelement <4 x float> %1462, i64 2
  %1466 = extractelement <4 x float> %1462, i64 3
  %1467 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1335, <4 x float> %1448, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1468 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1336, <4 x float> %1467, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1469 = extractelement <4 x float> %1468, i64 0
  %1470 = extractelement <4 x float> %1468, i64 1
  %1471 = extractelement <4 x float> %1468, i64 2
  %1472 = extractelement <4 x float> %1468, i64 3
  %1473 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1339, <4 x float> %1454, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1474 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1340, <4 x float> %1473, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1475 = extractelement <4 x float> %1474, i64 0
  %1476 = extractelement <4 x float> %1474, i64 1
  %1477 = extractelement <4 x float> %1474, i64 2
  %1478 = extractelement <4 x float> %1474, i64 3
  %1479 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1339, <4 x float> %1460, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1480 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1340, <4 x float> %1479, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1481 = extractelement <4 x float> %1480, i64 0
  %1482 = extractelement <4 x float> %1480, i64 1
  %1483 = extractelement <4 x float> %1480, i64 2
  %1484 = extractelement <4 x float> %1480, i64 3
  %1485 = insertelement <4 x float> poison, float %662, i64 0
  %1486 = insertelement <4 x float> %1485, float %663, i64 1
  %1487 = insertelement <4 x float> %1486, float %664, i64 2
  %1488 = insertelement <4 x float> %1487, float %665, i64 3
  %1489 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1333, <4 x float> %1488, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1490 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1334, <4 x float> %1489, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1491 = insertelement <4 x float> poison, float %666, i64 0
  %1492 = insertelement <4 x float> %1491, float %667, i64 1
  %1493 = insertelement <4 x float> %1492, float %668, i64 2
  %1494 = insertelement <4 x float> %1493, float %669, i64 3
  %1495 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1333, <4 x float> %1494, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1496 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1334, <4 x float> %1495, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1497 = insertelement <4 x float> poison, float %670, i64 0
  %1498 = insertelement <4 x float> %1497, float %671, i64 1
  %1499 = insertelement <4 x float> %1498, float %672, i64 2
  %1500 = insertelement <4 x float> %1499, float %673, i64 3
  %1501 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1337, <4 x float> %1500, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1502 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1338, <4 x float> %1501, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1503 = insertelement <4 x float> poison, float %674, i64 0
  %1504 = insertelement <4 x float> %1503, float %675, i64 1
  %1505 = insertelement <4 x float> %1504, float %676, i64 2
  %1506 = insertelement <4 x float> %1505, float %677, i64 3
  %1507 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1337, <4 x float> %1506, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1508 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1338, <4 x float> %1507, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1509 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1335, <4 x float> %1490, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1510 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1336, <4 x float> %1509, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1511 = extractelement <4 x float> %1510, i64 0
  %1512 = extractelement <4 x float> %1510, i64 1
  %1513 = extractelement <4 x float> %1510, i64 2
  %1514 = extractelement <4 x float> %1510, i64 3
  %1515 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1335, <4 x float> %1496, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1516 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1336, <4 x float> %1515, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1517 = extractelement <4 x float> %1516, i64 0
  %1518 = extractelement <4 x float> %1516, i64 1
  %1519 = extractelement <4 x float> %1516, i64 2
  %1520 = extractelement <4 x float> %1516, i64 3
  %1521 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1339, <4 x float> %1502, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1522 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1340, <4 x float> %1521, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1523 = extractelement <4 x float> %1522, i64 0
  %1524 = extractelement <4 x float> %1522, i64 1
  %1525 = extractelement <4 x float> %1522, i64 2
  %1526 = extractelement <4 x float> %1522, i64 3
  %1527 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1339, <4 x float> %1508, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1528 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1340, <4 x float> %1527, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1529 = extractelement <4 x float> %1528, i64 0
  %1530 = extractelement <4 x float> %1528, i64 1
  %1531 = extractelement <4 x float> %1528, i64 2
  %1532 = extractelement <4 x float> %1528, i64 3
  %1533 = shufflevector <2 x half> %872, <2 x half> %871, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1534 = shufflevector <2 x half> %870, <2 x half> %869, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1535 = shufflevector <2 x half> %868, <2 x half> %867, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1536 = shufflevector <2 x half> %866, <2 x half> %865, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1537 = shufflevector <2 x half> %864, <2 x half> %863, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1538 = shufflevector <2 x half> %862, <2 x half> %861, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1539 = shufflevector <2 x half> %860, <2 x half> %859, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1540 = shufflevector <2 x half> %858, <2 x half> %857, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1541 = insertelement <4 x float> poison, float %646, i64 0
  %1542 = insertelement <4 x float> %1541, float %647, i64 1
  %1543 = insertelement <4 x float> %1542, float %648, i64 2
  %1544 = insertelement <4 x float> %1543, float %649, i64 3
  %1545 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1533, <4 x float> %1544, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1546 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1534, <4 x float> %1545, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1547 = insertelement <4 x float> poison, float %650, i64 0
  %1548 = insertelement <4 x float> %1547, float %651, i64 1
  %1549 = insertelement <4 x float> %1548, float %652, i64 2
  %1550 = insertelement <4 x float> %1549, float %653, i64 3
  %1551 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1533, <4 x float> %1550, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1552 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1534, <4 x float> %1551, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1553 = insertelement <4 x float> poison, float %654, i64 0
  %1554 = insertelement <4 x float> %1553, float %655, i64 1
  %1555 = insertelement <4 x float> %1554, float %656, i64 2
  %1556 = insertelement <4 x float> %1555, float %657, i64 3
  %1557 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1537, <4 x float> %1556, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1558 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1538, <4 x float> %1557, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1559 = insertelement <4 x float> poison, float %658, i64 0
  %1560 = insertelement <4 x float> %1559, float %659, i64 1
  %1561 = insertelement <4 x float> %1560, float %660, i64 2
  %1562 = insertelement <4 x float> %1561, float %661, i64 3
  %1563 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1537, <4 x float> %1562, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1564 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1538, <4 x float> %1563, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1565 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1535, <4 x float> %1546, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1566 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1536, <4 x float> %1565, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1567 = extractelement <4 x float> %1566, i64 0
  %1568 = extractelement <4 x float> %1566, i64 1
  %1569 = extractelement <4 x float> %1566, i64 2
  %1570 = extractelement <4 x float> %1566, i64 3
  %1571 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1535, <4 x float> %1552, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1572 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1536, <4 x float> %1571, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1573 = extractelement <4 x float> %1572, i64 0
  %1574 = extractelement <4 x float> %1572, i64 1
  %1575 = extractelement <4 x float> %1572, i64 2
  %1576 = extractelement <4 x float> %1572, i64 3
  %1577 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1539, <4 x float> %1558, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1578 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1540, <4 x float> %1577, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1579 = extractelement <4 x float> %1578, i64 0
  %1580 = extractelement <4 x float> %1578, i64 1
  %1581 = extractelement <4 x float> %1578, i64 2
  %1582 = extractelement <4 x float> %1578, i64 3
  %1583 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1539, <4 x float> %1564, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1584 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1540, <4 x float> %1583, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1585 = extractelement <4 x float> %1584, i64 0
  %1586 = extractelement <4 x float> %1584, i64 1
  %1587 = extractelement <4 x float> %1584, i64 2
  %1588 = extractelement <4 x float> %1584, i64 3
  %1589 = insertelement <4 x float> poison, float %630, i64 0
  %1590 = insertelement <4 x float> %1589, float %631, i64 1
  %1591 = insertelement <4 x float> %1590, float %632, i64 2
  %1592 = insertelement <4 x float> %1591, float %633, i64 3
  %1593 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1533, <4 x float> %1592, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1594 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1534, <4 x float> %1593, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1595 = insertelement <4 x float> poison, float %634, i64 0
  %1596 = insertelement <4 x float> %1595, float %635, i64 1
  %1597 = insertelement <4 x float> %1596, float %636, i64 2
  %1598 = insertelement <4 x float> %1597, float %637, i64 3
  %1599 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1533, <4 x float> %1598, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1600 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1534, <4 x float> %1599, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1601 = insertelement <4 x float> poison, float %638, i64 0
  %1602 = insertelement <4 x float> %1601, float %639, i64 1
  %1603 = insertelement <4 x float> %1602, float %640, i64 2
  %1604 = insertelement <4 x float> %1603, float %641, i64 3
  %1605 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1537, <4 x float> %1604, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1606 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1538, <4 x float> %1605, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1607 = insertelement <4 x float> poison, float %642, i64 0
  %1608 = insertelement <4 x float> %1607, float %643, i64 1
  %1609 = insertelement <4 x float> %1608, float %644, i64 2
  %1610 = insertelement <4 x float> %1609, float %645, i64 3
  %1611 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1537, <4 x float> %1610, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1612 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1538, <4 x float> %1611, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1613 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1535, <4 x float> %1594, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1614 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1536, <4 x float> %1613, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1615 = extractelement <4 x float> %1614, i64 0
  %1616 = extractelement <4 x float> %1614, i64 1
  %1617 = extractelement <4 x float> %1614, i64 2
  %1618 = extractelement <4 x float> %1614, i64 3
  %1619 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1535, <4 x float> %1600, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1620 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1536, <4 x float> %1619, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1621 = extractelement <4 x float> %1620, i64 0
  %1622 = extractelement <4 x float> %1620, i64 1
  %1623 = extractelement <4 x float> %1620, i64 2
  %1624 = extractelement <4 x float> %1620, i64 3
  %1625 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1539, <4 x float> %1606, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1626 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1540, <4 x float> %1625, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1627 = extractelement <4 x float> %1626, i64 0
  %1628 = extractelement <4 x float> %1626, i64 1
  %1629 = extractelement <4 x float> %1626, i64 2
  %1630 = extractelement <4 x float> %1626, i64 3
  %1631 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1539, <4 x float> %1612, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1632 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1540, <4 x float> %1631, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1633 = extractelement <4 x float> %1632, i64 0
  %1634 = extractelement <4 x float> %1632, i64 1
  %1635 = extractelement <4 x float> %1632, i64 2
  %1636 = extractelement <4 x float> %1632, i64 3
  %1637 = shufflevector <2 x half> %856, <2 x half> %855, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1638 = shufflevector <2 x half> %854, <2 x half> %853, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1639 = shufflevector <2 x half> %852, <2 x half> %851, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1640 = shufflevector <2 x half> %850, <2 x half> %849, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1641 = shufflevector <2 x half> %848, <2 x half> %847, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1642 = shufflevector <2 x half> %846, <2 x half> %845, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1643 = shufflevector <2 x half> %844, <2 x half> %843, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1644 = shufflevector <2 x half> %842, <2 x half> %841, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1645 = insertelement <4 x float> poison, float %582, i64 0
  %1646 = insertelement <4 x float> %1645, float %583, i64 1
  %1647 = insertelement <4 x float> %1646, float %584, i64 2
  %1648 = insertelement <4 x float> %1647, float %585, i64 3
  %1649 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1637, <4 x float> %1648, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1650 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1638, <4 x float> %1649, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1651 = insertelement <4 x float> poison, float %586, i64 0
  %1652 = insertelement <4 x float> %1651, float %587, i64 1
  %1653 = insertelement <4 x float> %1652, float %588, i64 2
  %1654 = insertelement <4 x float> %1653, float %589, i64 3
  %1655 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1637, <4 x float> %1654, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1656 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1638, <4 x float> %1655, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1657 = insertelement <4 x float> poison, float %590, i64 0
  %1658 = insertelement <4 x float> %1657, float %591, i64 1
  %1659 = insertelement <4 x float> %1658, float %592, i64 2
  %1660 = insertelement <4 x float> %1659, float %593, i64 3
  %1661 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1033, <4 x half> %1641, <4 x float> %1660, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1662 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1034, <4 x half> %1642, <4 x float> %1661, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1663 = insertelement <4 x float> poison, float %594, i64 0
  %1664 = insertelement <4 x float> %1663, float %595, i64 1
  %1665 = insertelement <4 x float> %1664, float %596, i64 2
  %1666 = insertelement <4 x float> %1665, float %597, i64 3
  %1667 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1037, <4 x half> %1641, <4 x float> %1666, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1668 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1038, <4 x half> %1642, <4 x float> %1667, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1669 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1639, <4 x float> %1650, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1670 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1640, <4 x float> %1669, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1671 = extractelement <4 x float> %1670, i64 0
  %1672 = extractelement <4 x float> %1670, i64 1
  %1673 = extractelement <4 x float> %1670, i64 2
  %1674 = extractelement <4 x float> %1670, i64 3
  %1675 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1639, <4 x float> %1656, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1676 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1640, <4 x float> %1675, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1677 = extractelement <4 x float> %1676, i64 0
  %1678 = extractelement <4 x float> %1676, i64 1
  %1679 = extractelement <4 x float> %1676, i64 2
  %1680 = extractelement <4 x float> %1676, i64 3
  %1681 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1035, <4 x half> %1643, <4 x float> %1662, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1682 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1036, <4 x half> %1644, <4 x float> %1681, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1683 = extractelement <4 x float> %1682, i64 0
  %1684 = extractelement <4 x float> %1682, i64 1
  %1685 = extractelement <4 x float> %1682, i64 2
  %1686 = extractelement <4 x float> %1682, i64 3
  %1687 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1039, <4 x half> %1643, <4 x float> %1668, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1688 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1040, <4 x half> %1644, <4 x float> %1687, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1689 = extractelement <4 x float> %1688, i64 0
  %1690 = extractelement <4 x float> %1688, i64 1
  %1691 = extractelement <4 x float> %1688, i64 2
  %1692 = extractelement <4 x float> %1688, i64 3
  %1693 = insertelement <4 x float> poison, float %566, i64 0
  %1694 = insertelement <4 x float> %1693, float %567, i64 1
  %1695 = insertelement <4 x float> %1694, float %568, i64 2
  %1696 = insertelement <4 x float> %1695, float %569, i64 3
  %1697 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1637, <4 x float> %1696, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1698 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1638, <4 x float> %1697, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1699 = insertelement <4 x float> poison, float %570, i64 0
  %1700 = insertelement <4 x float> %1699, float %571, i64 1
  %1701 = insertelement <4 x float> %1700, float %572, i64 2
  %1702 = insertelement <4 x float> %1701, float %573, i64 3
  %1703 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1637, <4 x float> %1702, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1704 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1638, <4 x float> %1703, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1705 = insertelement <4 x float> poison, float %574, i64 0
  %1706 = insertelement <4 x float> %1705, float %575, i64 1
  %1707 = insertelement <4 x float> %1706, float %576, i64 2
  %1708 = insertelement <4 x float> %1707, float %577, i64 3
  %1709 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1107, <4 x half> %1641, <4 x float> %1708, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1710 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1108, <4 x half> %1642, <4 x float> %1709, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1711 = insertelement <4 x float> poison, float %578, i64 0
  %1712 = insertelement <4 x float> %1711, float %579, i64 1
  %1713 = insertelement <4 x float> %1712, float %580, i64 2
  %1714 = insertelement <4 x float> %1713, float %581, i64 3
  %1715 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1111, <4 x half> %1641, <4 x float> %1714, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1716 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1112, <4 x half> %1642, <4 x float> %1715, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1717 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1639, <4 x float> %1698, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1718 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1640, <4 x float> %1717, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1719 = extractelement <4 x float> %1718, i64 0
  %1720 = extractelement <4 x float> %1718, i64 1
  %1721 = extractelement <4 x float> %1718, i64 2
  %1722 = extractelement <4 x float> %1718, i64 3
  %1723 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1639, <4 x float> %1704, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1724 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1640, <4 x float> %1723, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1725 = extractelement <4 x float> %1724, i64 0
  %1726 = extractelement <4 x float> %1724, i64 1
  %1727 = extractelement <4 x float> %1724, i64 2
  %1728 = extractelement <4 x float> %1724, i64 3
  %1729 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1109, <4 x half> %1643, <4 x float> %1710, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1730 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1110, <4 x half> %1644, <4 x float> %1729, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1731 = extractelement <4 x float> %1730, i64 0
  %1732 = extractelement <4 x float> %1730, i64 1
  %1733 = extractelement <4 x float> %1730, i64 2
  %1734 = extractelement <4 x float> %1730, i64 3
  %1735 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1113, <4 x half> %1643, <4 x float> %1716, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1736 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1114, <4 x half> %1644, <4 x float> %1735, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1737 = extractelement <4 x float> %1736, i64 0
  %1738 = extractelement <4 x float> %1736, i64 1
  %1739 = extractelement <4 x float> %1736, i64 2
  %1740 = extractelement <4 x float> %1736, i64 3
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !73
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1741 = load <8 x half>, ptr addrspace(3) %237, align 16
  %1742 = load <8 x half>, ptr addrspace(3) %239, align 16
  %1743 = load <8 x half>, ptr addrspace(3) %241, align 16
  %1744 = load <8 x half>, ptr addrspace(3) %243, align 16
  %1745 = load <8 x half>, ptr addrspace(3) %250, align 16
  %1746 = load <8 x half>, ptr addrspace(3) %252, align 16
  %1747 = load <8 x half>, ptr addrspace(3) %254, align 16
  %1748 = load <8 x half>, ptr addrspace(3) %256, align 16
  %1749 = insertelement <4 x float> poison, float %614, i64 0
  %1750 = insertelement <4 x float> %1749, float %615, i64 1
  %1751 = insertelement <4 x float> %1750, float %616, i64 2
  %1752 = insertelement <4 x float> %1751, float %617, i64 3
  %1753 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1533, <4 x float> %1752, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1754 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1534, <4 x float> %1753, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1755 = insertelement <4 x float> poison, float %618, i64 0
  %1756 = insertelement <4 x float> %1755, float %619, i64 1
  %1757 = insertelement <4 x float> %1756, float %620, i64 2
  %1758 = insertelement <4 x float> %1757, float %621, i64 3
  %1759 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1533, <4 x float> %1758, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1760 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1534, <4 x float> %1759, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1761 = insertelement <4 x float> poison, float %622, i64 0
  %1762 = insertelement <4 x float> %1761, float %623, i64 1
  %1763 = insertelement <4 x float> %1762, float %624, i64 2
  %1764 = insertelement <4 x float> %1763, float %625, i64 3
  %1765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1537, <4 x float> %1764, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1766 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1538, <4 x float> %1765, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1767 = insertelement <4 x float> poison, float %626, i64 0
  %1768 = insertelement <4 x float> %1767, float %627, i64 1
  %1769 = insertelement <4 x float> %1768, float %628, i64 2
  %1770 = insertelement <4 x float> %1769, float %629, i64 3
  %1771 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1537, <4 x float> %1770, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1772 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1538, <4 x float> %1771, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1773 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1535, <4 x float> %1754, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1774 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1536, <4 x float> %1773, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1775 = extractelement <4 x float> %1774, i64 0
  %1776 = extractelement <4 x float> %1774, i64 1
  %1777 = extractelement <4 x float> %1774, i64 2
  %1778 = extractelement <4 x float> %1774, i64 3
  %1779 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1535, <4 x float> %1760, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1780 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1536, <4 x float> %1779, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1781 = extractelement <4 x float> %1780, i64 0
  %1782 = extractelement <4 x float> %1780, i64 1
  %1783 = extractelement <4 x float> %1780, i64 2
  %1784 = extractelement <4 x float> %1780, i64 3
  %1785 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1539, <4 x float> %1766, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1786 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1540, <4 x float> %1785, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1787 = extractelement <4 x float> %1786, i64 0
  %1788 = extractelement <4 x float> %1786, i64 1
  %1789 = extractelement <4 x float> %1786, i64 2
  %1790 = extractelement <4 x float> %1786, i64 3
  %1791 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1539, <4 x float> %1772, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1792 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1540, <4 x float> %1791, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1793 = extractelement <4 x float> %1792, i64 0
  %1794 = extractelement <4 x float> %1792, i64 1
  %1795 = extractelement <4 x float> %1792, i64 2
  %1796 = extractelement <4 x float> %1792, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !74
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !75
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !76
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !77
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !78
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !79
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !80
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !81
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !82
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !83
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !84
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !85
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !86
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !87
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !88
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !89
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !90
  %1797 = load <8 x half>, ptr addrspace(3) %263, align 16
  %1798 = load <8 x half>, ptr addrspace(3) %265, align 16
  %1799 = load <8 x half>, ptr addrspace(3) %267, align 16
  %1800 = load <8 x half>, ptr addrspace(3) %269, align 16
  %1801 = load <8 x half>, ptr addrspace(3) %276, align 16
  %1802 = load <8 x half>, ptr addrspace(3) %278, align 16
  %1803 = load <8 x half>, ptr addrspace(3) %280, align 16
  %1804 = load <8 x half>, ptr addrspace(3) %282, align 16
  %1805 = insertelement <4 x float> poison, float %598, i64 0
  %1806 = insertelement <4 x float> %1805, float %599, i64 1
  %1807 = insertelement <4 x float> %1806, float %600, i64 2
  %1808 = insertelement <4 x float> %1807, float %601, i64 3
  %1809 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1533, <4 x float> %1808, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1810 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1534, <4 x float> %1809, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1811 = insertelement <4 x float> poison, float %602, i64 0
  %1812 = insertelement <4 x float> %1811, float %603, i64 1
  %1813 = insertelement <4 x float> %1812, float %604, i64 2
  %1814 = insertelement <4 x float> %1813, float %605, i64 3
  %1815 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1533, <4 x float> %1814, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1816 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1534, <4 x float> %1815, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1817 = insertelement <4 x float> poison, float %606, i64 0
  %1818 = insertelement <4 x float> %1817, float %607, i64 1
  %1819 = insertelement <4 x float> %1818, float %608, i64 2
  %1820 = insertelement <4 x float> %1819, float %609, i64 3
  %1821 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1537, <4 x float> %1820, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1822 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1538, <4 x float> %1821, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1823 = insertelement <4 x float> poison, float %610, i64 0
  %1824 = insertelement <4 x float> %1823, float %611, i64 1
  %1825 = insertelement <4 x float> %1824, float %612, i64 2
  %1826 = insertelement <4 x float> %1825, float %613, i64 3
  %1827 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1537, <4 x float> %1826, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1828 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1538, <4 x float> %1827, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1829 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1535, <4 x float> %1810, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1830 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1536, <4 x float> %1829, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1831 = extractelement <4 x float> %1830, i64 0
  %1832 = extractelement <4 x float> %1830, i64 1
  %1833 = extractelement <4 x float> %1830, i64 2
  %1834 = extractelement <4 x float> %1830, i64 3
  %1835 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1535, <4 x float> %1816, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1836 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1536, <4 x float> %1835, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1837 = extractelement <4 x float> %1836, i64 0
  %1838 = extractelement <4 x float> %1836, i64 1
  %1839 = extractelement <4 x float> %1836, i64 2
  %1840 = extractelement <4 x float> %1836, i64 3
  %1841 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1539, <4 x float> %1822, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1842 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1540, <4 x float> %1841, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1843 = extractelement <4 x float> %1842, i64 0
  %1844 = extractelement <4 x float> %1842, i64 1
  %1845 = extractelement <4 x float> %1842, i64 2
  %1846 = extractelement <4 x float> %1842, i64 3
  %1847 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1539, <4 x float> %1828, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1848 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1540, <4 x float> %1847, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1849 = extractelement <4 x float> %1848, i64 0
  %1850 = extractelement <4 x float> %1848, i64 1
  %1851 = extractelement <4 x float> %1848, i64 2
  %1852 = extractelement <4 x float> %1848, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !91
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !92
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !93
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !94
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !95
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !96
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !97
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !98
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !99
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !100
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !101
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !102
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !103
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !104
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 1), !dbg !105
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 1), !dbg !106
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !107
  %1853 = load <8 x half>, ptr addrspace(3) %292, align 16
  %1854 = load <8 x half>, ptr addrspace(3) %294, align 16
  %1855 = load <8 x half>, ptr addrspace(3) %296, align 16
  %1856 = load <8 x half>, ptr addrspace(3) %298, align 16
  %1857 = load <8 x half>, ptr addrspace(3) %305, align 16
  %1858 = load <8 x half>, ptr addrspace(3) %307, align 16
  %1859 = load <8 x half>, ptr addrspace(3) %309, align 16
  %1860 = load <8 x half>, ptr addrspace(3) %311, align 16
  %1861 = insertelement <4 x float> poison, float %550, i64 0
  %1862 = insertelement <4 x float> %1861, float %551, i64 1
  %1863 = insertelement <4 x float> %1862, float %552, i64 2
  %1864 = insertelement <4 x float> %1863, float %553, i64 3
  %1865 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1637, <4 x float> %1864, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1866 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1638, <4 x float> %1865, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1867 = insertelement <4 x float> poison, float %554, i64 0
  %1868 = insertelement <4 x float> %1867, float %555, i64 1
  %1869 = insertelement <4 x float> %1868, float %556, i64 2
  %1870 = insertelement <4 x float> %1869, float %557, i64 3
  %1871 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1637, <4 x float> %1870, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1872 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1638, <4 x float> %1871, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1873 = insertelement <4 x float> poison, float %558, i64 0
  %1874 = insertelement <4 x float> %1873, float %559, i64 1
  %1875 = insertelement <4 x float> %1874, float %560, i64 2
  %1876 = insertelement <4 x float> %1875, float %561, i64 3
  %1877 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1203, <4 x half> %1641, <4 x float> %1876, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1878 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1204, <4 x half> %1642, <4 x float> %1877, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1879 = insertelement <4 x float> poison, float %562, i64 0
  %1880 = insertelement <4 x float> %1879, float %563, i64 1
  %1881 = insertelement <4 x float> %1880, float %564, i64 2
  %1882 = insertelement <4 x float> %1881, float %565, i64 3
  %1883 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1207, <4 x half> %1641, <4 x float> %1882, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1884 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1208, <4 x half> %1642, <4 x float> %1883, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1639, <4 x float> %1866, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1886 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1640, <4 x float> %1885, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1887 = extractelement <4 x float> %1886, i64 0
  %1888 = extractelement <4 x float> %1886, i64 1
  %1889 = extractelement <4 x float> %1886, i64 2
  %1890 = extractelement <4 x float> %1886, i64 3
  %1891 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1639, <4 x float> %1872, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1892 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1640, <4 x float> %1891, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1893 = extractelement <4 x float> %1892, i64 0
  %1894 = extractelement <4 x float> %1892, i64 1
  %1895 = extractelement <4 x float> %1892, i64 2
  %1896 = extractelement <4 x float> %1892, i64 3
  %1897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1205, <4 x half> %1643, <4 x float> %1878, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1898 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1206, <4 x half> %1644, <4 x float> %1897, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1899 = extractelement <4 x float> %1898, i64 0
  %1900 = extractelement <4 x float> %1898, i64 1
  %1901 = extractelement <4 x float> %1898, i64 2
  %1902 = extractelement <4 x float> %1898, i64 3
  %1903 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1209, <4 x half> %1643, <4 x float> %1884, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1904 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1210, <4 x half> %1644, <4 x float> %1903, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1905 = extractelement <4 x float> %1904, i64 0
  %1906 = extractelement <4 x float> %1904, i64 1
  %1907 = extractelement <4 x float> %1904, i64 2
  %1908 = extractelement <4 x float> %1904, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !108
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !109
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !110
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !111
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !112
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !113
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !114
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !115
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !116
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !117
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !118
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !119
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !120
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !121
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !122
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !123
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !124
  %1909 = load <8 x half>, ptr addrspace(3) %318, align 16
  %1910 = load <8 x half>, ptr addrspace(3) %320, align 16
  %1911 = load <8 x half>, ptr addrspace(3) %322, align 16
  %1912 = load <8 x half>, ptr addrspace(3) %324, align 16
  %1913 = load <8 x half>, ptr addrspace(3) %331, align 16
  %1914 = load <8 x half>, ptr addrspace(3) %333, align 16
  %1915 = load <8 x half>, ptr addrspace(3) %335, align 16
  %1916 = load <8 x half>, ptr addrspace(3) %337, align 16
  %1917 = insertelement <4 x float> poison, float %534, i64 0
  %1918 = insertelement <4 x float> %1917, float %535, i64 1
  %1919 = insertelement <4 x float> %1918, float %536, i64 2
  %1920 = insertelement <4 x float> %1919, float %537, i64 3
  %1921 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1637, <4 x float> %1920, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1922 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1638, <4 x float> %1921, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1923 = insertelement <4 x float> poison, float %538, i64 0
  %1924 = insertelement <4 x float> %1923, float %539, i64 1
  %1925 = insertelement <4 x float> %1924, float %540, i64 2
  %1926 = insertelement <4 x float> %1925, float %541, i64 3
  %1927 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1637, <4 x float> %1926, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1928 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1638, <4 x float> %1927, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1929 = insertelement <4 x float> poison, float %542, i64 0
  %1930 = insertelement <4 x float> %1929, float %543, i64 1
  %1931 = insertelement <4 x float> %1930, float %544, i64 2
  %1932 = insertelement <4 x float> %1931, float %545, i64 3
  %1933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1277, <4 x half> %1641, <4 x float> %1932, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1934 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1278, <4 x half> %1642, <4 x float> %1933, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1935 = insertelement <4 x float> poison, float %546, i64 0
  %1936 = insertelement <4 x float> %1935, float %547, i64 1
  %1937 = insertelement <4 x float> %1936, float %548, i64 2
  %1938 = insertelement <4 x float> %1937, float %549, i64 3
  %1939 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1281, <4 x half> %1641, <4 x float> %1938, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1940 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1282, <4 x half> %1642, <4 x float> %1939, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1941 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1639, <4 x float> %1922, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1942 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1640, <4 x float> %1941, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1943 = extractelement <4 x float> %1942, i64 0
  %1944 = extractelement <4 x float> %1942, i64 1
  %1945 = extractelement <4 x float> %1942, i64 2
  %1946 = extractelement <4 x float> %1942, i64 3
  %1947 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1639, <4 x float> %1928, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1948 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1640, <4 x float> %1947, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1949 = extractelement <4 x float> %1948, i64 0
  %1950 = extractelement <4 x float> %1948, i64 1
  %1951 = extractelement <4 x float> %1948, i64 2
  %1952 = extractelement <4 x float> %1948, i64 3
  %1953 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1279, <4 x half> %1643, <4 x float> %1934, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1954 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1280, <4 x half> %1644, <4 x float> %1953, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1955 = extractelement <4 x float> %1954, i64 0
  %1956 = extractelement <4 x float> %1954, i64 1
  %1957 = extractelement <4 x float> %1954, i64 2
  %1958 = extractelement <4 x float> %1954, i64 3
  %1959 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1283, <4 x half> %1643, <4 x float> %1940, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1960 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1284, <4 x half> %1644, <4 x float> %1959, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %1961 = extractelement <4 x float> %1960, i64 0
  %1962 = extractelement <4 x float> %1960, i64 1
  %1963 = extractelement <4 x float> %1960, i64 2
  %1964 = extractelement <4 x float> %1960, i64 3
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !125
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !126
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !127
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !128
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !129
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !130
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !131
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !132
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !133
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !134
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !135
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !136
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !137
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !138
  tail call void @llvm.amdgcn.sched.group.barrier(i32 8, i32 2, i32 0), !dbg !139
  tail call void @llvm.amdgcn.sched.group.barrier(i32 256, i32 1, i32 0), !dbg !140
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !141
  %1965 = add nuw nsw i32 %792, 1
  %exitcond.not = icmp eq i32 %792, %533
  %1966 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1967 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1968 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1969 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1970 = shufflevector <8 x half> %1096, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1971 = shufflevector <8 x half> %1096, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1972 = shufflevector <8 x half> %1098, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1973 = shufflevector <8 x half> %1098, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1974 = shufflevector <8 x half> %1100, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1975 = shufflevector <8 x half> %1100, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1976 = shufflevector <8 x half> %1102, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1977 = shufflevector <8 x half> %1102, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1978 = shufflevector <8 x half> %1104, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1979 = shufflevector <8 x half> %1104, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1980 = shufflevector <8 x half> %1106, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1981 = shufflevector <8 x half> %1106, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1982 = shufflevector <8 x half> %1262, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1983 = shufflevector <8 x half> %1262, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1984 = shufflevector <8 x half> %1264, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1985 = shufflevector <8 x half> %1264, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1986 = shufflevector <8 x half> %1266, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1987 = shufflevector <8 x half> %1266, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1988 = shufflevector <8 x half> %1268, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1989 = shufflevector <8 x half> %1268, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1990 = shufflevector <8 x half> %1270, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1991 = shufflevector <8 x half> %1270, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1992 = shufflevector <8 x half> %1272, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1993 = shufflevector <8 x half> %1272, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1994 = shufflevector <8 x half> %1274, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1995 = shufflevector <8 x half> %1274, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1996 = shufflevector <8 x half> %1276, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1997 = shufflevector <8 x half> %1276, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1998 = shufflevector <8 x half> %1741, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1999 = shufflevector <8 x half> %1741, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2000 = shufflevector <8 x half> %1741, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2001 = shufflevector <8 x half> %1741, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2002 = shufflevector <8 x half> %1742, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2003 = shufflevector <8 x half> %1742, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2004 = shufflevector <8 x half> %1742, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2005 = shufflevector <8 x half> %1742, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2006 = shufflevector <8 x half> %1743, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2007 = shufflevector <8 x half> %1743, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2008 = shufflevector <8 x half> %1743, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2009 = shufflevector <8 x half> %1743, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2010 = shufflevector <8 x half> %1744, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2011 = shufflevector <8 x half> %1744, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2012 = shufflevector <8 x half> %1744, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2013 = shufflevector <8 x half> %1744, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2014 = shufflevector <8 x half> %1853, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2015 = shufflevector <8 x half> %1853, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2016 = shufflevector <8 x half> %1853, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2017 = shufflevector <8 x half> %1853, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2018 = shufflevector <8 x half> %1854, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2019 = shufflevector <8 x half> %1854, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2020 = shufflevector <8 x half> %1854, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2021 = shufflevector <8 x half> %1854, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2022 = shufflevector <8 x half> %1855, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2023 = shufflevector <8 x half> %1855, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2024 = shufflevector <8 x half> %1855, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2025 = shufflevector <8 x half> %1855, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2026 = shufflevector <8 x half> %1856, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2027 = shufflevector <8 x half> %1856, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2028 = shufflevector <8 x half> %1856, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2029 = shufflevector <8 x half> %1856, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2030 = shufflevector <8 x half> %1745, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2031 = shufflevector <8 x half> %1745, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2032 = shufflevector <8 x half> %1745, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2033 = shufflevector <8 x half> %1745, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2034 = shufflevector <8 x half> %1746, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2035 = shufflevector <8 x half> %1746, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2036 = shufflevector <8 x half> %1746, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2037 = shufflevector <8 x half> %1746, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2038 = shufflevector <8 x half> %1747, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2039 = shufflevector <8 x half> %1747, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2040 = shufflevector <8 x half> %1747, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2041 = shufflevector <8 x half> %1747, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2042 = shufflevector <8 x half> %1748, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2043 = shufflevector <8 x half> %1748, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2044 = shufflevector <8 x half> %1748, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2045 = shufflevector <8 x half> %1748, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2046 = shufflevector <8 x half> %1797, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2047 = shufflevector <8 x half> %1797, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2048 = shufflevector <8 x half> %1797, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2049 = shufflevector <8 x half> %1797, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2050 = shufflevector <8 x half> %1798, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2051 = shufflevector <8 x half> %1798, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2052 = shufflevector <8 x half> %1798, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2053 = shufflevector <8 x half> %1798, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2054 = shufflevector <8 x half> %1799, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2055 = shufflevector <8 x half> %1799, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2056 = shufflevector <8 x half> %1799, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2057 = shufflevector <8 x half> %1799, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2058 = shufflevector <8 x half> %1800, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2059 = shufflevector <8 x half> %1800, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2060 = shufflevector <8 x half> %1800, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2061 = shufflevector <8 x half> %1800, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2062 = shufflevector <8 x half> %1801, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2063 = shufflevector <8 x half> %1801, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2064 = shufflevector <8 x half> %1801, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2065 = shufflevector <8 x half> %1801, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2066 = shufflevector <8 x half> %1802, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2067 = shufflevector <8 x half> %1802, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2068 = shufflevector <8 x half> %1802, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2069 = shufflevector <8 x half> %1802, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2070 = shufflevector <8 x half> %1803, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2071 = shufflevector <8 x half> %1803, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2072 = shufflevector <8 x half> %1803, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2073 = shufflevector <8 x half> %1803, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2074 = shufflevector <8 x half> %1804, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2075 = shufflevector <8 x half> %1804, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2076 = shufflevector <8 x half> %1804, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2077 = shufflevector <8 x half> %1804, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2078 = shufflevector <8 x half> %1857, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2079 = shufflevector <8 x half> %1857, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2080 = shufflevector <8 x half> %1857, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2081 = shufflevector <8 x half> %1857, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2082 = shufflevector <8 x half> %1858, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2083 = shufflevector <8 x half> %1858, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2084 = shufflevector <8 x half> %1858, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2085 = shufflevector <8 x half> %1858, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2086 = shufflevector <8 x half> %1859, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2087 = shufflevector <8 x half> %1859, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2088 = shufflevector <8 x half> %1859, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2089 = shufflevector <8 x half> %1859, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2090 = shufflevector <8 x half> %1860, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2091 = shufflevector <8 x half> %1860, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2092 = shufflevector <8 x half> %1860, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2093 = shufflevector <8 x half> %1860, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2094 = shufflevector <8 x half> %1909, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2095 = shufflevector <8 x half> %1909, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2096 = shufflevector <8 x half> %1909, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2097 = shufflevector <8 x half> %1909, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2098 = shufflevector <8 x half> %1910, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2099 = shufflevector <8 x half> %1910, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2100 = shufflevector <8 x half> %1910, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2101 = shufflevector <8 x half> %1910, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2102 = shufflevector <8 x half> %1911, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2103 = shufflevector <8 x half> %1911, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2104 = shufflevector <8 x half> %1911, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2105 = shufflevector <8 x half> %1911, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2106 = shufflevector <8 x half> %1912, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2107 = shufflevector <8 x half> %1912, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2108 = shufflevector <8 x half> %1912, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2109 = shufflevector <8 x half> %1912, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2110 = shufflevector <8 x half> %1913, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2111 = shufflevector <8 x half> %1913, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2112 = shufflevector <8 x half> %1913, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2113 = shufflevector <8 x half> %1913, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2114 = shufflevector <8 x half> %1914, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2115 = shufflevector <8 x half> %1914, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2116 = shufflevector <8 x half> %1914, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2117 = shufflevector <8 x half> %1914, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2118 = shufflevector <8 x half> %1915, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2119 = shufflevector <8 x half> %1915, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2120 = shufflevector <8 x half> %1915, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2121 = shufflevector <8 x half> %1915, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2122 = shufflevector <8 x half> %1916, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2123 = shufflevector <8 x half> %1916, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2124 = shufflevector <8 x half> %1916, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2125 = shufflevector <8 x half> %1916, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2126 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2127 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2128 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2129 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2130 = shufflevector <8 x half> %1096, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2131 = shufflevector <8 x half> %1096, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2132 = shufflevector <8 x half> %1098, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2133 = shufflevector <8 x half> %1098, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2134 = shufflevector <8 x half> %1100, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2135 = shufflevector <8 x half> %1100, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2136 = shufflevector <8 x half> %1102, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2137 = shufflevector <8 x half> %1102, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2138 = shufflevector <8 x half> %1104, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2139 = shufflevector <8 x half> %1104, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2140 = shufflevector <8 x half> %1106, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2141 = shufflevector <8 x half> %1106, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2142 = shufflevector <8 x half> %1262, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2143 = shufflevector <8 x half> %1262, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2144 = shufflevector <8 x half> %1264, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2145 = shufflevector <8 x half> %1264, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2146 = shufflevector <8 x half> %1266, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2147 = shufflevector <8 x half> %1266, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2148 = shufflevector <8 x half> %1268, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2149 = shufflevector <8 x half> %1268, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2150 = shufflevector <8 x half> %1270, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2151 = shufflevector <8 x half> %1270, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2152 = shufflevector <8 x half> %1272, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2153 = shufflevector <8 x half> %1272, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2154 = shufflevector <8 x half> %1274, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2155 = shufflevector <8 x half> %1274, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2156 = shufflevector <8 x half> %1276, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2157 = shufflevector <8 x half> %1276, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %12
  %2158 = phi float [ 0.000000e+00, %12 ], [ %1067, %.lr.ph ], !dbg !142
  %2159 = phi float [ 0.000000e+00, %12 ], [ %1068, %.lr.ph ], !dbg !142
  %2160 = phi float [ 0.000000e+00, %12 ], [ %1069, %.lr.ph ], !dbg !142
  %2161 = phi float [ 0.000000e+00, %12 ], [ %1070, %.lr.ph ], !dbg !142
  %2162 = phi float [ 0.000000e+00, %12 ], [ %1073, %.lr.ph ], !dbg !142
  %2163 = phi float [ 0.000000e+00, %12 ], [ %1074, %.lr.ph ], !dbg !142
  %2164 = phi float [ 0.000000e+00, %12 ], [ %1075, %.lr.ph ], !dbg !142
  %2165 = phi float [ 0.000000e+00, %12 ], [ %1076, %.lr.ph ], !dbg !142
  %2166 = phi float [ 0.000000e+00, %12 ], [ %1079, %.lr.ph ], !dbg !142
  %2167 = phi float [ 0.000000e+00, %12 ], [ %1080, %.lr.ph ], !dbg !142
  %2168 = phi float [ 0.000000e+00, %12 ], [ %1081, %.lr.ph ], !dbg !142
  %2169 = phi float [ 0.000000e+00, %12 ], [ %1082, %.lr.ph ], !dbg !142
  %2170 = phi float [ 0.000000e+00, %12 ], [ %1085, %.lr.ph ], !dbg !142
  %2171 = phi float [ 0.000000e+00, %12 ], [ %1086, %.lr.ph ], !dbg !142
  %2172 = phi float [ 0.000000e+00, %12 ], [ %1087, %.lr.ph ], !dbg !142
  %2173 = phi float [ 0.000000e+00, %12 ], [ %1088, %.lr.ph ], !dbg !142
  %2174 = phi float [ 0.000000e+00, %12 ], [ %1141, %.lr.ph ], !dbg !143
  %2175 = phi float [ 0.000000e+00, %12 ], [ %1142, %.lr.ph ], !dbg !143
  %2176 = phi float [ 0.000000e+00, %12 ], [ %1143, %.lr.ph ], !dbg !143
  %2177 = phi float [ 0.000000e+00, %12 ], [ %1144, %.lr.ph ], !dbg !143
  %2178 = phi float [ 0.000000e+00, %12 ], [ %1147, %.lr.ph ], !dbg !143
  %2179 = phi float [ 0.000000e+00, %12 ], [ %1148, %.lr.ph ], !dbg !143
  %2180 = phi float [ 0.000000e+00, %12 ], [ %1149, %.lr.ph ], !dbg !143
  %2181 = phi float [ 0.000000e+00, %12 ], [ %1150, %.lr.ph ], !dbg !143
  %2182 = phi float [ 0.000000e+00, %12 ], [ %1153, %.lr.ph ], !dbg !143
  %2183 = phi float [ 0.000000e+00, %12 ], [ %1154, %.lr.ph ], !dbg !143
  %2184 = phi float [ 0.000000e+00, %12 ], [ %1155, %.lr.ph ], !dbg !143
  %2185 = phi float [ 0.000000e+00, %12 ], [ %1156, %.lr.ph ], !dbg !143
  %2186 = phi float [ 0.000000e+00, %12 ], [ %1159, %.lr.ph ], !dbg !143
  %2187 = phi float [ 0.000000e+00, %12 ], [ %1160, %.lr.ph ], !dbg !143
  %2188 = phi float [ 0.000000e+00, %12 ], [ %1161, %.lr.ph ], !dbg !143
  %2189 = phi float [ 0.000000e+00, %12 ], [ %1162, %.lr.ph ], !dbg !143
  %2190 = phi float [ 0.000000e+00, %12 ], [ %1237, %.lr.ph ], !dbg !144
  %2191 = phi float [ 0.000000e+00, %12 ], [ %1238, %.lr.ph ], !dbg !144
  %2192 = phi float [ 0.000000e+00, %12 ], [ %1239, %.lr.ph ], !dbg !144
  %2193 = phi float [ 0.000000e+00, %12 ], [ %1240, %.lr.ph ], !dbg !144
  %2194 = phi float [ 0.000000e+00, %12 ], [ %1243, %.lr.ph ], !dbg !144
  %2195 = phi float [ 0.000000e+00, %12 ], [ %1244, %.lr.ph ], !dbg !144
  %2196 = phi float [ 0.000000e+00, %12 ], [ %1245, %.lr.ph ], !dbg !144
  %2197 = phi float [ 0.000000e+00, %12 ], [ %1246, %.lr.ph ], !dbg !144
  %2198 = phi float [ 0.000000e+00, %12 ], [ %1249, %.lr.ph ], !dbg !144
  %2199 = phi float [ 0.000000e+00, %12 ], [ %1250, %.lr.ph ], !dbg !144
  %2200 = phi float [ 0.000000e+00, %12 ], [ %1251, %.lr.ph ], !dbg !144
  %2201 = phi float [ 0.000000e+00, %12 ], [ %1252, %.lr.ph ], !dbg !144
  %2202 = phi float [ 0.000000e+00, %12 ], [ %1255, %.lr.ph ], !dbg !144
  %2203 = phi float [ 0.000000e+00, %12 ], [ %1256, %.lr.ph ], !dbg !144
  %2204 = phi float [ 0.000000e+00, %12 ], [ %1257, %.lr.ph ], !dbg !144
  %2205 = phi float [ 0.000000e+00, %12 ], [ %1258, %.lr.ph ], !dbg !144
  %2206 = phi float [ 0.000000e+00, %12 ], [ %1311, %.lr.ph ], !dbg !145
  %2207 = phi float [ 0.000000e+00, %12 ], [ %1312, %.lr.ph ], !dbg !145
  %2208 = phi float [ 0.000000e+00, %12 ], [ %1313, %.lr.ph ], !dbg !145
  %2209 = phi float [ 0.000000e+00, %12 ], [ %1314, %.lr.ph ], !dbg !145
  %2210 = phi float [ 0.000000e+00, %12 ], [ %1317, %.lr.ph ], !dbg !145
  %2211 = phi float [ 0.000000e+00, %12 ], [ %1318, %.lr.ph ], !dbg !145
  %2212 = phi float [ 0.000000e+00, %12 ], [ %1319, %.lr.ph ], !dbg !145
  %2213 = phi float [ 0.000000e+00, %12 ], [ %1320, %.lr.ph ], !dbg !145
  %2214 = phi float [ 0.000000e+00, %12 ], [ %1323, %.lr.ph ], !dbg !145
  %2215 = phi float [ 0.000000e+00, %12 ], [ %1324, %.lr.ph ], !dbg !145
  %2216 = phi float [ 0.000000e+00, %12 ], [ %1325, %.lr.ph ], !dbg !145
  %2217 = phi float [ 0.000000e+00, %12 ], [ %1326, %.lr.ph ], !dbg !145
  %2218 = phi float [ 0.000000e+00, %12 ], [ %1329, %.lr.ph ], !dbg !145
  %2219 = phi float [ 0.000000e+00, %12 ], [ %1330, %.lr.ph ], !dbg !145
  %2220 = phi float [ 0.000000e+00, %12 ], [ %1331, %.lr.ph ], !dbg !145
  %2221 = phi float [ 0.000000e+00, %12 ], [ %1332, %.lr.ph ], !dbg !145
  %2222 = phi float [ 0.000000e+00, %12 ], [ %1367, %.lr.ph ], !dbg !146
  %2223 = phi float [ 0.000000e+00, %12 ], [ %1368, %.lr.ph ], !dbg !146
  %2224 = phi float [ 0.000000e+00, %12 ], [ %1369, %.lr.ph ], !dbg !146
  %2225 = phi float [ 0.000000e+00, %12 ], [ %1370, %.lr.ph ], !dbg !146
  %2226 = phi float [ 0.000000e+00, %12 ], [ %1373, %.lr.ph ], !dbg !146
  %2227 = phi float [ 0.000000e+00, %12 ], [ %1374, %.lr.ph ], !dbg !146
  %2228 = phi float [ 0.000000e+00, %12 ], [ %1375, %.lr.ph ], !dbg !146
  %2229 = phi float [ 0.000000e+00, %12 ], [ %1376, %.lr.ph ], !dbg !146
  %2230 = phi float [ 0.000000e+00, %12 ], [ %1379, %.lr.ph ], !dbg !146
  %2231 = phi float [ 0.000000e+00, %12 ], [ %1380, %.lr.ph ], !dbg !146
  %2232 = phi float [ 0.000000e+00, %12 ], [ %1381, %.lr.ph ], !dbg !146
  %2233 = phi float [ 0.000000e+00, %12 ], [ %1382, %.lr.ph ], !dbg !146
  %2234 = phi float [ 0.000000e+00, %12 ], [ %1385, %.lr.ph ], !dbg !146
  %2235 = phi float [ 0.000000e+00, %12 ], [ %1386, %.lr.ph ], !dbg !146
  %2236 = phi float [ 0.000000e+00, %12 ], [ %1387, %.lr.ph ], !dbg !146
  %2237 = phi float [ 0.000000e+00, %12 ], [ %1388, %.lr.ph ], !dbg !146
  %2238 = phi float [ 0.000000e+00, %12 ], [ %1415, %.lr.ph ], !dbg !147
  %2239 = phi float [ 0.000000e+00, %12 ], [ %1416, %.lr.ph ], !dbg !147
  %2240 = phi float [ 0.000000e+00, %12 ], [ %1417, %.lr.ph ], !dbg !147
  %2241 = phi float [ 0.000000e+00, %12 ], [ %1418, %.lr.ph ], !dbg !147
  %2242 = phi float [ 0.000000e+00, %12 ], [ %1421, %.lr.ph ], !dbg !147
  %2243 = phi float [ 0.000000e+00, %12 ], [ %1422, %.lr.ph ], !dbg !147
  %2244 = phi float [ 0.000000e+00, %12 ], [ %1423, %.lr.ph ], !dbg !147
  %2245 = phi float [ 0.000000e+00, %12 ], [ %1424, %.lr.ph ], !dbg !147
  %2246 = phi float [ 0.000000e+00, %12 ], [ %1427, %.lr.ph ], !dbg !147
  %2247 = phi float [ 0.000000e+00, %12 ], [ %1428, %.lr.ph ], !dbg !147
  %2248 = phi float [ 0.000000e+00, %12 ], [ %1429, %.lr.ph ], !dbg !147
  %2249 = phi float [ 0.000000e+00, %12 ], [ %1430, %.lr.ph ], !dbg !147
  %2250 = phi float [ 0.000000e+00, %12 ], [ %1433, %.lr.ph ], !dbg !147
  %2251 = phi float [ 0.000000e+00, %12 ], [ %1434, %.lr.ph ], !dbg !147
  %2252 = phi float [ 0.000000e+00, %12 ], [ %1435, %.lr.ph ], !dbg !147
  %2253 = phi float [ 0.000000e+00, %12 ], [ %1436, %.lr.ph ], !dbg !147
  %2254 = phi float [ 0.000000e+00, %12 ], [ %1463, %.lr.ph ], !dbg !148
  %2255 = phi float [ 0.000000e+00, %12 ], [ %1464, %.lr.ph ], !dbg !148
  %2256 = phi float [ 0.000000e+00, %12 ], [ %1465, %.lr.ph ], !dbg !148
  %2257 = phi float [ 0.000000e+00, %12 ], [ %1466, %.lr.ph ], !dbg !148
  %2258 = phi float [ 0.000000e+00, %12 ], [ %1469, %.lr.ph ], !dbg !148
  %2259 = phi float [ 0.000000e+00, %12 ], [ %1470, %.lr.ph ], !dbg !148
  %2260 = phi float [ 0.000000e+00, %12 ], [ %1471, %.lr.ph ], !dbg !148
  %2261 = phi float [ 0.000000e+00, %12 ], [ %1472, %.lr.ph ], !dbg !148
  %2262 = phi float [ 0.000000e+00, %12 ], [ %1475, %.lr.ph ], !dbg !148
  %2263 = phi float [ 0.000000e+00, %12 ], [ %1476, %.lr.ph ], !dbg !148
  %2264 = phi float [ 0.000000e+00, %12 ], [ %1477, %.lr.ph ], !dbg !148
  %2265 = phi float [ 0.000000e+00, %12 ], [ %1478, %.lr.ph ], !dbg !148
  %2266 = phi float [ 0.000000e+00, %12 ], [ %1481, %.lr.ph ], !dbg !148
  %2267 = phi float [ 0.000000e+00, %12 ], [ %1482, %.lr.ph ], !dbg !148
  %2268 = phi float [ 0.000000e+00, %12 ], [ %1483, %.lr.ph ], !dbg !148
  %2269 = phi float [ 0.000000e+00, %12 ], [ %1484, %.lr.ph ], !dbg !148
  %2270 = phi float [ 0.000000e+00, %12 ], [ %1511, %.lr.ph ], !dbg !149
  %2271 = phi float [ 0.000000e+00, %12 ], [ %1512, %.lr.ph ], !dbg !149
  %2272 = phi float [ 0.000000e+00, %12 ], [ %1513, %.lr.ph ], !dbg !149
  %2273 = phi float [ 0.000000e+00, %12 ], [ %1514, %.lr.ph ], !dbg !149
  %2274 = phi float [ 0.000000e+00, %12 ], [ %1517, %.lr.ph ], !dbg !149
  %2275 = phi float [ 0.000000e+00, %12 ], [ %1518, %.lr.ph ], !dbg !149
  %2276 = phi float [ 0.000000e+00, %12 ], [ %1519, %.lr.ph ], !dbg !149
  %2277 = phi float [ 0.000000e+00, %12 ], [ %1520, %.lr.ph ], !dbg !149
  %2278 = phi float [ 0.000000e+00, %12 ], [ %1523, %.lr.ph ], !dbg !149
  %2279 = phi float [ 0.000000e+00, %12 ], [ %1524, %.lr.ph ], !dbg !149
  %2280 = phi float [ 0.000000e+00, %12 ], [ %1525, %.lr.ph ], !dbg !149
  %2281 = phi float [ 0.000000e+00, %12 ], [ %1526, %.lr.ph ], !dbg !149
  %2282 = phi float [ 0.000000e+00, %12 ], [ %1529, %.lr.ph ], !dbg !149
  %2283 = phi float [ 0.000000e+00, %12 ], [ %1530, %.lr.ph ], !dbg !149
  %2284 = phi float [ 0.000000e+00, %12 ], [ %1531, %.lr.ph ], !dbg !149
  %2285 = phi float [ 0.000000e+00, %12 ], [ %1532, %.lr.ph ], !dbg !149
  %2286 = phi float [ 0.000000e+00, %12 ], [ %1567, %.lr.ph ], !dbg !150
  %2287 = phi float [ 0.000000e+00, %12 ], [ %1568, %.lr.ph ], !dbg !150
  %2288 = phi float [ 0.000000e+00, %12 ], [ %1569, %.lr.ph ], !dbg !150
  %2289 = phi float [ 0.000000e+00, %12 ], [ %1570, %.lr.ph ], !dbg !150
  %2290 = phi float [ 0.000000e+00, %12 ], [ %1573, %.lr.ph ], !dbg !150
  %2291 = phi float [ 0.000000e+00, %12 ], [ %1574, %.lr.ph ], !dbg !150
  %2292 = phi float [ 0.000000e+00, %12 ], [ %1575, %.lr.ph ], !dbg !150
  %2293 = phi float [ 0.000000e+00, %12 ], [ %1576, %.lr.ph ], !dbg !150
  %2294 = phi float [ 0.000000e+00, %12 ], [ %1579, %.lr.ph ], !dbg !150
  %2295 = phi float [ 0.000000e+00, %12 ], [ %1580, %.lr.ph ], !dbg !150
  %2296 = phi float [ 0.000000e+00, %12 ], [ %1581, %.lr.ph ], !dbg !150
  %2297 = phi float [ 0.000000e+00, %12 ], [ %1582, %.lr.ph ], !dbg !150
  %2298 = phi float [ 0.000000e+00, %12 ], [ %1585, %.lr.ph ], !dbg !150
  %2299 = phi float [ 0.000000e+00, %12 ], [ %1586, %.lr.ph ], !dbg !150
  %2300 = phi float [ 0.000000e+00, %12 ], [ %1587, %.lr.ph ], !dbg !150
  %2301 = phi float [ 0.000000e+00, %12 ], [ %1588, %.lr.ph ], !dbg !150
  %2302 = phi float [ 0.000000e+00, %12 ], [ %1615, %.lr.ph ], !dbg !151
  %2303 = phi float [ 0.000000e+00, %12 ], [ %1616, %.lr.ph ], !dbg !151
  %2304 = phi float [ 0.000000e+00, %12 ], [ %1617, %.lr.ph ], !dbg !151
  %2305 = phi float [ 0.000000e+00, %12 ], [ %1618, %.lr.ph ], !dbg !151
  %2306 = phi float [ 0.000000e+00, %12 ], [ %1621, %.lr.ph ], !dbg !151
  %2307 = phi float [ 0.000000e+00, %12 ], [ %1622, %.lr.ph ], !dbg !151
  %2308 = phi float [ 0.000000e+00, %12 ], [ %1623, %.lr.ph ], !dbg !151
  %2309 = phi float [ 0.000000e+00, %12 ], [ %1624, %.lr.ph ], !dbg !151
  %2310 = phi float [ 0.000000e+00, %12 ], [ %1627, %.lr.ph ], !dbg !151
  %2311 = phi float [ 0.000000e+00, %12 ], [ %1628, %.lr.ph ], !dbg !151
  %2312 = phi float [ 0.000000e+00, %12 ], [ %1629, %.lr.ph ], !dbg !151
  %2313 = phi float [ 0.000000e+00, %12 ], [ %1630, %.lr.ph ], !dbg !151
  %2314 = phi float [ 0.000000e+00, %12 ], [ %1633, %.lr.ph ], !dbg !151
  %2315 = phi float [ 0.000000e+00, %12 ], [ %1634, %.lr.ph ], !dbg !151
  %2316 = phi float [ 0.000000e+00, %12 ], [ %1635, %.lr.ph ], !dbg !151
  %2317 = phi float [ 0.000000e+00, %12 ], [ %1636, %.lr.ph ], !dbg !151
  %2318 = phi float [ 0.000000e+00, %12 ], [ %1775, %.lr.ph ], !dbg !152
  %2319 = phi float [ 0.000000e+00, %12 ], [ %1776, %.lr.ph ], !dbg !152
  %2320 = phi float [ 0.000000e+00, %12 ], [ %1777, %.lr.ph ], !dbg !152
  %2321 = phi float [ 0.000000e+00, %12 ], [ %1778, %.lr.ph ], !dbg !152
  %2322 = phi float [ 0.000000e+00, %12 ], [ %1781, %.lr.ph ], !dbg !152
  %2323 = phi float [ 0.000000e+00, %12 ], [ %1782, %.lr.ph ], !dbg !152
  %2324 = phi float [ 0.000000e+00, %12 ], [ %1783, %.lr.ph ], !dbg !152
  %2325 = phi float [ 0.000000e+00, %12 ], [ %1784, %.lr.ph ], !dbg !152
  %2326 = phi float [ 0.000000e+00, %12 ], [ %1787, %.lr.ph ], !dbg !152
  %2327 = phi float [ 0.000000e+00, %12 ], [ %1788, %.lr.ph ], !dbg !152
  %2328 = phi float [ 0.000000e+00, %12 ], [ %1789, %.lr.ph ], !dbg !152
  %2329 = phi float [ 0.000000e+00, %12 ], [ %1790, %.lr.ph ], !dbg !152
  %2330 = phi float [ 0.000000e+00, %12 ], [ %1793, %.lr.ph ], !dbg !152
  %2331 = phi float [ 0.000000e+00, %12 ], [ %1794, %.lr.ph ], !dbg !152
  %2332 = phi float [ 0.000000e+00, %12 ], [ %1795, %.lr.ph ], !dbg !152
  %2333 = phi float [ 0.000000e+00, %12 ], [ %1796, %.lr.ph ], !dbg !152
  %2334 = phi float [ 0.000000e+00, %12 ], [ %1831, %.lr.ph ], !dbg !153
  %2335 = phi float [ 0.000000e+00, %12 ], [ %1832, %.lr.ph ], !dbg !153
  %2336 = phi float [ 0.000000e+00, %12 ], [ %1833, %.lr.ph ], !dbg !153
  %2337 = phi float [ 0.000000e+00, %12 ], [ %1834, %.lr.ph ], !dbg !153
  %2338 = phi float [ 0.000000e+00, %12 ], [ %1837, %.lr.ph ], !dbg !153
  %2339 = phi float [ 0.000000e+00, %12 ], [ %1838, %.lr.ph ], !dbg !153
  %2340 = phi float [ 0.000000e+00, %12 ], [ %1839, %.lr.ph ], !dbg !153
  %2341 = phi float [ 0.000000e+00, %12 ], [ %1840, %.lr.ph ], !dbg !153
  %2342 = phi float [ 0.000000e+00, %12 ], [ %1843, %.lr.ph ], !dbg !153
  %2343 = phi float [ 0.000000e+00, %12 ], [ %1844, %.lr.ph ], !dbg !153
  %2344 = phi float [ 0.000000e+00, %12 ], [ %1845, %.lr.ph ], !dbg !153
  %2345 = phi float [ 0.000000e+00, %12 ], [ %1846, %.lr.ph ], !dbg !153
  %2346 = phi float [ 0.000000e+00, %12 ], [ %1849, %.lr.ph ], !dbg !153
  %2347 = phi float [ 0.000000e+00, %12 ], [ %1850, %.lr.ph ], !dbg !153
  %2348 = phi float [ 0.000000e+00, %12 ], [ %1851, %.lr.ph ], !dbg !153
  %2349 = phi float [ 0.000000e+00, %12 ], [ %1852, %.lr.ph ], !dbg !153
  %2350 = phi float [ 0.000000e+00, %12 ], [ %1671, %.lr.ph ], !dbg !154
  %2351 = phi float [ 0.000000e+00, %12 ], [ %1672, %.lr.ph ], !dbg !154
  %2352 = phi float [ 0.000000e+00, %12 ], [ %1673, %.lr.ph ], !dbg !154
  %2353 = phi float [ 0.000000e+00, %12 ], [ %1674, %.lr.ph ], !dbg !154
  %2354 = phi float [ 0.000000e+00, %12 ], [ %1677, %.lr.ph ], !dbg !154
  %2355 = phi float [ 0.000000e+00, %12 ], [ %1678, %.lr.ph ], !dbg !154
  %2356 = phi float [ 0.000000e+00, %12 ], [ %1679, %.lr.ph ], !dbg !154
  %2357 = phi float [ 0.000000e+00, %12 ], [ %1680, %.lr.ph ], !dbg !154
  %2358 = phi float [ 0.000000e+00, %12 ], [ %1683, %.lr.ph ], !dbg !154
  %2359 = phi float [ 0.000000e+00, %12 ], [ %1684, %.lr.ph ], !dbg !154
  %2360 = phi float [ 0.000000e+00, %12 ], [ %1685, %.lr.ph ], !dbg !154
  %2361 = phi float [ 0.000000e+00, %12 ], [ %1686, %.lr.ph ], !dbg !154
  %2362 = phi float [ 0.000000e+00, %12 ], [ %1689, %.lr.ph ], !dbg !154
  %2363 = phi float [ 0.000000e+00, %12 ], [ %1690, %.lr.ph ], !dbg !154
  %2364 = phi float [ 0.000000e+00, %12 ], [ %1691, %.lr.ph ], !dbg !154
  %2365 = phi float [ 0.000000e+00, %12 ], [ %1692, %.lr.ph ], !dbg !154
  %2366 = phi float [ 0.000000e+00, %12 ], [ %1719, %.lr.ph ], !dbg !155
  %2367 = phi float [ 0.000000e+00, %12 ], [ %1720, %.lr.ph ], !dbg !155
  %2368 = phi float [ 0.000000e+00, %12 ], [ %1721, %.lr.ph ], !dbg !155
  %2369 = phi float [ 0.000000e+00, %12 ], [ %1722, %.lr.ph ], !dbg !155
  %2370 = phi float [ 0.000000e+00, %12 ], [ %1725, %.lr.ph ], !dbg !155
  %2371 = phi float [ 0.000000e+00, %12 ], [ %1726, %.lr.ph ], !dbg !155
  %2372 = phi float [ 0.000000e+00, %12 ], [ %1727, %.lr.ph ], !dbg !155
  %2373 = phi float [ 0.000000e+00, %12 ], [ %1728, %.lr.ph ], !dbg !155
  %2374 = phi float [ 0.000000e+00, %12 ], [ %1731, %.lr.ph ], !dbg !155
  %2375 = phi float [ 0.000000e+00, %12 ], [ %1732, %.lr.ph ], !dbg !155
  %2376 = phi float [ 0.000000e+00, %12 ], [ %1733, %.lr.ph ], !dbg !155
  %2377 = phi float [ 0.000000e+00, %12 ], [ %1734, %.lr.ph ], !dbg !155
  %2378 = phi float [ 0.000000e+00, %12 ], [ %1737, %.lr.ph ], !dbg !155
  %2379 = phi float [ 0.000000e+00, %12 ], [ %1738, %.lr.ph ], !dbg !155
  %2380 = phi float [ 0.000000e+00, %12 ], [ %1739, %.lr.ph ], !dbg !155
  %2381 = phi float [ 0.000000e+00, %12 ], [ %1740, %.lr.ph ], !dbg !155
  %2382 = phi float [ 0.000000e+00, %12 ], [ %1887, %.lr.ph ], !dbg !156
  %2383 = phi float [ 0.000000e+00, %12 ], [ %1888, %.lr.ph ], !dbg !156
  %2384 = phi float [ 0.000000e+00, %12 ], [ %1889, %.lr.ph ], !dbg !156
  %2385 = phi float [ 0.000000e+00, %12 ], [ %1890, %.lr.ph ], !dbg !156
  %2386 = phi float [ 0.000000e+00, %12 ], [ %1893, %.lr.ph ], !dbg !156
  %2387 = phi float [ 0.000000e+00, %12 ], [ %1894, %.lr.ph ], !dbg !156
  %2388 = phi float [ 0.000000e+00, %12 ], [ %1895, %.lr.ph ], !dbg !156
  %2389 = phi float [ 0.000000e+00, %12 ], [ %1896, %.lr.ph ], !dbg !156
  %2390 = phi float [ 0.000000e+00, %12 ], [ %1899, %.lr.ph ], !dbg !156
  %2391 = phi float [ 0.000000e+00, %12 ], [ %1900, %.lr.ph ], !dbg !156
  %2392 = phi float [ 0.000000e+00, %12 ], [ %1901, %.lr.ph ], !dbg !156
  %2393 = phi float [ 0.000000e+00, %12 ], [ %1902, %.lr.ph ], !dbg !156
  %2394 = phi float [ 0.000000e+00, %12 ], [ %1905, %.lr.ph ], !dbg !156
  %2395 = phi float [ 0.000000e+00, %12 ], [ %1906, %.lr.ph ], !dbg !156
  %2396 = phi float [ 0.000000e+00, %12 ], [ %1907, %.lr.ph ], !dbg !156
  %2397 = phi float [ 0.000000e+00, %12 ], [ %1908, %.lr.ph ], !dbg !156
  %2398 = phi float [ 0.000000e+00, %12 ], [ %1943, %.lr.ph ], !dbg !157
  %2399 = phi float [ 0.000000e+00, %12 ], [ %1944, %.lr.ph ], !dbg !157
  %2400 = phi float [ 0.000000e+00, %12 ], [ %1945, %.lr.ph ], !dbg !157
  %2401 = phi float [ 0.000000e+00, %12 ], [ %1946, %.lr.ph ], !dbg !157
  %2402 = phi float [ 0.000000e+00, %12 ], [ %1949, %.lr.ph ], !dbg !157
  %2403 = phi float [ 0.000000e+00, %12 ], [ %1950, %.lr.ph ], !dbg !157
  %2404 = phi float [ 0.000000e+00, %12 ], [ %1951, %.lr.ph ], !dbg !157
  %2405 = phi float [ 0.000000e+00, %12 ], [ %1952, %.lr.ph ], !dbg !157
  %2406 = phi float [ 0.000000e+00, %12 ], [ %1955, %.lr.ph ], !dbg !157
  %2407 = phi float [ 0.000000e+00, %12 ], [ %1956, %.lr.ph ], !dbg !157
  %2408 = phi float [ 0.000000e+00, %12 ], [ %1957, %.lr.ph ], !dbg !157
  %2409 = phi float [ 0.000000e+00, %12 ], [ %1958, %.lr.ph ], !dbg !157
  %2410 = phi float [ 0.000000e+00, %12 ], [ %1961, %.lr.ph ], !dbg !157
  %2411 = phi float [ 0.000000e+00, %12 ], [ %1962, %.lr.ph ], !dbg !157
  %2412 = phi float [ 0.000000e+00, %12 ], [ %1963, %.lr.ph ], !dbg !157
  %2413 = phi float [ 0.000000e+00, %12 ], [ %1964, %.lr.ph ], !dbg !157
  %2414 = phi <2 x half> [ %340, %12 ], [ %1966, %.lr.ph ]
  %2415 = phi <2 x half> [ %341, %12 ], [ %1967, %.lr.ph ]
  %2416 = phi <2 x half> [ %342, %12 ], [ %1968, %.lr.ph ]
  %2417 = phi <2 x half> [ %343, %12 ], [ %1969, %.lr.ph ]
  %2418 = phi <2 x half> [ %344, %12 ], [ %1970, %.lr.ph ]
  %2419 = phi <2 x half> [ %345, %12 ], [ %1971, %.lr.ph ]
  %2420 = phi <2 x half> [ %346, %12 ], [ %1972, %.lr.ph ]
  %2421 = phi <2 x half> [ %347, %12 ], [ %1973, %.lr.ph ]
  %2422 = phi <2 x half> [ %348, %12 ], [ %1974, %.lr.ph ]
  %2423 = phi <2 x half> [ %349, %12 ], [ %1975, %.lr.ph ]
  %2424 = phi <2 x half> [ %350, %12 ], [ %1976, %.lr.ph ]
  %2425 = phi <2 x half> [ %351, %12 ], [ %1977, %.lr.ph ]
  %2426 = phi <2 x half> [ %352, %12 ], [ %1978, %.lr.ph ]
  %2427 = phi <2 x half> [ %353, %12 ], [ %1979, %.lr.ph ]
  %2428 = phi <2 x half> [ %354, %12 ], [ %1980, %.lr.ph ]
  %2429 = phi <2 x half> [ %355, %12 ], [ %1981, %.lr.ph ]
  %2430 = phi <2 x half> [ %356, %12 ], [ %1982, %.lr.ph ]
  %2431 = phi <2 x half> [ %357, %12 ], [ %1983, %.lr.ph ]
  %2432 = phi <2 x half> [ %358, %12 ], [ %1984, %.lr.ph ]
  %2433 = phi <2 x half> [ %359, %12 ], [ %1985, %.lr.ph ]
  %2434 = phi <2 x half> [ %360, %12 ], [ %1986, %.lr.ph ]
  %2435 = phi <2 x half> [ %361, %12 ], [ %1987, %.lr.ph ]
  %2436 = phi <2 x half> [ %362, %12 ], [ %1988, %.lr.ph ]
  %2437 = phi <2 x half> [ %363, %12 ], [ %1989, %.lr.ph ]
  %2438 = phi <2 x half> [ %364, %12 ], [ %1990, %.lr.ph ]
  %2439 = phi <2 x half> [ %365, %12 ], [ %1991, %.lr.ph ]
  %2440 = phi <2 x half> [ %366, %12 ], [ %1992, %.lr.ph ]
  %2441 = phi <2 x half> [ %367, %12 ], [ %1993, %.lr.ph ]
  %2442 = phi <2 x half> [ %368, %12 ], [ %1994, %.lr.ph ]
  %2443 = phi <2 x half> [ %369, %12 ], [ %1995, %.lr.ph ]
  %2444 = phi <2 x half> [ %370, %12 ], [ %1996, %.lr.ph ]
  %2445 = phi <2 x half> [ %371, %12 ], [ %1997, %.lr.ph ]
  %2446 = phi <2 x half> [ %372, %12 ], [ %1998, %.lr.ph ]
  %2447 = phi <2 x half> [ %373, %12 ], [ %1999, %.lr.ph ]
  %2448 = phi <2 x half> [ %374, %12 ], [ %2000, %.lr.ph ]
  %2449 = phi <2 x half> [ %375, %12 ], [ %2001, %.lr.ph ]
  %2450 = phi <2 x half> [ %376, %12 ], [ %2002, %.lr.ph ]
  %2451 = phi <2 x half> [ %377, %12 ], [ %2003, %.lr.ph ]
  %2452 = phi <2 x half> [ %378, %12 ], [ %2004, %.lr.ph ]
  %2453 = phi <2 x half> [ %379, %12 ], [ %2005, %.lr.ph ]
  %2454 = phi <2 x half> [ %380, %12 ], [ %2006, %.lr.ph ]
  %2455 = phi <2 x half> [ %381, %12 ], [ %2007, %.lr.ph ]
  %2456 = phi <2 x half> [ %382, %12 ], [ %2008, %.lr.ph ]
  %2457 = phi <2 x half> [ %383, %12 ], [ %2009, %.lr.ph ]
  %2458 = phi <2 x half> [ %384, %12 ], [ %2010, %.lr.ph ]
  %2459 = phi <2 x half> [ %385, %12 ], [ %2011, %.lr.ph ]
  %2460 = phi <2 x half> [ %386, %12 ], [ %2012, %.lr.ph ]
  %2461 = phi <2 x half> [ %387, %12 ], [ %2013, %.lr.ph ]
  %2462 = phi <2 x half> [ %388, %12 ], [ %2014, %.lr.ph ]
  %2463 = phi <2 x half> [ %389, %12 ], [ %2015, %.lr.ph ]
  %2464 = phi <2 x half> [ %390, %12 ], [ %2016, %.lr.ph ]
  %2465 = phi <2 x half> [ %391, %12 ], [ %2017, %.lr.ph ]
  %2466 = phi <2 x half> [ %392, %12 ], [ %2018, %.lr.ph ]
  %2467 = phi <2 x half> [ %393, %12 ], [ %2019, %.lr.ph ]
  %2468 = phi <2 x half> [ %394, %12 ], [ %2020, %.lr.ph ]
  %2469 = phi <2 x half> [ %395, %12 ], [ %2021, %.lr.ph ]
  %2470 = phi <2 x half> [ %396, %12 ], [ %2022, %.lr.ph ]
  %2471 = phi <2 x half> [ %397, %12 ], [ %2023, %.lr.ph ]
  %2472 = phi <2 x half> [ %398, %12 ], [ %2024, %.lr.ph ]
  %2473 = phi <2 x half> [ %399, %12 ], [ %2025, %.lr.ph ]
  %2474 = phi <2 x half> [ %400, %12 ], [ %2026, %.lr.ph ]
  %2475 = phi <2 x half> [ %401, %12 ], [ %2027, %.lr.ph ]
  %2476 = phi <2 x half> [ %402, %12 ], [ %2028, %.lr.ph ]
  %2477 = phi <2 x half> [ %403, %12 ], [ %2029, %.lr.ph ]
  %2478 = phi <2 x half> [ %404, %12 ], [ %2030, %.lr.ph ]
  %2479 = phi <2 x half> [ %405, %12 ], [ %2031, %.lr.ph ]
  %2480 = phi <2 x half> [ %406, %12 ], [ %2032, %.lr.ph ]
  %2481 = phi <2 x half> [ %407, %12 ], [ %2033, %.lr.ph ]
  %2482 = phi <2 x half> [ %408, %12 ], [ %2034, %.lr.ph ]
  %2483 = phi <2 x half> [ %409, %12 ], [ %2035, %.lr.ph ]
  %2484 = phi <2 x half> [ %410, %12 ], [ %2036, %.lr.ph ]
  %2485 = phi <2 x half> [ %411, %12 ], [ %2037, %.lr.ph ]
  %2486 = phi <2 x half> [ %412, %12 ], [ %2038, %.lr.ph ]
  %2487 = phi <2 x half> [ %413, %12 ], [ %2039, %.lr.ph ]
  %2488 = phi <2 x half> [ %414, %12 ], [ %2040, %.lr.ph ]
  %2489 = phi <2 x half> [ %415, %12 ], [ %2041, %.lr.ph ]
  %2490 = phi <2 x half> [ %416, %12 ], [ %2042, %.lr.ph ]
  %2491 = phi <2 x half> [ %417, %12 ], [ %2043, %.lr.ph ]
  %2492 = phi <2 x half> [ %418, %12 ], [ %2044, %.lr.ph ]
  %2493 = phi <2 x half> [ %419, %12 ], [ %2045, %.lr.ph ]
  %2494 = phi <2 x half> [ %420, %12 ], [ %2046, %.lr.ph ]
  %2495 = phi <2 x half> [ %421, %12 ], [ %2047, %.lr.ph ]
  %2496 = phi <2 x half> [ %422, %12 ], [ %2048, %.lr.ph ]
  %2497 = phi <2 x half> [ %423, %12 ], [ %2049, %.lr.ph ]
  %2498 = phi <2 x half> [ %424, %12 ], [ %2050, %.lr.ph ]
  %2499 = phi <2 x half> [ %425, %12 ], [ %2051, %.lr.ph ]
  %2500 = phi <2 x half> [ %426, %12 ], [ %2052, %.lr.ph ]
  %2501 = phi <2 x half> [ %427, %12 ], [ %2053, %.lr.ph ]
  %2502 = phi <2 x half> [ %428, %12 ], [ %2054, %.lr.ph ]
  %2503 = phi <2 x half> [ %429, %12 ], [ %2055, %.lr.ph ]
  %2504 = phi <2 x half> [ %430, %12 ], [ %2056, %.lr.ph ]
  %2505 = phi <2 x half> [ %431, %12 ], [ %2057, %.lr.ph ]
  %2506 = phi <2 x half> [ %432, %12 ], [ %2058, %.lr.ph ]
  %2507 = phi <2 x half> [ %433, %12 ], [ %2059, %.lr.ph ]
  %2508 = phi <2 x half> [ %434, %12 ], [ %2060, %.lr.ph ]
  %2509 = phi <2 x half> [ %435, %12 ], [ %2061, %.lr.ph ]
  %2510 = phi <2 x half> [ %436, %12 ], [ %2062, %.lr.ph ]
  %2511 = phi <2 x half> [ %437, %12 ], [ %2063, %.lr.ph ]
  %2512 = phi <2 x half> [ %438, %12 ], [ %2064, %.lr.ph ]
  %2513 = phi <2 x half> [ %439, %12 ], [ %2065, %.lr.ph ]
  %2514 = phi <2 x half> [ %440, %12 ], [ %2066, %.lr.ph ]
  %2515 = phi <2 x half> [ %441, %12 ], [ %2067, %.lr.ph ]
  %2516 = phi <2 x half> [ %442, %12 ], [ %2068, %.lr.ph ]
  %2517 = phi <2 x half> [ %443, %12 ], [ %2069, %.lr.ph ]
  %2518 = phi <2 x half> [ %444, %12 ], [ %2070, %.lr.ph ]
  %2519 = phi <2 x half> [ %445, %12 ], [ %2071, %.lr.ph ]
  %2520 = phi <2 x half> [ %446, %12 ], [ %2072, %.lr.ph ]
  %2521 = phi <2 x half> [ %447, %12 ], [ %2073, %.lr.ph ]
  %2522 = phi <2 x half> [ %448, %12 ], [ %2074, %.lr.ph ]
  %2523 = phi <2 x half> [ %449, %12 ], [ %2075, %.lr.ph ]
  %2524 = phi <2 x half> [ %450, %12 ], [ %2076, %.lr.ph ]
  %2525 = phi <2 x half> [ %451, %12 ], [ %2077, %.lr.ph ]
  %2526 = phi <2 x half> [ %452, %12 ], [ %2078, %.lr.ph ]
  %2527 = phi <2 x half> [ %453, %12 ], [ %2079, %.lr.ph ]
  %2528 = phi <2 x half> [ %454, %12 ], [ %2080, %.lr.ph ]
  %2529 = phi <2 x half> [ %455, %12 ], [ %2081, %.lr.ph ]
  %2530 = phi <2 x half> [ %456, %12 ], [ %2082, %.lr.ph ]
  %2531 = phi <2 x half> [ %457, %12 ], [ %2083, %.lr.ph ]
  %2532 = phi <2 x half> [ %458, %12 ], [ %2084, %.lr.ph ]
  %2533 = phi <2 x half> [ %459, %12 ], [ %2085, %.lr.ph ]
  %2534 = phi <2 x half> [ %460, %12 ], [ %2086, %.lr.ph ]
  %2535 = phi <2 x half> [ %461, %12 ], [ %2087, %.lr.ph ]
  %2536 = phi <2 x half> [ %462, %12 ], [ %2088, %.lr.ph ]
  %2537 = phi <2 x half> [ %463, %12 ], [ %2089, %.lr.ph ]
  %2538 = phi <2 x half> [ %464, %12 ], [ %2090, %.lr.ph ]
  %2539 = phi <2 x half> [ %465, %12 ], [ %2091, %.lr.ph ]
  %2540 = phi <2 x half> [ %466, %12 ], [ %2092, %.lr.ph ]
  %2541 = phi <2 x half> [ %467, %12 ], [ %2093, %.lr.ph ]
  %2542 = phi <2 x half> [ %468, %12 ], [ %2094, %.lr.ph ]
  %2543 = phi <2 x half> [ %469, %12 ], [ %2095, %.lr.ph ]
  %2544 = phi <2 x half> [ %470, %12 ], [ %2096, %.lr.ph ]
  %2545 = phi <2 x half> [ %471, %12 ], [ %2097, %.lr.ph ]
  %2546 = phi <2 x half> [ %472, %12 ], [ %2098, %.lr.ph ]
  %2547 = phi <2 x half> [ %473, %12 ], [ %2099, %.lr.ph ]
  %2548 = phi <2 x half> [ %474, %12 ], [ %2100, %.lr.ph ]
  %2549 = phi <2 x half> [ %475, %12 ], [ %2101, %.lr.ph ]
  %2550 = phi <2 x half> [ %476, %12 ], [ %2102, %.lr.ph ]
  %2551 = phi <2 x half> [ %477, %12 ], [ %2103, %.lr.ph ]
  %2552 = phi <2 x half> [ %478, %12 ], [ %2104, %.lr.ph ]
  %2553 = phi <2 x half> [ %479, %12 ], [ %2105, %.lr.ph ]
  %2554 = phi <2 x half> [ %480, %12 ], [ %2106, %.lr.ph ]
  %2555 = phi <2 x half> [ %481, %12 ], [ %2107, %.lr.ph ]
  %2556 = phi <2 x half> [ %482, %12 ], [ %2108, %.lr.ph ]
  %2557 = phi <2 x half> [ %483, %12 ], [ %2109, %.lr.ph ]
  %2558 = phi <2 x half> [ %484, %12 ], [ %2110, %.lr.ph ]
  %2559 = phi <2 x half> [ %485, %12 ], [ %2111, %.lr.ph ]
  %2560 = phi <2 x half> [ %486, %12 ], [ %2112, %.lr.ph ]
  %2561 = phi <2 x half> [ %487, %12 ], [ %2113, %.lr.ph ]
  %2562 = phi <2 x half> [ %488, %12 ], [ %2114, %.lr.ph ]
  %2563 = phi <2 x half> [ %489, %12 ], [ %2115, %.lr.ph ]
  %2564 = phi <2 x half> [ %490, %12 ], [ %2116, %.lr.ph ]
  %2565 = phi <2 x half> [ %491, %12 ], [ %2117, %.lr.ph ]
  %2566 = phi <2 x half> [ %492, %12 ], [ %2118, %.lr.ph ]
  %2567 = phi <2 x half> [ %493, %12 ], [ %2119, %.lr.ph ]
  %2568 = phi <2 x half> [ %494, %12 ], [ %2120, %.lr.ph ]
  %2569 = phi <2 x half> [ %495, %12 ], [ %2121, %.lr.ph ]
  %2570 = phi <2 x half> [ %496, %12 ], [ %2122, %.lr.ph ]
  %2571 = phi <2 x half> [ %497, %12 ], [ %2123, %.lr.ph ]
  %2572 = phi <2 x half> [ %498, %12 ], [ %2124, %.lr.ph ]
  %2573 = phi <2 x half> [ %499, %12 ], [ %2125, %.lr.ph ]
  %2574 = phi <2 x half> [ %500, %12 ], [ %2126, %.lr.ph ]
  %2575 = phi <2 x half> [ %501, %12 ], [ %2127, %.lr.ph ]
  %2576 = phi <2 x half> [ %502, %12 ], [ %2128, %.lr.ph ]
  %2577 = phi <2 x half> [ %503, %12 ], [ %2129, %.lr.ph ]
  %2578 = phi <2 x half> [ %504, %12 ], [ %2130, %.lr.ph ]
  %2579 = phi <2 x half> [ %505, %12 ], [ %2131, %.lr.ph ]
  %2580 = phi <2 x half> [ %506, %12 ], [ %2132, %.lr.ph ]
  %2581 = phi <2 x half> [ %507, %12 ], [ %2133, %.lr.ph ]
  %2582 = phi <2 x half> [ %508, %12 ], [ %2134, %.lr.ph ]
  %2583 = phi <2 x half> [ %509, %12 ], [ %2135, %.lr.ph ]
  %2584 = phi <2 x half> [ %510, %12 ], [ %2136, %.lr.ph ]
  %2585 = phi <2 x half> [ %511, %12 ], [ %2137, %.lr.ph ]
  %2586 = phi <2 x half> [ %512, %12 ], [ %2138, %.lr.ph ]
  %2587 = phi <2 x half> [ %513, %12 ], [ %2139, %.lr.ph ]
  %2588 = phi <2 x half> [ %514, %12 ], [ %2140, %.lr.ph ]
  %2589 = phi <2 x half> [ %515, %12 ], [ %2141, %.lr.ph ]
  %2590 = phi <2 x half> [ %516, %12 ], [ %2142, %.lr.ph ]
  %2591 = phi <2 x half> [ %517, %12 ], [ %2143, %.lr.ph ]
  %2592 = phi <2 x half> [ %518, %12 ], [ %2144, %.lr.ph ]
  %2593 = phi <2 x half> [ %519, %12 ], [ %2145, %.lr.ph ]
  %2594 = phi <2 x half> [ %520, %12 ], [ %2146, %.lr.ph ]
  %2595 = phi <2 x half> [ %521, %12 ], [ %2147, %.lr.ph ]
  %2596 = phi <2 x half> [ %522, %12 ], [ %2148, %.lr.ph ]
  %2597 = phi <2 x half> [ %523, %12 ], [ %2149, %.lr.ph ]
  %2598 = phi <2 x half> [ %524, %12 ], [ %2150, %.lr.ph ]
  %2599 = phi <2 x half> [ %525, %12 ], [ %2151, %.lr.ph ]
  %2600 = phi <2 x half> [ %526, %12 ], [ %2152, %.lr.ph ]
  %2601 = phi <2 x half> [ %527, %12 ], [ %2153, %.lr.ph ]
  %2602 = phi <2 x half> [ %528, %12 ], [ %2154, %.lr.ph ]
  %2603 = phi <2 x half> [ %529, %12 ], [ %2155, %.lr.ph ]
  %2604 = phi <2 x half> [ %530, %12 ], [ %2156, %.lr.ph ]
  %2605 = phi <2 x half> [ %531, %12 ], [ %2157, %.lr.ph ]
  %2606 = and i32 %284, 28
  %2607 = or disjoint i32 %2606, 224
  %2608 = or disjoint i32 %2606, 192
  %2609 = or disjoint i32 %2606, 160
  %2610 = or disjoint i32 %2606, 128
  %2611 = or disjoint i32 %2606, 96
  %2612 = or disjoint i32 %2606, 64
  %2613 = or disjoint i32 %2606, 32
  %2614 = or disjoint i32 %225, 224
  %2615 = or disjoint i32 %225, 192
  %2616 = or disjoint i32 %225, 160
  %2617 = or disjoint i32 %225, 128
  %2618 = or disjoint i32 %225, 96
  %2619 = or disjoint i32 %225, 64
  %2620 = or disjoint i32 %225, 32
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %2621 = shufflevector <2 x half> %2414, <2 x half> %2574, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2622 = shufflevector <2 x half> %2575, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2623 = shufflevector <8 x half> %2621, <8 x half> %2622, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2624 = shufflevector <2 x half> %2415, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2625 = shufflevector <8 x half> %2623, <8 x half> %2624, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2625, ptr addrspace(3) %199, align 16
  %2626 = shufflevector <2 x half> %2416, <2 x half> %2576, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2627 = shufflevector <2 x half> %2577, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2628 = shufflevector <8 x half> %2626, <8 x half> %2627, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2629 = shufflevector <2 x half> %2417, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2630 = shufflevector <8 x half> %2628, <8 x half> %2629, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2630, ptr addrspace(3) %201, align 16
  %2631 = shufflevector <2 x half> %2418, <2 x half> %2578, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2632 = shufflevector <2 x half> %2579, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2633 = shufflevector <8 x half> %2631, <8 x half> %2632, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2634 = shufflevector <2 x half> %2419, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2635 = shufflevector <8 x half> %2633, <8 x half> %2634, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2635, ptr addrspace(3) %203, align 16
  %2636 = shufflevector <2 x half> %2420, <2 x half> %2580, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2637 = shufflevector <2 x half> %2581, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2638 = shufflevector <8 x half> %2636, <8 x half> %2637, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2639 = shufflevector <2 x half> %2421, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2640 = shufflevector <8 x half> %2638, <8 x half> %2639, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2640, ptr addrspace(3) %205, align 16
  %2641 = shufflevector <2 x half> %2422, <2 x half> %2582, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2642 = shufflevector <2 x half> %2583, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2643 = shufflevector <8 x half> %2641, <8 x half> %2642, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2644 = shufflevector <2 x half> %2423, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2645 = shufflevector <8 x half> %2643, <8 x half> %2644, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2645, ptr addrspace(3) %207, align 16
  %2646 = shufflevector <2 x half> %2424, <2 x half> %2584, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2647 = shufflevector <2 x half> %2585, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2648 = shufflevector <8 x half> %2646, <8 x half> %2647, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2649 = shufflevector <2 x half> %2425, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2650 = shufflevector <8 x half> %2648, <8 x half> %2649, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2650, ptr addrspace(3) %209, align 16
  %2651 = shufflevector <2 x half> %2426, <2 x half> %2586, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2652 = shufflevector <2 x half> %2587, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2653 = shufflevector <8 x half> %2651, <8 x half> %2652, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2654 = shufflevector <2 x half> %2427, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2655 = shufflevector <8 x half> %2653, <8 x half> %2654, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2655, ptr addrspace(3) %211, align 16
  %2656 = shufflevector <2 x half> %2428, <2 x half> %2588, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2657 = shufflevector <2 x half> %2589, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2658 = shufflevector <8 x half> %2656, <8 x half> %2657, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2659 = shufflevector <2 x half> %2429, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2660 = shufflevector <8 x half> %2658, <8 x half> %2659, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2660, ptr addrspace(3) %213, align 16
  %2661 = shufflevector <2 x half> %2430, <2 x half> %2590, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2662 = shufflevector <2 x half> %2591, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2663 = shufflevector <8 x half> %2661, <8 x half> %2662, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2664 = shufflevector <2 x half> %2431, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2665 = shufflevector <8 x half> %2663, <8 x half> %2664, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2665, ptr addrspace(3) %214, align 16
  %2666 = shufflevector <2 x half> %2432, <2 x half> %2592, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2667 = shufflevector <2 x half> %2593, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2668 = shufflevector <8 x half> %2666, <8 x half> %2667, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2669 = shufflevector <2 x half> %2433, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2670 = shufflevector <8 x half> %2668, <8 x half> %2669, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2670, ptr addrspace(3) %215, align 16
  %2671 = shufflevector <2 x half> %2434, <2 x half> %2594, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2672 = shufflevector <2 x half> %2595, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2673 = shufflevector <8 x half> %2671, <8 x half> %2672, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2674 = shufflevector <2 x half> %2435, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2675 = shufflevector <8 x half> %2673, <8 x half> %2674, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2675, ptr addrspace(3) %216, align 16
  %2676 = shufflevector <2 x half> %2436, <2 x half> %2596, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2677 = shufflevector <2 x half> %2597, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2678 = shufflevector <8 x half> %2676, <8 x half> %2677, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2679 = shufflevector <2 x half> %2437, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2680 = shufflevector <8 x half> %2678, <8 x half> %2679, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2680, ptr addrspace(3) %217, align 16
  %2681 = shufflevector <2 x half> %2438, <2 x half> %2598, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2682 = shufflevector <2 x half> %2599, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2683 = shufflevector <8 x half> %2681, <8 x half> %2682, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2684 = shufflevector <2 x half> %2439, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2685 = shufflevector <8 x half> %2683, <8 x half> %2684, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2685, ptr addrspace(3) %218, align 16
  %2686 = shufflevector <2 x half> %2440, <2 x half> %2600, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2687 = shufflevector <2 x half> %2601, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2688 = shufflevector <8 x half> %2686, <8 x half> %2687, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2689 = shufflevector <2 x half> %2441, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2690 = shufflevector <8 x half> %2688, <8 x half> %2689, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2690, ptr addrspace(3) %219, align 16
  %2691 = shufflevector <2 x half> %2442, <2 x half> %2602, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2692 = shufflevector <2 x half> %2603, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2693 = shufflevector <8 x half> %2691, <8 x half> %2692, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2694 = shufflevector <2 x half> %2443, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2695 = shufflevector <8 x half> %2693, <8 x half> %2694, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2695, ptr addrspace(3) %220, align 16
  %2696 = shufflevector <2 x half> %2444, <2 x half> %2604, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %2697 = shufflevector <2 x half> %2605, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2698 = shufflevector <8 x half> %2696, <8 x half> %2697, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %2699 = shufflevector <2 x half> %2445, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2700 = shufflevector <8 x half> %2698, <8 x half> %2699, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  store <8 x half> %2700, ptr addrspace(3) %221, align 16
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %2701 = load <8 x half>, ptr addrspace(3) %237, align 16
  %2702 = load <8 x half>, ptr addrspace(3) %239, align 16
  %2703 = load <8 x half>, ptr addrspace(3) %241, align 16
  %2704 = load <8 x half>, ptr addrspace(3) %243, align 16
  %2705 = load <8 x half>, ptr addrspace(3) %250, align 16
  %2706 = load <8 x half>, ptr addrspace(3) %252, align 16
  %2707 = load <8 x half>, ptr addrspace(3) %254, align 16
  %2708 = load <8 x half>, ptr addrspace(3) %256, align 16
  %2709 = load <8 x half>, ptr addrspace(3) %263, align 16
  %2710 = load <8 x half>, ptr addrspace(3) %265, align 16
  %2711 = load <8 x half>, ptr addrspace(3) %267, align 16
  %2712 = load <8 x half>, ptr addrspace(3) %269, align 16
  %2713 = load <8 x half>, ptr addrspace(3) %276, align 16
  %2714 = load <8 x half>, ptr addrspace(3) %278, align 16
  %2715 = load <8 x half>, ptr addrspace(3) %280, align 16
  %2716 = load <8 x half>, ptr addrspace(3) %282, align 16
  %2717 = load <8 x half>, ptr addrspace(3) %292, align 16
  %2718 = load <8 x half>, ptr addrspace(3) %294, align 16
  %2719 = load <8 x half>, ptr addrspace(3) %296, align 16
  %2720 = load <8 x half>, ptr addrspace(3) %298, align 16
  %2721 = load <8 x half>, ptr addrspace(3) %305, align 16
  %2722 = load <8 x half>, ptr addrspace(3) %307, align 16
  %2723 = load <8 x half>, ptr addrspace(3) %309, align 16
  %2724 = load <8 x half>, ptr addrspace(3) %311, align 16
  %2725 = load <8 x half>, ptr addrspace(3) %318, align 16
  %2726 = load <8 x half>, ptr addrspace(3) %320, align 16
  %2727 = load <8 x half>, ptr addrspace(3) %322, align 16
  %2728 = load <8 x half>, ptr addrspace(3) %324, align 16
  %2729 = load <8 x half>, ptr addrspace(3) %331, align 16
  %2730 = load <8 x half>, ptr addrspace(3) %333, align 16
  %2731 = load <8 x half>, ptr addrspace(3) %335, align 16
  %2732 = load <8 x half>, ptr addrspace(3) %337, align 16
  %2733 = shufflevector <2 x half> %2446, <2 x half> %2447, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2734 = shufflevector <2 x half> %2448, <2 x half> %2449, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2735 = shufflevector <2 x half> %2450, <2 x half> %2451, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2736 = shufflevector <2 x half> %2452, <2 x half> %2453, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2737 = shufflevector <2 x half> %2454, <2 x half> %2455, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2738 = shufflevector <2 x half> %2456, <2 x half> %2457, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2739 = shufflevector <2 x half> %2458, <2 x half> %2459, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2740 = shufflevector <2 x half> %2460, <2 x half> %2461, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2741 = shufflevector <2 x half> %2462, <2 x half> %2463, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2742 = shufflevector <2 x half> %2464, <2 x half> %2465, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2743 = shufflevector <2 x half> %2466, <2 x half> %2467, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2744 = shufflevector <2 x half> %2468, <2 x half> %2469, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2745 = shufflevector <2 x half> %2470, <2 x half> %2471, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2746 = shufflevector <2 x half> %2472, <2 x half> %2473, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2747 = shufflevector <2 x half> %2474, <2 x half> %2475, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2748 = shufflevector <2 x half> %2476, <2 x half> %2477, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2749 = insertelement <4 x float> poison, float %2158, i64 0
  %2750 = insertelement <4 x float> %2749, float %2159, i64 1
  %2751 = insertelement <4 x float> %2750, float %2160, i64 2
  %2752 = insertelement <4 x float> %2751, float %2161, i64 3
  %2753 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2733, <4 x float> %2752, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2754 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2734, <4 x float> %2753, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2755 = insertelement <4 x float> poison, float %2162, i64 0
  %2756 = insertelement <4 x float> %2755, float %2163, i64 1
  %2757 = insertelement <4 x float> %2756, float %2164, i64 2
  %2758 = insertelement <4 x float> %2757, float %2165, i64 3
  %2759 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %2733, <4 x float> %2758, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2760 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %2734, <4 x float> %2759, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2761 = insertelement <4 x float> poison, float %2166, i64 0
  %2762 = insertelement <4 x float> %2761, float %2167, i64 1
  %2763 = insertelement <4 x float> %2762, float %2168, i64 2
  %2764 = insertelement <4 x float> %2763, float %2169, i64 3
  %2765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2737, <4 x float> %2764, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2766 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2738, <4 x float> %2765, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2767 = insertelement <4 x float> poison, float %2170, i64 0
  %2768 = insertelement <4 x float> %2767, float %2171, i64 1
  %2769 = insertelement <4 x float> %2768, float %2172, i64 2
  %2770 = insertelement <4 x float> %2769, float %2173, i64 3
  %2771 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %2737, <4 x float> %2770, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2772 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %2738, <4 x float> %2771, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2773 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2735, <4 x float> %2754, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2774 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2736, <4 x float> %2773, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2775 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %2735, <4 x float> %2760, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2776 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %2736, <4 x float> %2775, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2777 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2739, <4 x float> %2766, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2778 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2740, <4 x float> %2777, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2779 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %2739, <4 x float> %2772, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2780 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %2740, <4 x float> %2779, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2781 = shufflevector <2 x half> %2526, <2 x half> %2527, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2782 = shufflevector <2 x half> %2528, <2 x half> %2529, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2783 = shufflevector <2 x half> %2530, <2 x half> %2531, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2784 = shufflevector <2 x half> %2532, <2 x half> %2533, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2785 = shufflevector <2 x half> %2534, <2 x half> %2535, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2786 = shufflevector <2 x half> %2536, <2 x half> %2537, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2787 = shufflevector <2 x half> %2538, <2 x half> %2539, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2788 = shufflevector <2 x half> %2540, <2 x half> %2541, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2789 = insertelement <4 x float> poison, float %2174, i64 0
  %2790 = insertelement <4 x float> %2789, float %2175, i64 1
  %2791 = insertelement <4 x float> %2790, float %2176, i64 2
  %2792 = insertelement <4 x float> %2791, float %2177, i64 3
  %2793 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %2733, <4 x float> %2792, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2794 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %2734, <4 x float> %2793, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2795 = insertelement <4 x float> poison, float %2178, i64 0
  %2796 = insertelement <4 x float> %2795, float %2179, i64 1
  %2797 = insertelement <4 x float> %2796, float %2180, i64 2
  %2798 = insertelement <4 x float> %2797, float %2181, i64 3
  %2799 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %2733, <4 x float> %2798, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2800 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %2734, <4 x float> %2799, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2801 = insertelement <4 x float> poison, float %2182, i64 0
  %2802 = insertelement <4 x float> %2801, float %2183, i64 1
  %2803 = insertelement <4 x float> %2802, float %2184, i64 2
  %2804 = insertelement <4 x float> %2803, float %2185, i64 3
  %2805 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %2737, <4 x float> %2804, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2806 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %2738, <4 x float> %2805, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2807 = insertelement <4 x float> poison, float %2186, i64 0
  %2808 = insertelement <4 x float> %2807, float %2187, i64 1
  %2809 = insertelement <4 x float> %2808, float %2188, i64 2
  %2810 = insertelement <4 x float> %2809, float %2189, i64 3
  %2811 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %2737, <4 x float> %2810, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2812 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %2738, <4 x float> %2811, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2813 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %2735, <4 x float> %2794, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2814 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %2736, <4 x float> %2813, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2815 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %2735, <4 x float> %2800, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2816 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %2736, <4 x float> %2815, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2817 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %2739, <4 x float> %2806, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2818 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %2740, <4 x float> %2817, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2819 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %2739, <4 x float> %2812, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2820 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %2740, <4 x float> %2819, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2821 = shufflevector <2 x half> %2542, <2 x half> %2543, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2822 = shufflevector <2 x half> %2544, <2 x half> %2545, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2823 = shufflevector <2 x half> %2546, <2 x half> %2547, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2824 = shufflevector <2 x half> %2548, <2 x half> %2549, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2825 = shufflevector <2 x half> %2550, <2 x half> %2551, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2826 = shufflevector <2 x half> %2552, <2 x half> %2553, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2827 = shufflevector <2 x half> %2554, <2 x half> %2555, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2828 = shufflevector <2 x half> %2556, <2 x half> %2557, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2829 = insertelement <4 x float> poison, float %2190, i64 0
  %2830 = insertelement <4 x float> %2829, float %2191, i64 1
  %2831 = insertelement <4 x float> %2830, float %2192, i64 2
  %2832 = insertelement <4 x float> %2831, float %2193, i64 3
  %2833 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %2733, <4 x float> %2832, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2834 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %2734, <4 x float> %2833, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2835 = insertelement <4 x float> poison, float %2194, i64 0
  %2836 = insertelement <4 x float> %2835, float %2195, i64 1
  %2837 = insertelement <4 x float> %2836, float %2196, i64 2
  %2838 = insertelement <4 x float> %2837, float %2197, i64 3
  %2839 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %2733, <4 x float> %2838, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2840 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %2734, <4 x float> %2839, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2841 = insertelement <4 x float> poison, float %2198, i64 0
  %2842 = insertelement <4 x float> %2841, float %2199, i64 1
  %2843 = insertelement <4 x float> %2842, float %2200, i64 2
  %2844 = insertelement <4 x float> %2843, float %2201, i64 3
  %2845 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %2737, <4 x float> %2844, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2846 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %2738, <4 x float> %2845, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2847 = insertelement <4 x float> poison, float %2202, i64 0
  %2848 = insertelement <4 x float> %2847, float %2203, i64 1
  %2849 = insertelement <4 x float> %2848, float %2204, i64 2
  %2850 = insertelement <4 x float> %2849, float %2205, i64 3
  %2851 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %2737, <4 x float> %2850, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2852 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %2738, <4 x float> %2851, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2853 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %2735, <4 x float> %2834, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2854 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %2736, <4 x float> %2853, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2855 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %2735, <4 x float> %2840, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2856 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %2736, <4 x float> %2855, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2857 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %2739, <4 x float> %2846, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2858 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %2740, <4 x float> %2857, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2859 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %2739, <4 x float> %2852, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2860 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %2740, <4 x float> %2859, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2861 = shufflevector <2 x half> %2558, <2 x half> %2559, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2862 = shufflevector <2 x half> %2560, <2 x half> %2561, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2863 = shufflevector <2 x half> %2562, <2 x half> %2563, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2864 = shufflevector <2 x half> %2564, <2 x half> %2565, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2865 = shufflevector <2 x half> %2566, <2 x half> %2567, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2866 = shufflevector <2 x half> %2568, <2 x half> %2569, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2867 = shufflevector <2 x half> %2570, <2 x half> %2571, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2868 = shufflevector <2 x half> %2572, <2 x half> %2573, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2869 = insertelement <4 x float> poison, float %2206, i64 0
  %2870 = insertelement <4 x float> %2869, float %2207, i64 1
  %2871 = insertelement <4 x float> %2870, float %2208, i64 2
  %2872 = insertelement <4 x float> %2871, float %2209, i64 3
  %2873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %2733, <4 x float> %2872, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2874 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %2734, <4 x float> %2873, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2875 = insertelement <4 x float> poison, float %2210, i64 0
  %2876 = insertelement <4 x float> %2875, float %2211, i64 1
  %2877 = insertelement <4 x float> %2876, float %2212, i64 2
  %2878 = insertelement <4 x float> %2877, float %2213, i64 3
  %2879 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %2733, <4 x float> %2878, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2880 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %2734, <4 x float> %2879, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2881 = insertelement <4 x float> poison, float %2214, i64 0
  %2882 = insertelement <4 x float> %2881, float %2215, i64 1
  %2883 = insertelement <4 x float> %2882, float %2216, i64 2
  %2884 = insertelement <4 x float> %2883, float %2217, i64 3
  %2885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %2737, <4 x float> %2884, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2886 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %2738, <4 x float> %2885, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2887 = insertelement <4 x float> poison, float %2218, i64 0
  %2888 = insertelement <4 x float> %2887, float %2219, i64 1
  %2889 = insertelement <4 x float> %2888, float %2220, i64 2
  %2890 = insertelement <4 x float> %2889, float %2221, i64 3
  %2891 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %2737, <4 x float> %2890, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2892 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %2738, <4 x float> %2891, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2893 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %2735, <4 x float> %2874, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2894 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %2736, <4 x float> %2893, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2895 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %2735, <4 x float> %2880, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2896 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %2736, <4 x float> %2895, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %2739, <4 x float> %2886, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2898 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %2740, <4 x float> %2897, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2899 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %2739, <4 x float> %2892, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2900 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %2740, <4 x float> %2899, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2901 = shufflevector <2 x half> %2478, <2 x half> %2479, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2902 = shufflevector <2 x half> %2480, <2 x half> %2481, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2903 = shufflevector <2 x half> %2482, <2 x half> %2483, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2904 = shufflevector <2 x half> %2484, <2 x half> %2485, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2905 = shufflevector <2 x half> %2486, <2 x half> %2487, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2906 = shufflevector <2 x half> %2488, <2 x half> %2489, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2907 = shufflevector <2 x half> %2490, <2 x half> %2491, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2908 = shufflevector <2 x half> %2492, <2 x half> %2493, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2909 = insertelement <4 x float> poison, float %2222, i64 0
  %2910 = insertelement <4 x float> %2909, float %2223, i64 1
  %2911 = insertelement <4 x float> %2910, float %2224, i64 2
  %2912 = insertelement <4 x float> %2911, float %2225, i64 3
  %2913 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2901, <4 x float> %2912, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2914 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2902, <4 x float> %2913, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2915 = insertelement <4 x float> poison, float %2226, i64 0
  %2916 = insertelement <4 x float> %2915, float %2227, i64 1
  %2917 = insertelement <4 x float> %2916, float %2228, i64 2
  %2918 = insertelement <4 x float> %2917, float %2229, i64 3
  %2919 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %2901, <4 x float> %2918, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2920 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %2902, <4 x float> %2919, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2921 = insertelement <4 x float> poison, float %2230, i64 0
  %2922 = insertelement <4 x float> %2921, float %2231, i64 1
  %2923 = insertelement <4 x float> %2922, float %2232, i64 2
  %2924 = insertelement <4 x float> %2923, float %2233, i64 3
  %2925 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2905, <4 x float> %2924, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2926 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2906, <4 x float> %2925, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2927 = insertelement <4 x float> poison, float %2234, i64 0
  %2928 = insertelement <4 x float> %2927, float %2235, i64 1
  %2929 = insertelement <4 x float> %2928, float %2236, i64 2
  %2930 = insertelement <4 x float> %2929, float %2237, i64 3
  %2931 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %2905, <4 x float> %2930, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2932 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %2906, <4 x float> %2931, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2903, <4 x float> %2914, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2934 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2904, <4 x float> %2933, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2935 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %2903, <4 x float> %2920, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2936 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %2904, <4 x float> %2935, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2937 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2907, <4 x float> %2926, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2938 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2908, <4 x float> %2937, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2939 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %2907, <4 x float> %2932, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2940 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %2908, <4 x float> %2939, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2941 = insertelement <4 x float> poison, float %2238, i64 0
  %2942 = insertelement <4 x float> %2941, float %2239, i64 1
  %2943 = insertelement <4 x float> %2942, float %2240, i64 2
  %2944 = insertelement <4 x float> %2943, float %2241, i64 3
  %2945 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %2901, <4 x float> %2944, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2946 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %2902, <4 x float> %2945, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2947 = insertelement <4 x float> poison, float %2242, i64 0
  %2948 = insertelement <4 x float> %2947, float %2243, i64 1
  %2949 = insertelement <4 x float> %2948, float %2244, i64 2
  %2950 = insertelement <4 x float> %2949, float %2245, i64 3
  %2951 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %2901, <4 x float> %2950, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2952 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %2902, <4 x float> %2951, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2953 = insertelement <4 x float> poison, float %2246, i64 0
  %2954 = insertelement <4 x float> %2953, float %2247, i64 1
  %2955 = insertelement <4 x float> %2954, float %2248, i64 2
  %2956 = insertelement <4 x float> %2955, float %2249, i64 3
  %2957 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %2905, <4 x float> %2956, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2958 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %2906, <4 x float> %2957, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2959 = insertelement <4 x float> poison, float %2250, i64 0
  %2960 = insertelement <4 x float> %2959, float %2251, i64 1
  %2961 = insertelement <4 x float> %2960, float %2252, i64 2
  %2962 = insertelement <4 x float> %2961, float %2253, i64 3
  %2963 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %2905, <4 x float> %2962, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2964 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %2906, <4 x float> %2963, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2965 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %2903, <4 x float> %2946, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2966 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %2904, <4 x float> %2965, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2967 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %2903, <4 x float> %2952, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2968 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %2904, <4 x float> %2967, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2969 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %2907, <4 x float> %2958, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2970 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %2908, <4 x float> %2969, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2971 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %2907, <4 x float> %2964, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2972 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %2908, <4 x float> %2971, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2973 = insertelement <4 x float> poison, float %2254, i64 0
  %2974 = insertelement <4 x float> %2973, float %2255, i64 1
  %2975 = insertelement <4 x float> %2974, float %2256, i64 2
  %2976 = insertelement <4 x float> %2975, float %2257, i64 3
  %2977 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %2901, <4 x float> %2976, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2978 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %2902, <4 x float> %2977, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2979 = insertelement <4 x float> poison, float %2258, i64 0
  %2980 = insertelement <4 x float> %2979, float %2259, i64 1
  %2981 = insertelement <4 x float> %2980, float %2260, i64 2
  %2982 = insertelement <4 x float> %2981, float %2261, i64 3
  %2983 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %2901, <4 x float> %2982, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2984 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %2902, <4 x float> %2983, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2985 = insertelement <4 x float> poison, float %2262, i64 0
  %2986 = insertelement <4 x float> %2985, float %2263, i64 1
  %2987 = insertelement <4 x float> %2986, float %2264, i64 2
  %2988 = insertelement <4 x float> %2987, float %2265, i64 3
  %2989 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %2905, <4 x float> %2988, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2990 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %2906, <4 x float> %2989, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2991 = insertelement <4 x float> poison, float %2266, i64 0
  %2992 = insertelement <4 x float> %2991, float %2267, i64 1
  %2993 = insertelement <4 x float> %2992, float %2268, i64 2
  %2994 = insertelement <4 x float> %2993, float %2269, i64 3
  %2995 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %2905, <4 x float> %2994, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2996 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %2906, <4 x float> %2995, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2997 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %2903, <4 x float> %2978, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2998 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %2904, <4 x float> %2997, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %2999 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %2903, <4 x float> %2984, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3000 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %2904, <4 x float> %2999, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3001 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %2907, <4 x float> %2990, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3002 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %2908, <4 x float> %3001, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3003 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %2907, <4 x float> %2996, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3004 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %2908, <4 x float> %3003, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3005 = insertelement <4 x float> poison, float %2270, i64 0
  %3006 = insertelement <4 x float> %3005, float %2271, i64 1
  %3007 = insertelement <4 x float> %3006, float %2272, i64 2
  %3008 = insertelement <4 x float> %3007, float %2273, i64 3
  %3009 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %2901, <4 x float> %3008, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3010 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %2902, <4 x float> %3009, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3011 = insertelement <4 x float> poison, float %2274, i64 0
  %3012 = insertelement <4 x float> %3011, float %2275, i64 1
  %3013 = insertelement <4 x float> %3012, float %2276, i64 2
  %3014 = insertelement <4 x float> %3013, float %2277, i64 3
  %3015 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %2901, <4 x float> %3014, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3016 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %2902, <4 x float> %3015, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3017 = insertelement <4 x float> poison, float %2278, i64 0
  %3018 = insertelement <4 x float> %3017, float %2279, i64 1
  %3019 = insertelement <4 x float> %3018, float %2280, i64 2
  %3020 = insertelement <4 x float> %3019, float %2281, i64 3
  %3021 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %2905, <4 x float> %3020, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3022 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %2906, <4 x float> %3021, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3023 = insertelement <4 x float> poison, float %2282, i64 0
  %3024 = insertelement <4 x float> %3023, float %2283, i64 1
  %3025 = insertelement <4 x float> %3024, float %2284, i64 2
  %3026 = insertelement <4 x float> %3025, float %2285, i64 3
  %3027 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %2905, <4 x float> %3026, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3028 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %2906, <4 x float> %3027, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3029 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %2903, <4 x float> %3010, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3030 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %2904, <4 x float> %3029, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3031 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %2903, <4 x float> %3016, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3032 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %2904, <4 x float> %3031, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3033 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %2907, <4 x float> %3022, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3034 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %2908, <4 x float> %3033, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3035 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %2907, <4 x float> %3028, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3036 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %2908, <4 x float> %3035, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3037 = shufflevector <2 x half> %2494, <2 x half> %2495, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3038 = shufflevector <2 x half> %2496, <2 x half> %2497, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3039 = shufflevector <2 x half> %2498, <2 x half> %2499, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3040 = shufflevector <2 x half> %2500, <2 x half> %2501, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3041 = shufflevector <2 x half> %2502, <2 x half> %2503, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3042 = shufflevector <2 x half> %2504, <2 x half> %2505, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3043 = shufflevector <2 x half> %2506, <2 x half> %2507, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3044 = shufflevector <2 x half> %2508, <2 x half> %2509, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3045 = insertelement <4 x float> poison, float %2286, i64 0
  %3046 = insertelement <4 x float> %3045, float %2287, i64 1
  %3047 = insertelement <4 x float> %3046, float %2288, i64 2
  %3048 = insertelement <4 x float> %3047, float %2289, i64 3
  %3049 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %3037, <4 x float> %3048, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3050 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %3038, <4 x float> %3049, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3051 = insertelement <4 x float> poison, float %2290, i64 0
  %3052 = insertelement <4 x float> %3051, float %2291, i64 1
  %3053 = insertelement <4 x float> %3052, float %2292, i64 2
  %3054 = insertelement <4 x float> %3053, float %2293, i64 3
  %3055 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %3037, <4 x float> %3054, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3056 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %3038, <4 x float> %3055, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3057 = insertelement <4 x float> poison, float %2294, i64 0
  %3058 = insertelement <4 x float> %3057, float %2295, i64 1
  %3059 = insertelement <4 x float> %3058, float %2296, i64 2
  %3060 = insertelement <4 x float> %3059, float %2297, i64 3
  %3061 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %3041, <4 x float> %3060, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3062 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %3042, <4 x float> %3061, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3063 = insertelement <4 x float> poison, float %2298, i64 0
  %3064 = insertelement <4 x float> %3063, float %2299, i64 1
  %3065 = insertelement <4 x float> %3064, float %2300, i64 2
  %3066 = insertelement <4 x float> %3065, float %2301, i64 3
  %3067 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %3041, <4 x float> %3066, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3068 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %3042, <4 x float> %3067, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3069 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %3039, <4 x float> %3050, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3070 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %3040, <4 x float> %3069, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3071 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %3039, <4 x float> %3056, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3072 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %3040, <4 x float> %3071, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3073 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %3043, <4 x float> %3062, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3074 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %3044, <4 x float> %3073, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3075 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %3043, <4 x float> %3068, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3076 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %3044, <4 x float> %3075, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3077 = insertelement <4 x float> poison, float %2302, i64 0
  %3078 = insertelement <4 x float> %3077, float %2303, i64 1
  %3079 = insertelement <4 x float> %3078, float %2304, i64 2
  %3080 = insertelement <4 x float> %3079, float %2305, i64 3
  %3081 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %3037, <4 x float> %3080, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3082 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %3038, <4 x float> %3081, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3083 = insertelement <4 x float> poison, float %2306, i64 0
  %3084 = insertelement <4 x float> %3083, float %2307, i64 1
  %3085 = insertelement <4 x float> %3084, float %2308, i64 2
  %3086 = insertelement <4 x float> %3085, float %2309, i64 3
  %3087 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %3037, <4 x float> %3086, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3088 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %3038, <4 x float> %3087, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3089 = insertelement <4 x float> poison, float %2310, i64 0
  %3090 = insertelement <4 x float> %3089, float %2311, i64 1
  %3091 = insertelement <4 x float> %3090, float %2312, i64 2
  %3092 = insertelement <4 x float> %3091, float %2313, i64 3
  %3093 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %3041, <4 x float> %3092, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3094 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %3042, <4 x float> %3093, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3095 = insertelement <4 x float> poison, float %2314, i64 0
  %3096 = insertelement <4 x float> %3095, float %2315, i64 1
  %3097 = insertelement <4 x float> %3096, float %2316, i64 2
  %3098 = insertelement <4 x float> %3097, float %2317, i64 3
  %3099 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %3041, <4 x float> %3098, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3100 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %3042, <4 x float> %3099, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3101 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %3039, <4 x float> %3082, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3102 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %3040, <4 x float> %3101, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3103 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %3039, <4 x float> %3088, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3104 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %3040, <4 x float> %3103, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3105 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %3043, <4 x float> %3094, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3106 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %3044, <4 x float> %3105, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3107 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %3043, <4 x float> %3100, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3108 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %3044, <4 x float> %3107, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3109 = insertelement <4 x float> poison, float %2318, i64 0
  %3110 = insertelement <4 x float> %3109, float %2319, i64 1
  %3111 = insertelement <4 x float> %3110, float %2320, i64 2
  %3112 = insertelement <4 x float> %3111, float %2321, i64 3
  %3113 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %3037, <4 x float> %3112, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3114 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %3038, <4 x float> %3113, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3115 = insertelement <4 x float> poison, float %2322, i64 0
  %3116 = insertelement <4 x float> %3115, float %2323, i64 1
  %3117 = insertelement <4 x float> %3116, float %2324, i64 2
  %3118 = insertelement <4 x float> %3117, float %2325, i64 3
  %3119 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %3037, <4 x float> %3118, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3120 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %3038, <4 x float> %3119, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3121 = insertelement <4 x float> poison, float %2326, i64 0
  %3122 = insertelement <4 x float> %3121, float %2327, i64 1
  %3123 = insertelement <4 x float> %3122, float %2328, i64 2
  %3124 = insertelement <4 x float> %3123, float %2329, i64 3
  %3125 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %3041, <4 x float> %3124, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3126 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %3042, <4 x float> %3125, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3127 = insertelement <4 x float> poison, float %2330, i64 0
  %3128 = insertelement <4 x float> %3127, float %2331, i64 1
  %3129 = insertelement <4 x float> %3128, float %2332, i64 2
  %3130 = insertelement <4 x float> %3129, float %2333, i64 3
  %3131 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %3041, <4 x float> %3130, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3132 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %3042, <4 x float> %3131, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3133 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %3039, <4 x float> %3114, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3134 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %3040, <4 x float> %3133, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3135 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %3039, <4 x float> %3120, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3136 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %3040, <4 x float> %3135, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3137 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %3043, <4 x float> %3126, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3138 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %3044, <4 x float> %3137, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3139 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %3043, <4 x float> %3132, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3140 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %3044, <4 x float> %3139, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3141 = insertelement <4 x float> poison, float %2334, i64 0
  %3142 = insertelement <4 x float> %3141, float %2335, i64 1
  %3143 = insertelement <4 x float> %3142, float %2336, i64 2
  %3144 = insertelement <4 x float> %3143, float %2337, i64 3
  %3145 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %3037, <4 x float> %3144, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3146 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %3038, <4 x float> %3145, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3147 = insertelement <4 x float> poison, float %2338, i64 0
  %3148 = insertelement <4 x float> %3147, float %2339, i64 1
  %3149 = insertelement <4 x float> %3148, float %2340, i64 2
  %3150 = insertelement <4 x float> %3149, float %2341, i64 3
  %3151 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %3037, <4 x float> %3150, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3152 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %3038, <4 x float> %3151, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3153 = insertelement <4 x float> poison, float %2342, i64 0
  %3154 = insertelement <4 x float> %3153, float %2343, i64 1
  %3155 = insertelement <4 x float> %3154, float %2344, i64 2
  %3156 = insertelement <4 x float> %3155, float %2345, i64 3
  %3157 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %3041, <4 x float> %3156, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3158 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %3042, <4 x float> %3157, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3159 = insertelement <4 x float> poison, float %2346, i64 0
  %3160 = insertelement <4 x float> %3159, float %2347, i64 1
  %3161 = insertelement <4 x float> %3160, float %2348, i64 2
  %3162 = insertelement <4 x float> %3161, float %2349, i64 3
  %3163 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %3041, <4 x float> %3162, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3164 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %3042, <4 x float> %3163, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3165 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %3039, <4 x float> %3146, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3166 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %3040, <4 x float> %3165, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3167 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %3039, <4 x float> %3152, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3168 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %3040, <4 x float> %3167, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3169 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %3043, <4 x float> %3158, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3170 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %3044, <4 x float> %3169, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3171 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %3043, <4 x float> %3164, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3172 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %3044, <4 x float> %3171, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3173 = shufflevector <2 x half> %2510, <2 x half> %2511, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3174 = shufflevector <2 x half> %2512, <2 x half> %2513, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3175 = shufflevector <2 x half> %2514, <2 x half> %2515, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3176 = shufflevector <2 x half> %2516, <2 x half> %2517, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3177 = shufflevector <2 x half> %2518, <2 x half> %2519, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3178 = shufflevector <2 x half> %2520, <2 x half> %2521, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3179 = shufflevector <2 x half> %2522, <2 x half> %2523, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3180 = shufflevector <2 x half> %2524, <2 x half> %2525, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3181 = insertelement <4 x float> poison, float %2350, i64 0
  %3182 = insertelement <4 x float> %3181, float %2351, i64 1
  %3183 = insertelement <4 x float> %3182, float %2352, i64 2
  %3184 = insertelement <4 x float> %3183, float %2353, i64 3
  %3185 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %3173, <4 x float> %3184, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3186 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %3174, <4 x float> %3185, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3187 = insertelement <4 x float> poison, float %2354, i64 0
  %3188 = insertelement <4 x float> %3187, float %2355, i64 1
  %3189 = insertelement <4 x float> %3188, float %2356, i64 2
  %3190 = insertelement <4 x float> %3189, float %2357, i64 3
  %3191 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %3173, <4 x float> %3190, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3192 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %3174, <4 x float> %3191, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3193 = insertelement <4 x float> poison, float %2358, i64 0
  %3194 = insertelement <4 x float> %3193, float %2359, i64 1
  %3195 = insertelement <4 x float> %3194, float %2360, i64 2
  %3196 = insertelement <4 x float> %3195, float %2361, i64 3
  %3197 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %3177, <4 x float> %3196, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3198 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %3178, <4 x float> %3197, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3199 = insertelement <4 x float> poison, float %2362, i64 0
  %3200 = insertelement <4 x float> %3199, float %2363, i64 1
  %3201 = insertelement <4 x float> %3200, float %2364, i64 2
  %3202 = insertelement <4 x float> %3201, float %2365, i64 3
  %3203 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2745, <4 x half> %3177, <4 x float> %3202, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3204 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2746, <4 x half> %3178, <4 x float> %3203, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3205 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %3175, <4 x float> %3186, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3206 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %3176, <4 x float> %3205, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3207 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %3175, <4 x float> %3192, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3208 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %3176, <4 x float> %3207, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3209 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %3179, <4 x float> %3198, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3210 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %3180, <4 x float> %3209, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3211 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2747, <4 x half> %3179, <4 x float> %3204, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3212 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2748, <4 x half> %3180, <4 x float> %3211, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3213 = insertelement <4 x float> poison, float %2366, i64 0
  %3214 = insertelement <4 x float> %3213, float %2367, i64 1
  %3215 = insertelement <4 x float> %3214, float %2368, i64 2
  %3216 = insertelement <4 x float> %3215, float %2369, i64 3
  %3217 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %3173, <4 x float> %3216, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3218 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %3174, <4 x float> %3217, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3219 = insertelement <4 x float> poison, float %2370, i64 0
  %3220 = insertelement <4 x float> %3219, float %2371, i64 1
  %3221 = insertelement <4 x float> %3220, float %2372, i64 2
  %3222 = insertelement <4 x float> %3221, float %2373, i64 3
  %3223 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %3173, <4 x float> %3222, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3224 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %3174, <4 x float> %3223, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3225 = insertelement <4 x float> poison, float %2374, i64 0
  %3226 = insertelement <4 x float> %3225, float %2375, i64 1
  %3227 = insertelement <4 x float> %3226, float %2376, i64 2
  %3228 = insertelement <4 x float> %3227, float %2377, i64 3
  %3229 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2781, <4 x half> %3177, <4 x float> %3228, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3230 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2782, <4 x half> %3178, <4 x float> %3229, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3231 = insertelement <4 x float> poison, float %2378, i64 0
  %3232 = insertelement <4 x float> %3231, float %2379, i64 1
  %3233 = insertelement <4 x float> %3232, float %2380, i64 2
  %3234 = insertelement <4 x float> %3233, float %2381, i64 3
  %3235 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2785, <4 x half> %3177, <4 x float> %3234, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3236 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2786, <4 x half> %3178, <4 x float> %3235, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3237 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %3175, <4 x float> %3218, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3238 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %3176, <4 x float> %3237, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3239 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %3175, <4 x float> %3224, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3240 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %3176, <4 x float> %3239, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3241 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2783, <4 x half> %3179, <4 x float> %3230, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3242 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2784, <4 x half> %3180, <4 x float> %3241, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3243 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2787, <4 x half> %3179, <4 x float> %3236, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3244 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2788, <4 x half> %3180, <4 x float> %3243, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3245 = insertelement <4 x float> poison, float %2382, i64 0
  %3246 = insertelement <4 x float> %3245, float %2383, i64 1
  %3247 = insertelement <4 x float> %3246, float %2384, i64 2
  %3248 = insertelement <4 x float> %3247, float %2385, i64 3
  %3249 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %3173, <4 x float> %3248, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3250 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %3174, <4 x float> %3249, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3251 = insertelement <4 x float> poison, float %2386, i64 0
  %3252 = insertelement <4 x float> %3251, float %2387, i64 1
  %3253 = insertelement <4 x float> %3252, float %2388, i64 2
  %3254 = insertelement <4 x float> %3253, float %2389, i64 3
  %3255 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %3173, <4 x float> %3254, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3256 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %3174, <4 x float> %3255, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3257 = insertelement <4 x float> poison, float %2390, i64 0
  %3258 = insertelement <4 x float> %3257, float %2391, i64 1
  %3259 = insertelement <4 x float> %3258, float %2392, i64 2
  %3260 = insertelement <4 x float> %3259, float %2393, i64 3
  %3261 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2821, <4 x half> %3177, <4 x float> %3260, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3262 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2822, <4 x half> %3178, <4 x float> %3261, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3263 = insertelement <4 x float> poison, float %2394, i64 0
  %3264 = insertelement <4 x float> %3263, float %2395, i64 1
  %3265 = insertelement <4 x float> %3264, float %2396, i64 2
  %3266 = insertelement <4 x float> %3265, float %2397, i64 3
  %3267 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2825, <4 x half> %3177, <4 x float> %3266, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3268 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2826, <4 x half> %3178, <4 x float> %3267, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3269 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %3175, <4 x float> %3250, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3270 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %3176, <4 x float> %3269, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3271 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %3175, <4 x float> %3256, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3272 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %3176, <4 x float> %3271, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3273 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2823, <4 x half> %3179, <4 x float> %3262, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3274 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2824, <4 x half> %3180, <4 x float> %3273, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3275 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2827, <4 x half> %3179, <4 x float> %3268, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3276 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2828, <4 x half> %3180, <4 x float> %3275, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3277 = insertelement <4 x float> poison, float %2398, i64 0
  %3278 = insertelement <4 x float> %3277, float %2399, i64 1
  %3279 = insertelement <4 x float> %3278, float %2400, i64 2
  %3280 = insertelement <4 x float> %3279, float %2401, i64 3
  %3281 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %3173, <4 x float> %3280, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3282 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %3174, <4 x float> %3281, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3283 = insertelement <4 x float> poison, float %2402, i64 0
  %3284 = insertelement <4 x float> %3283, float %2403, i64 1
  %3285 = insertelement <4 x float> %3284, float %2404, i64 2
  %3286 = insertelement <4 x float> %3285, float %2405, i64 3
  %3287 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %3173, <4 x float> %3286, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3288 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %3174, <4 x float> %3287, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3289 = insertelement <4 x float> poison, float %2406, i64 0
  %3290 = insertelement <4 x float> %3289, float %2407, i64 1
  %3291 = insertelement <4 x float> %3290, float %2408, i64 2
  %3292 = insertelement <4 x float> %3291, float %2409, i64 3
  %3293 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2861, <4 x half> %3177, <4 x float> %3292, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3294 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2862, <4 x half> %3178, <4 x float> %3293, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3295 = insertelement <4 x float> poison, float %2410, i64 0
  %3296 = insertelement <4 x float> %3295, float %2411, i64 1
  %3297 = insertelement <4 x float> %3296, float %2412, i64 2
  %3298 = insertelement <4 x float> %3297, float %2413, i64 3
  %3299 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2865, <4 x half> %3177, <4 x float> %3298, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3300 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2866, <4 x half> %3178, <4 x float> %3299, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3301 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %3175, <4 x float> %3282, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3302 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %3176, <4 x float> %3301, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3303 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %3175, <4 x float> %3288, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3304 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %3176, <4 x float> %3303, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3305 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2863, <4 x half> %3179, <4 x float> %3294, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3306 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2864, <4 x half> %3180, <4 x float> %3305, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3307 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2867, <4 x half> %3179, <4 x float> %3300, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3308 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2868, <4 x half> %3180, <4 x float> %3307, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3309 = shufflevector <8 x half> %2701, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3310 = shufflevector <8 x half> %2701, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3311 = shufflevector <8 x half> %2702, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3312 = shufflevector <8 x half> %2702, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3313 = shufflevector <8 x half> %2703, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3314 = shufflevector <8 x half> %2703, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3315 = shufflevector <8 x half> %2704, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3316 = shufflevector <8 x half> %2704, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3317 = shufflevector <8 x half> %2717, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3318 = shufflevector <8 x half> %2717, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3319 = shufflevector <8 x half> %2718, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3320 = shufflevector <8 x half> %2718, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3321 = shufflevector <8 x half> %2719, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3322 = shufflevector <8 x half> %2719, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3323 = shufflevector <8 x half> %2720, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3324 = shufflevector <8 x half> %2720, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3325 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3309, <4 x float> %2774, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3326 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3310, <4 x float> %3325, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3327 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3309, <4 x float> %2776, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3328 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3310, <4 x float> %3327, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3329 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3313, <4 x float> %2778, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3330 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3314, <4 x float> %3329, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3331 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3313, <4 x float> %2780, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3332 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3314, <4 x float> %3331, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3333 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3311, <4 x float> %3326, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3334 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3312, <4 x float> %3333, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3335 = extractelement <4 x float> %3334, i64 0
  %3336 = extractelement <4 x float> %3334, i64 1
  %3337 = extractelement <4 x float> %3334, i64 2
  %3338 = extractelement <4 x float> %3334, i64 3
  %3339 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3311, <4 x float> %3328, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3340 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3312, <4 x float> %3339, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3341 = extractelement <4 x float> %3340, i64 0
  %3342 = extractelement <4 x float> %3340, i64 1
  %3343 = extractelement <4 x float> %3340, i64 2
  %3344 = extractelement <4 x float> %3340, i64 3
  %3345 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3315, <4 x float> %3330, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3346 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3316, <4 x float> %3345, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3347 = extractelement <4 x float> %3346, i64 0
  %3348 = extractelement <4 x float> %3346, i64 1
  %3349 = extractelement <4 x float> %3346, i64 2
  %3350 = extractelement <4 x float> %3346, i64 3
  %3351 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3315, <4 x float> %3332, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3352 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3316, <4 x float> %3351, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3353 = extractelement <4 x float> %3352, i64 0
  %3354 = extractelement <4 x float> %3352, i64 1
  %3355 = extractelement <4 x float> %3352, i64 2
  %3356 = extractelement <4 x float> %3352, i64 3
  %3357 = shufflevector <8 x half> %2721, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3358 = shufflevector <8 x half> %2721, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3359 = shufflevector <8 x half> %2722, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3360 = shufflevector <8 x half> %2722, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3361 = shufflevector <8 x half> %2723, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3362 = shufflevector <8 x half> %2723, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3363 = shufflevector <8 x half> %2724, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3364 = shufflevector <8 x half> %2724, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3365 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3309, <4 x float> %2814, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3366 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3310, <4 x float> %3365, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3367 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3309, <4 x float> %2816, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3368 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3310, <4 x float> %3367, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3369 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3313, <4 x float> %2818, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3370 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3314, <4 x float> %3369, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3371 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3313, <4 x float> %2820, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3372 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3314, <4 x float> %3371, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3373 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3311, <4 x float> %3366, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3374 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3312, <4 x float> %3373, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3375 = extractelement <4 x float> %3374, i64 0
  %3376 = extractelement <4 x float> %3374, i64 1
  %3377 = extractelement <4 x float> %3374, i64 2
  %3378 = extractelement <4 x float> %3374, i64 3
  %3379 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3311, <4 x float> %3368, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3380 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3312, <4 x float> %3379, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3381 = extractelement <4 x float> %3380, i64 0
  %3382 = extractelement <4 x float> %3380, i64 1
  %3383 = extractelement <4 x float> %3380, i64 2
  %3384 = extractelement <4 x float> %3380, i64 3
  %3385 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3315, <4 x float> %3370, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3386 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3316, <4 x float> %3385, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3387 = extractelement <4 x float> %3386, i64 0
  %3388 = extractelement <4 x float> %3386, i64 1
  %3389 = extractelement <4 x float> %3386, i64 2
  %3390 = extractelement <4 x float> %3386, i64 3
  %3391 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3315, <4 x float> %3372, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3392 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3316, <4 x float> %3391, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3393 = extractelement <4 x float> %3392, i64 0
  %3394 = extractelement <4 x float> %3392, i64 1
  %3395 = extractelement <4 x float> %3392, i64 2
  %3396 = extractelement <4 x float> %3392, i64 3
  %3397 = shufflevector <8 x half> %2725, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3398 = shufflevector <8 x half> %2725, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3399 = shufflevector <8 x half> %2726, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3400 = shufflevector <8 x half> %2726, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3401 = shufflevector <8 x half> %2727, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3402 = shufflevector <8 x half> %2727, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3403 = shufflevector <8 x half> %2728, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3404 = shufflevector <8 x half> %2728, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3405 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3309, <4 x float> %2854, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3406 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3310, <4 x float> %3405, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3407 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3309, <4 x float> %2856, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3408 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3310, <4 x float> %3407, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3409 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3313, <4 x float> %2858, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3410 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3314, <4 x float> %3409, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3411 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3313, <4 x float> %2860, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3412 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3314, <4 x float> %3411, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3413 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3311, <4 x float> %3406, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3414 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3312, <4 x float> %3413, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3415 = extractelement <4 x float> %3414, i64 0
  %3416 = extractelement <4 x float> %3414, i64 1
  %3417 = extractelement <4 x float> %3414, i64 2
  %3418 = extractelement <4 x float> %3414, i64 3
  %3419 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3311, <4 x float> %3408, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3420 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3312, <4 x float> %3419, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3421 = extractelement <4 x float> %3420, i64 0
  %3422 = extractelement <4 x float> %3420, i64 1
  %3423 = extractelement <4 x float> %3420, i64 2
  %3424 = extractelement <4 x float> %3420, i64 3
  %3425 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3315, <4 x float> %3410, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3426 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3316, <4 x float> %3425, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3427 = extractelement <4 x float> %3426, i64 0
  %3428 = extractelement <4 x float> %3426, i64 1
  %3429 = extractelement <4 x float> %3426, i64 2
  %3430 = extractelement <4 x float> %3426, i64 3
  %3431 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3315, <4 x float> %3412, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3432 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3316, <4 x float> %3431, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3433 = extractelement <4 x float> %3432, i64 0
  %3434 = extractelement <4 x float> %3432, i64 1
  %3435 = extractelement <4 x float> %3432, i64 2
  %3436 = extractelement <4 x float> %3432, i64 3
  %3437 = shufflevector <8 x half> %2729, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3438 = shufflevector <8 x half> %2729, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3439 = shufflevector <8 x half> %2730, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3440 = shufflevector <8 x half> %2730, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3441 = shufflevector <8 x half> %2731, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3442 = shufflevector <8 x half> %2731, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3443 = shufflevector <8 x half> %2732, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3444 = shufflevector <8 x half> %2732, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3445 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3309, <4 x float> %2894, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3446 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3310, <4 x float> %3445, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3447 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3309, <4 x float> %2896, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3448 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3310, <4 x float> %3447, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3449 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3313, <4 x float> %2898, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3450 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3314, <4 x float> %3449, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3451 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3313, <4 x float> %2900, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3452 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3314, <4 x float> %3451, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3453 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3311, <4 x float> %3446, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3454 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3312, <4 x float> %3453, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3455 = extractelement <4 x float> %3454, i64 0
  %3456 = extractelement <4 x float> %3454, i64 1
  %3457 = extractelement <4 x float> %3454, i64 2
  %3458 = extractelement <4 x float> %3454, i64 3
  %3459 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3311, <4 x float> %3448, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3460 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3312, <4 x float> %3459, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3461 = extractelement <4 x float> %3460, i64 0
  %3462 = extractelement <4 x float> %3460, i64 1
  %3463 = extractelement <4 x float> %3460, i64 2
  %3464 = extractelement <4 x float> %3460, i64 3
  %3465 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3315, <4 x float> %3450, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3466 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3316, <4 x float> %3465, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3467 = extractelement <4 x float> %3466, i64 0
  %3468 = extractelement <4 x float> %3466, i64 1
  %3469 = extractelement <4 x float> %3466, i64 2
  %3470 = extractelement <4 x float> %3466, i64 3
  %3471 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3315, <4 x float> %3452, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3472 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3316, <4 x float> %3471, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3473 = extractelement <4 x float> %3472, i64 0
  %3474 = extractelement <4 x float> %3472, i64 1
  %3475 = extractelement <4 x float> %3472, i64 2
  %3476 = extractelement <4 x float> %3472, i64 3
  %3477 = shufflevector <8 x half> %2705, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3478 = shufflevector <8 x half> %2705, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3479 = shufflevector <8 x half> %2706, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3480 = shufflevector <8 x half> %2706, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3481 = shufflevector <8 x half> %2707, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3482 = shufflevector <8 x half> %2707, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3483 = shufflevector <8 x half> %2708, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3484 = shufflevector <8 x half> %2708, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3485 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3477, <4 x float> %2934, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3486 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3478, <4 x float> %3485, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3487 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3477, <4 x float> %2936, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3488 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3478, <4 x float> %3487, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3489 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3481, <4 x float> %2938, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3490 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3482, <4 x float> %3489, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3491 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3481, <4 x float> %2940, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3492 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3482, <4 x float> %3491, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3493 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3479, <4 x float> %3486, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3494 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3480, <4 x float> %3493, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3495 = extractelement <4 x float> %3494, i64 0
  %3496 = extractelement <4 x float> %3494, i64 1
  %3497 = extractelement <4 x float> %3494, i64 2
  %3498 = extractelement <4 x float> %3494, i64 3
  %3499 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3479, <4 x float> %3488, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3500 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3480, <4 x float> %3499, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3501 = extractelement <4 x float> %3500, i64 0
  %3502 = extractelement <4 x float> %3500, i64 1
  %3503 = extractelement <4 x float> %3500, i64 2
  %3504 = extractelement <4 x float> %3500, i64 3
  %3505 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3483, <4 x float> %3490, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3506 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3484, <4 x float> %3505, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3507 = extractelement <4 x float> %3506, i64 0
  %3508 = extractelement <4 x float> %3506, i64 1
  %3509 = extractelement <4 x float> %3506, i64 2
  %3510 = extractelement <4 x float> %3506, i64 3
  %3511 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3483, <4 x float> %3492, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3512 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3484, <4 x float> %3511, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3513 = extractelement <4 x float> %3512, i64 0
  %3514 = extractelement <4 x float> %3512, i64 1
  %3515 = extractelement <4 x float> %3512, i64 2
  %3516 = extractelement <4 x float> %3512, i64 3
  %3517 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3477, <4 x float> %2966, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3518 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3478, <4 x float> %3517, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3519 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3477, <4 x float> %2968, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3520 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3478, <4 x float> %3519, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3521 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3481, <4 x float> %2970, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3522 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3482, <4 x float> %3521, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3523 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3481, <4 x float> %2972, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3524 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3482, <4 x float> %3523, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3525 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3479, <4 x float> %3518, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3526 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3480, <4 x float> %3525, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3527 = extractelement <4 x float> %3526, i64 0
  %3528 = extractelement <4 x float> %3526, i64 1
  %3529 = extractelement <4 x float> %3526, i64 2
  %3530 = extractelement <4 x float> %3526, i64 3
  %3531 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3479, <4 x float> %3520, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3532 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3480, <4 x float> %3531, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3533 = extractelement <4 x float> %3532, i64 0
  %3534 = extractelement <4 x float> %3532, i64 1
  %3535 = extractelement <4 x float> %3532, i64 2
  %3536 = extractelement <4 x float> %3532, i64 3
  %3537 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3483, <4 x float> %3522, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3538 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3484, <4 x float> %3537, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3539 = extractelement <4 x float> %3538, i64 0
  %3540 = extractelement <4 x float> %3538, i64 1
  %3541 = extractelement <4 x float> %3538, i64 2
  %3542 = extractelement <4 x float> %3538, i64 3
  %3543 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3483, <4 x float> %3524, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3544 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3484, <4 x float> %3543, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3545 = extractelement <4 x float> %3544, i64 0
  %3546 = extractelement <4 x float> %3544, i64 1
  %3547 = extractelement <4 x float> %3544, i64 2
  %3548 = extractelement <4 x float> %3544, i64 3
  %3549 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3477, <4 x float> %2998, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3550 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3478, <4 x float> %3549, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3551 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3477, <4 x float> %3000, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3552 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3478, <4 x float> %3551, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3553 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3481, <4 x float> %3002, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3554 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3482, <4 x float> %3553, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3555 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3481, <4 x float> %3004, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3556 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3482, <4 x float> %3555, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3557 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3479, <4 x float> %3550, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3558 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3480, <4 x float> %3557, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3559 = extractelement <4 x float> %3558, i64 0
  %3560 = extractelement <4 x float> %3558, i64 1
  %3561 = extractelement <4 x float> %3558, i64 2
  %3562 = extractelement <4 x float> %3558, i64 3
  %3563 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3479, <4 x float> %3552, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3564 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3480, <4 x float> %3563, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3565 = extractelement <4 x float> %3564, i64 0
  %3566 = extractelement <4 x float> %3564, i64 1
  %3567 = extractelement <4 x float> %3564, i64 2
  %3568 = extractelement <4 x float> %3564, i64 3
  %3569 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3483, <4 x float> %3554, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3570 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3484, <4 x float> %3569, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3571 = extractelement <4 x float> %3570, i64 0
  %3572 = extractelement <4 x float> %3570, i64 1
  %3573 = extractelement <4 x float> %3570, i64 2
  %3574 = extractelement <4 x float> %3570, i64 3
  %3575 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3483, <4 x float> %3556, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3576 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3484, <4 x float> %3575, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3577 = extractelement <4 x float> %3576, i64 0
  %3578 = extractelement <4 x float> %3576, i64 1
  %3579 = extractelement <4 x float> %3576, i64 2
  %3580 = extractelement <4 x float> %3576, i64 3
  %3581 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3477, <4 x float> %3030, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3582 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3478, <4 x float> %3581, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3583 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3477, <4 x float> %3032, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3584 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3478, <4 x float> %3583, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3585 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3481, <4 x float> %3034, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3586 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3482, <4 x float> %3585, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3587 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3481, <4 x float> %3036, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3588 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3482, <4 x float> %3587, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3589 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3479, <4 x float> %3582, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3590 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3480, <4 x float> %3589, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3591 = extractelement <4 x float> %3590, i64 0
  %3592 = extractelement <4 x float> %3590, i64 1
  %3593 = extractelement <4 x float> %3590, i64 2
  %3594 = extractelement <4 x float> %3590, i64 3
  %3595 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3479, <4 x float> %3584, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3596 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3480, <4 x float> %3595, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3597 = extractelement <4 x float> %3596, i64 0
  %3598 = extractelement <4 x float> %3596, i64 1
  %3599 = extractelement <4 x float> %3596, i64 2
  %3600 = extractelement <4 x float> %3596, i64 3
  %3601 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3483, <4 x float> %3586, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3602 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3484, <4 x float> %3601, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3603 = extractelement <4 x float> %3602, i64 0
  %3604 = extractelement <4 x float> %3602, i64 1
  %3605 = extractelement <4 x float> %3602, i64 2
  %3606 = extractelement <4 x float> %3602, i64 3
  %3607 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3483, <4 x float> %3588, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3608 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3484, <4 x float> %3607, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3609 = extractelement <4 x float> %3608, i64 0
  %3610 = extractelement <4 x float> %3608, i64 1
  %3611 = extractelement <4 x float> %3608, i64 2
  %3612 = extractelement <4 x float> %3608, i64 3
  %3613 = shufflevector <8 x half> %2709, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3614 = shufflevector <8 x half> %2709, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3615 = shufflevector <8 x half> %2710, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3616 = shufflevector <8 x half> %2710, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3617 = shufflevector <8 x half> %2711, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3618 = shufflevector <8 x half> %2711, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3619 = shufflevector <8 x half> %2712, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3620 = shufflevector <8 x half> %2712, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3621 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3613, <4 x float> %3070, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3622 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3614, <4 x float> %3621, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3623 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3613, <4 x float> %3072, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3624 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3614, <4 x float> %3623, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3625 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3617, <4 x float> %3074, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3626 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3618, <4 x float> %3625, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3627 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3617, <4 x float> %3076, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3628 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3618, <4 x float> %3627, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3629 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3615, <4 x float> %3622, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3630 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3616, <4 x float> %3629, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3631 = extractelement <4 x float> %3630, i64 0
  %3632 = extractelement <4 x float> %3630, i64 1
  %3633 = extractelement <4 x float> %3630, i64 2
  %3634 = extractelement <4 x float> %3630, i64 3
  %3635 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3615, <4 x float> %3624, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3636 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3616, <4 x float> %3635, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3637 = extractelement <4 x float> %3636, i64 0
  %3638 = extractelement <4 x float> %3636, i64 1
  %3639 = extractelement <4 x float> %3636, i64 2
  %3640 = extractelement <4 x float> %3636, i64 3
  %3641 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3619, <4 x float> %3626, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3642 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3620, <4 x float> %3641, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3643 = extractelement <4 x float> %3642, i64 0
  %3644 = extractelement <4 x float> %3642, i64 1
  %3645 = extractelement <4 x float> %3642, i64 2
  %3646 = extractelement <4 x float> %3642, i64 3
  %3647 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3619, <4 x float> %3628, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3648 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3620, <4 x float> %3647, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3649 = extractelement <4 x float> %3648, i64 0
  %3650 = extractelement <4 x float> %3648, i64 1
  %3651 = extractelement <4 x float> %3648, i64 2
  %3652 = extractelement <4 x float> %3648, i64 3
  %3653 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3613, <4 x float> %3102, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3654 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3614, <4 x float> %3653, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3655 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3613, <4 x float> %3104, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3656 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3614, <4 x float> %3655, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3657 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3617, <4 x float> %3106, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3658 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3618, <4 x float> %3657, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3659 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3617, <4 x float> %3108, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3660 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3618, <4 x float> %3659, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3661 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3615, <4 x float> %3654, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3662 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3616, <4 x float> %3661, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3663 = extractelement <4 x float> %3662, i64 0
  %3664 = extractelement <4 x float> %3662, i64 1
  %3665 = extractelement <4 x float> %3662, i64 2
  %3666 = extractelement <4 x float> %3662, i64 3
  %3667 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3615, <4 x float> %3656, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3668 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3616, <4 x float> %3667, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3669 = extractelement <4 x float> %3668, i64 0
  %3670 = extractelement <4 x float> %3668, i64 1
  %3671 = extractelement <4 x float> %3668, i64 2
  %3672 = extractelement <4 x float> %3668, i64 3
  %3673 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3619, <4 x float> %3658, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3674 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3620, <4 x float> %3673, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3675 = extractelement <4 x float> %3674, i64 0
  %3676 = extractelement <4 x float> %3674, i64 1
  %3677 = extractelement <4 x float> %3674, i64 2
  %3678 = extractelement <4 x float> %3674, i64 3
  %3679 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3619, <4 x float> %3660, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3680 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3620, <4 x float> %3679, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3681 = extractelement <4 x float> %3680, i64 0
  %3682 = extractelement <4 x float> %3680, i64 1
  %3683 = extractelement <4 x float> %3680, i64 2
  %3684 = extractelement <4 x float> %3680, i64 3
  %3685 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3613, <4 x float> %3134, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3686 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3614, <4 x float> %3685, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3687 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3613, <4 x float> %3136, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3688 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3614, <4 x float> %3687, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3689 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3617, <4 x float> %3138, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3690 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3618, <4 x float> %3689, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3691 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3617, <4 x float> %3140, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3692 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3618, <4 x float> %3691, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3693 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3615, <4 x float> %3686, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3694 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3616, <4 x float> %3693, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3695 = extractelement <4 x float> %3694, i64 0
  %3696 = extractelement <4 x float> %3694, i64 1
  %3697 = extractelement <4 x float> %3694, i64 2
  %3698 = extractelement <4 x float> %3694, i64 3
  %3699 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3615, <4 x float> %3688, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3700 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3616, <4 x float> %3699, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3701 = extractelement <4 x float> %3700, i64 0
  %3702 = extractelement <4 x float> %3700, i64 1
  %3703 = extractelement <4 x float> %3700, i64 2
  %3704 = extractelement <4 x float> %3700, i64 3
  %3705 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3619, <4 x float> %3690, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3706 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3620, <4 x float> %3705, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3707 = extractelement <4 x float> %3706, i64 0
  %3708 = extractelement <4 x float> %3706, i64 1
  %3709 = extractelement <4 x float> %3706, i64 2
  %3710 = extractelement <4 x float> %3706, i64 3
  %3711 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3619, <4 x float> %3692, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3712 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3620, <4 x float> %3711, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3713 = extractelement <4 x float> %3712, i64 0
  %3714 = extractelement <4 x float> %3712, i64 1
  %3715 = extractelement <4 x float> %3712, i64 2
  %3716 = extractelement <4 x float> %3712, i64 3
  %3717 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3613, <4 x float> %3166, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3718 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3614, <4 x float> %3717, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3719 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3613, <4 x float> %3168, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3720 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3614, <4 x float> %3719, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3721 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3617, <4 x float> %3170, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3722 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3618, <4 x float> %3721, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3723 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3617, <4 x float> %3172, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3724 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3618, <4 x float> %3723, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3725 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3615, <4 x float> %3718, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3726 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3616, <4 x float> %3725, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3727 = extractelement <4 x float> %3726, i64 0
  %3728 = extractelement <4 x float> %3726, i64 1
  %3729 = extractelement <4 x float> %3726, i64 2
  %3730 = extractelement <4 x float> %3726, i64 3
  %3731 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3615, <4 x float> %3720, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3732 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3616, <4 x float> %3731, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3733 = extractelement <4 x float> %3732, i64 0
  %3734 = extractelement <4 x float> %3732, i64 1
  %3735 = extractelement <4 x float> %3732, i64 2
  %3736 = extractelement <4 x float> %3732, i64 3
  %3737 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3619, <4 x float> %3722, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3738 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3620, <4 x float> %3737, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3739 = extractelement <4 x float> %3738, i64 0
  %3740 = extractelement <4 x float> %3738, i64 1
  %3741 = extractelement <4 x float> %3738, i64 2
  %3742 = extractelement <4 x float> %3738, i64 3
  %3743 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3619, <4 x float> %3724, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3744 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3620, <4 x float> %3743, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3745 = extractelement <4 x float> %3744, i64 0
  %3746 = extractelement <4 x float> %3744, i64 1
  %3747 = extractelement <4 x float> %3744, i64 2
  %3748 = extractelement <4 x float> %3744, i64 3
  %3749 = shufflevector <8 x half> %2713, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3750 = shufflevector <8 x half> %2713, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3751 = shufflevector <8 x half> %2714, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3752 = shufflevector <8 x half> %2714, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3753 = shufflevector <8 x half> %2715, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3754 = shufflevector <8 x half> %2715, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3755 = shufflevector <8 x half> %2716, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3756 = shufflevector <8 x half> %2716, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3757 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3749, <4 x float> %3206, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3758 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3750, <4 x float> %3757, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3759 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3749, <4 x float> %3208, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3760 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3750, <4 x float> %3759, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3761 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3317, <4 x half> %3753, <4 x float> %3210, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3762 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3318, <4 x half> %3754, <4 x float> %3761, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3763 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3321, <4 x half> %3753, <4 x float> %3212, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3764 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3322, <4 x half> %3754, <4 x float> %3763, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3751, <4 x float> %3758, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3766 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3752, <4 x float> %3765, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3767 = extractelement <4 x float> %3766, i64 0
  %3768 = extractelement <4 x float> %3766, i64 1
  %3769 = extractelement <4 x float> %3766, i64 2
  %3770 = extractelement <4 x float> %3766, i64 3
  %3771 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3751, <4 x float> %3760, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3772 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3752, <4 x float> %3771, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3773 = extractelement <4 x float> %3772, i64 0
  %3774 = extractelement <4 x float> %3772, i64 1
  %3775 = extractelement <4 x float> %3772, i64 2
  %3776 = extractelement <4 x float> %3772, i64 3
  %3777 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3319, <4 x half> %3755, <4 x float> %3762, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3778 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3320, <4 x half> %3756, <4 x float> %3777, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3779 = extractelement <4 x float> %3778, i64 0
  %3780 = extractelement <4 x float> %3778, i64 1
  %3781 = extractelement <4 x float> %3778, i64 2
  %3782 = extractelement <4 x float> %3778, i64 3
  %3783 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3323, <4 x half> %3755, <4 x float> %3764, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3784 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3324, <4 x half> %3756, <4 x float> %3783, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3785 = extractelement <4 x float> %3784, i64 0
  %3786 = extractelement <4 x float> %3784, i64 1
  %3787 = extractelement <4 x float> %3784, i64 2
  %3788 = extractelement <4 x float> %3784, i64 3
  %3789 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3749, <4 x float> %3238, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3790 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3750, <4 x float> %3789, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3791 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3749, <4 x float> %3240, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3792 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3750, <4 x float> %3791, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3793 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3357, <4 x half> %3753, <4 x float> %3242, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3794 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3358, <4 x half> %3754, <4 x float> %3793, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3795 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3361, <4 x half> %3753, <4 x float> %3244, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3796 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3362, <4 x half> %3754, <4 x float> %3795, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3797 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3751, <4 x float> %3790, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3798 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3752, <4 x float> %3797, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3799 = extractelement <4 x float> %3798, i64 0
  %3800 = extractelement <4 x float> %3798, i64 1
  %3801 = extractelement <4 x float> %3798, i64 2
  %3802 = extractelement <4 x float> %3798, i64 3
  %3803 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3751, <4 x float> %3792, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3804 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3752, <4 x float> %3803, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3805 = extractelement <4 x float> %3804, i64 0
  %3806 = extractelement <4 x float> %3804, i64 1
  %3807 = extractelement <4 x float> %3804, i64 2
  %3808 = extractelement <4 x float> %3804, i64 3
  %3809 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3359, <4 x half> %3755, <4 x float> %3794, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3810 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3360, <4 x half> %3756, <4 x float> %3809, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3811 = extractelement <4 x float> %3810, i64 0
  %3812 = extractelement <4 x float> %3810, i64 1
  %3813 = extractelement <4 x float> %3810, i64 2
  %3814 = extractelement <4 x float> %3810, i64 3
  %3815 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3363, <4 x half> %3755, <4 x float> %3796, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3816 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3364, <4 x half> %3756, <4 x float> %3815, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3817 = extractelement <4 x float> %3816, i64 0
  %3818 = extractelement <4 x float> %3816, i64 1
  %3819 = extractelement <4 x float> %3816, i64 2
  %3820 = extractelement <4 x float> %3816, i64 3
  %3821 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3749, <4 x float> %3270, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3822 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3750, <4 x float> %3821, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3823 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3749, <4 x float> %3272, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3824 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3750, <4 x float> %3823, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3397, <4 x half> %3753, <4 x float> %3274, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3826 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3398, <4 x half> %3754, <4 x float> %3825, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3827 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3401, <4 x half> %3753, <4 x float> %3276, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3828 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3402, <4 x half> %3754, <4 x float> %3827, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3829 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3751, <4 x float> %3822, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3830 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3752, <4 x float> %3829, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3831 = extractelement <4 x float> %3830, i64 0
  %3832 = extractelement <4 x float> %3830, i64 1
  %3833 = extractelement <4 x float> %3830, i64 2
  %3834 = extractelement <4 x float> %3830, i64 3
  %3835 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3751, <4 x float> %3824, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3836 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3752, <4 x float> %3835, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3837 = extractelement <4 x float> %3836, i64 0
  %3838 = extractelement <4 x float> %3836, i64 1
  %3839 = extractelement <4 x float> %3836, i64 2
  %3840 = extractelement <4 x float> %3836, i64 3
  %3841 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3399, <4 x half> %3755, <4 x float> %3826, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3842 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3400, <4 x half> %3756, <4 x float> %3841, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3843 = extractelement <4 x float> %3842, i64 0
  %3844 = extractelement <4 x float> %3842, i64 1
  %3845 = extractelement <4 x float> %3842, i64 2
  %3846 = extractelement <4 x float> %3842, i64 3
  %3847 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3403, <4 x half> %3755, <4 x float> %3828, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3848 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3404, <4 x half> %3756, <4 x float> %3847, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3849 = extractelement <4 x float> %3848, i64 0
  %3850 = extractelement <4 x float> %3848, i64 1
  %3851 = extractelement <4 x float> %3848, i64 2
  %3852 = extractelement <4 x float> %3848, i64 3
  %3853 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3749, <4 x float> %3302, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3854 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3750, <4 x float> %3853, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3855 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3749, <4 x float> %3304, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3856 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3750, <4 x float> %3855, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3857 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3437, <4 x half> %3753, <4 x float> %3306, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3858 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3438, <4 x half> %3754, <4 x float> %3857, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3859 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3441, <4 x half> %3753, <4 x float> %3308, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3860 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3442, <4 x half> %3754, <4 x float> %3859, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3861 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3751, <4 x float> %3854, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3862 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3752, <4 x float> %3861, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3863 = extractelement <4 x float> %3862, i64 0
  %3864 = extractelement <4 x float> %3862, i64 1
  %3865 = extractelement <4 x float> %3862, i64 2
  %3866 = extractelement <4 x float> %3862, i64 3
  %3867 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3751, <4 x float> %3856, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3868 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3752, <4 x float> %3867, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3869 = extractelement <4 x float> %3868, i64 0
  %3870 = extractelement <4 x float> %3868, i64 1
  %3871 = extractelement <4 x float> %3868, i64 2
  %3872 = extractelement <4 x float> %3868, i64 3
  %3873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3439, <4 x half> %3755, <4 x float> %3858, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3874 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3440, <4 x half> %3756, <4 x float> %3873, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3875 = extractelement <4 x float> %3874, i64 0
  %3876 = extractelement <4 x float> %3874, i64 1
  %3877 = extractelement <4 x float> %3874, i64 2
  %3878 = extractelement <4 x float> %3874, i64 3
  %3879 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3443, <4 x half> %3755, <4 x float> %3860, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3880 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3444, <4 x half> %3756, <4 x float> %3879, i32 0, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 2038)
  %3881 = extractelement <4 x float> %3880, i64 0
  %3882 = extractelement <4 x float> %3880, i64 1
  %3883 = extractelement <4 x float> %3880, i64 2
  %3884 = extractelement <4 x float> %3880, i64 3
  %3885 = mul i32 %31, %9
  %3886 = sext i32 %3885 to i64
  %3887 = getelementptr half, ptr addrspace(1) %2, i64 %3886
  %3888 = sext i32 %118 to i64
  %3889 = getelementptr half, ptr addrspace(1) %3887, i64 %3888
  %3890 = mul i32 %9, %225
  %3891 = mul i32 %9, %2620
  %3892 = mul i32 %9, %2619
  %3893 = mul i32 %9, %2618
  %3894 = mul i32 %9, %2617
  %3895 = mul i32 %9, %2616
  %3896 = mul i32 %9, %2615
  %3897 = mul i32 %9, %2614
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !158
  %3898 = add i32 %3890, %2606
  %3899 = add i32 %3890, %2613
  %3900 = add i32 %3891, %2606
  %3901 = add i32 %3891, %2613
  %3902 = fptrunc float %3335 to half
  %3903 = fptrunc float %3336 to half
  %3904 = fptrunc float %3337 to half
  %3905 = fptrunc float %3338 to half
  %3906 = fptrunc float %3341 to half
  %3907 = fptrunc float %3342 to half
  %3908 = fptrunc float %3343 to half
  %3909 = fptrunc float %3344 to half
  %3910 = fptrunc float %3347 to half
  %3911 = fptrunc float %3348 to half
  %3912 = fptrunc float %3349 to half
  %3913 = fptrunc float %3350 to half
  %3914 = fptrunc float %3353 to half
  %3915 = fptrunc float %3354 to half
  %3916 = fptrunc float %3355 to half
  %3917 = fptrunc float %3356 to half
  %3918 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %3889, i16 0, i32 2147483646, i32 159744)
  %3919 = insertelement <4 x half> poison, half %3902, i64 0
  %3920 = insertelement <4 x half> %3919, half %3903, i64 1
  %3921 = insertelement <4 x half> %3920, half %3904, i64 2
  %3922 = insertelement <4 x half> %3921, half %3905, i64 3
  %3923 = bitcast <4 x half> %3922 to <2 x i32>
  %3924 = shl i32 %3898, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3923, ptr addrspace(8) %3918, i32 %3924, i32 0, i32 0)
  %3925 = insertelement <4 x half> poison, half %3906, i64 0
  %3926 = insertelement <4 x half> %3925, half %3907, i64 1
  %3927 = insertelement <4 x half> %3926, half %3908, i64 2
  %3928 = insertelement <4 x half> %3927, half %3909, i64 3
  %3929 = bitcast <4 x half> %3928 to <2 x i32>
  %3930 = shl i32 %3899, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3929, ptr addrspace(8) %3918, i32 %3930, i32 0, i32 0)
  %3931 = insertelement <4 x half> poison, half %3910, i64 0
  %3932 = insertelement <4 x half> %3931, half %3911, i64 1
  %3933 = insertelement <4 x half> %3932, half %3912, i64 2
  %3934 = insertelement <4 x half> %3933, half %3913, i64 3
  %3935 = bitcast <4 x half> %3934 to <2 x i32>
  %3936 = shl i32 %3900, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3935, ptr addrspace(8) %3918, i32 %3936, i32 0, i32 0)
  %3937 = insertelement <4 x half> poison, half %3914, i64 0
  %3938 = insertelement <4 x half> %3937, half %3915, i64 1
  %3939 = insertelement <4 x half> %3938, half %3916, i64 2
  %3940 = insertelement <4 x half> %3939, half %3917, i64 3
  %3941 = bitcast <4 x half> %3940 to <2 x i32>
  %3942 = shl i32 %3901, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3941, ptr addrspace(8) %3918, i32 %3942, i32 0, i32 0)
  %3943 = add i32 %3890, %2612
  %3944 = add i32 %3890, %2611
  %3945 = add i32 %3891, %2612
  %3946 = add i32 %3891, %2611
  %3947 = fptrunc float %3375 to half
  %3948 = fptrunc float %3376 to half
  %3949 = fptrunc float %3377 to half
  %3950 = fptrunc float %3378 to half
  %3951 = fptrunc float %3381 to half
  %3952 = fptrunc float %3382 to half
  %3953 = fptrunc float %3383 to half
  %3954 = fptrunc float %3384 to half
  %3955 = fptrunc float %3387 to half
  %3956 = fptrunc float %3388 to half
  %3957 = fptrunc float %3389 to half
  %3958 = fptrunc float %3390 to half
  %3959 = fptrunc float %3393 to half
  %3960 = fptrunc float %3394 to half
  %3961 = fptrunc float %3395 to half
  %3962 = fptrunc float %3396 to half
  %3963 = insertelement <4 x half> poison, half %3947, i64 0
  %3964 = insertelement <4 x half> %3963, half %3948, i64 1
  %3965 = insertelement <4 x half> %3964, half %3949, i64 2
  %3966 = insertelement <4 x half> %3965, half %3950, i64 3
  %3967 = bitcast <4 x half> %3966 to <2 x i32>
  %3968 = shl i32 %3943, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3967, ptr addrspace(8) %3918, i32 %3968, i32 0, i32 0)
  %3969 = insertelement <4 x half> poison, half %3951, i64 0
  %3970 = insertelement <4 x half> %3969, half %3952, i64 1
  %3971 = insertelement <4 x half> %3970, half %3953, i64 2
  %3972 = insertelement <4 x half> %3971, half %3954, i64 3
  %3973 = bitcast <4 x half> %3972 to <2 x i32>
  %3974 = shl i32 %3944, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3973, ptr addrspace(8) %3918, i32 %3974, i32 0, i32 0)
  %3975 = insertelement <4 x half> poison, half %3955, i64 0
  %3976 = insertelement <4 x half> %3975, half %3956, i64 1
  %3977 = insertelement <4 x half> %3976, half %3957, i64 2
  %3978 = insertelement <4 x half> %3977, half %3958, i64 3
  %3979 = bitcast <4 x half> %3978 to <2 x i32>
  %3980 = shl i32 %3945, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3979, ptr addrspace(8) %3918, i32 %3980, i32 0, i32 0)
  %3981 = insertelement <4 x half> poison, half %3959, i64 0
  %3982 = insertelement <4 x half> %3981, half %3960, i64 1
  %3983 = insertelement <4 x half> %3982, half %3961, i64 2
  %3984 = insertelement <4 x half> %3983, half %3962, i64 3
  %3985 = bitcast <4 x half> %3984 to <2 x i32>
  %3986 = shl i32 %3946, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %3985, ptr addrspace(8) %3918, i32 %3986, i32 0, i32 0)
  %3987 = add i32 %3890, %2610
  %3988 = add i32 %3890, %2609
  %3989 = add i32 %3891, %2610
  %3990 = add i32 %3891, %2609
  %3991 = fptrunc float %3415 to half
  %3992 = fptrunc float %3416 to half
  %3993 = fptrunc float %3417 to half
  %3994 = fptrunc float %3418 to half
  %3995 = fptrunc float %3421 to half
  %3996 = fptrunc float %3422 to half
  %3997 = fptrunc float %3423 to half
  %3998 = fptrunc float %3424 to half
  %3999 = fptrunc float %3427 to half
  %4000 = fptrunc float %3428 to half
  %4001 = fptrunc float %3429 to half
  %4002 = fptrunc float %3430 to half
  %4003 = fptrunc float %3433 to half
  %4004 = fptrunc float %3434 to half
  %4005 = fptrunc float %3435 to half
  %4006 = fptrunc float %3436 to half
  %4007 = insertelement <4 x half> poison, half %3991, i64 0
  %4008 = insertelement <4 x half> %4007, half %3992, i64 1
  %4009 = insertelement <4 x half> %4008, half %3993, i64 2
  %4010 = insertelement <4 x half> %4009, half %3994, i64 3
  %4011 = bitcast <4 x half> %4010 to <2 x i32>
  %4012 = shl i32 %3987, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4011, ptr addrspace(8) %3918, i32 %4012, i32 0, i32 0)
  %4013 = insertelement <4 x half> poison, half %3995, i64 0
  %4014 = insertelement <4 x half> %4013, half %3996, i64 1
  %4015 = insertelement <4 x half> %4014, half %3997, i64 2
  %4016 = insertelement <4 x half> %4015, half %3998, i64 3
  %4017 = bitcast <4 x half> %4016 to <2 x i32>
  %4018 = shl i32 %3988, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4017, ptr addrspace(8) %3918, i32 %4018, i32 0, i32 0)
  %4019 = insertelement <4 x half> poison, half %3999, i64 0
  %4020 = insertelement <4 x half> %4019, half %4000, i64 1
  %4021 = insertelement <4 x half> %4020, half %4001, i64 2
  %4022 = insertelement <4 x half> %4021, half %4002, i64 3
  %4023 = bitcast <4 x half> %4022 to <2 x i32>
  %4024 = shl i32 %3989, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4023, ptr addrspace(8) %3918, i32 %4024, i32 0, i32 0)
  %4025 = insertelement <4 x half> poison, half %4003, i64 0
  %4026 = insertelement <4 x half> %4025, half %4004, i64 1
  %4027 = insertelement <4 x half> %4026, half %4005, i64 2
  %4028 = insertelement <4 x half> %4027, half %4006, i64 3
  %4029 = bitcast <4 x half> %4028 to <2 x i32>
  %4030 = shl i32 %3990, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4029, ptr addrspace(8) %3918, i32 %4030, i32 0, i32 0)
  %4031 = add i32 %3890, %2608
  %4032 = add i32 %3890, %2607
  %4033 = add i32 %3891, %2608
  %4034 = add i32 %3891, %2607
  %4035 = fptrunc float %3455 to half
  %4036 = fptrunc float %3456 to half
  %4037 = fptrunc float %3457 to half
  %4038 = fptrunc float %3458 to half
  %4039 = fptrunc float %3461 to half
  %4040 = fptrunc float %3462 to half
  %4041 = fptrunc float %3463 to half
  %4042 = fptrunc float %3464 to half
  %4043 = fptrunc float %3467 to half
  %4044 = fptrunc float %3468 to half
  %4045 = fptrunc float %3469 to half
  %4046 = fptrunc float %3470 to half
  %4047 = fptrunc float %3473 to half
  %4048 = fptrunc float %3474 to half
  %4049 = fptrunc float %3475 to half
  %4050 = fptrunc float %3476 to half
  %4051 = insertelement <4 x half> poison, half %4035, i64 0
  %4052 = insertelement <4 x half> %4051, half %4036, i64 1
  %4053 = insertelement <4 x half> %4052, half %4037, i64 2
  %4054 = insertelement <4 x half> %4053, half %4038, i64 3
  %4055 = bitcast <4 x half> %4054 to <2 x i32>
  %4056 = shl i32 %4031, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4055, ptr addrspace(8) %3918, i32 %4056, i32 0, i32 0)
  %4057 = insertelement <4 x half> poison, half %4039, i64 0
  %4058 = insertelement <4 x half> %4057, half %4040, i64 1
  %4059 = insertelement <4 x half> %4058, half %4041, i64 2
  %4060 = insertelement <4 x half> %4059, half %4042, i64 3
  %4061 = bitcast <4 x half> %4060 to <2 x i32>
  %4062 = shl i32 %4032, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4061, ptr addrspace(8) %3918, i32 %4062, i32 0, i32 0)
  %4063 = insertelement <4 x half> poison, half %4043, i64 0
  %4064 = insertelement <4 x half> %4063, half %4044, i64 1
  %4065 = insertelement <4 x half> %4064, half %4045, i64 2
  %4066 = insertelement <4 x half> %4065, half %4046, i64 3
  %4067 = bitcast <4 x half> %4066 to <2 x i32>
  %4068 = shl i32 %4033, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4067, ptr addrspace(8) %3918, i32 %4068, i32 0, i32 0)
  %4069 = insertelement <4 x half> poison, half %4047, i64 0
  %4070 = insertelement <4 x half> %4069, half %4048, i64 1
  %4071 = insertelement <4 x half> %4070, half %4049, i64 2
  %4072 = insertelement <4 x half> %4071, half %4050, i64 3
  %4073 = bitcast <4 x half> %4072 to <2 x i32>
  %4074 = shl i32 %4034, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4073, ptr addrspace(8) %3918, i32 %4074, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !159
  %4075 = add i32 %3892, %2606
  %4076 = add i32 %3892, %2613
  %4077 = add i32 %3893, %2606
  %4078 = add i32 %3893, %2613
  %4079 = fptrunc float %3495 to half
  %4080 = fptrunc float %3496 to half
  %4081 = fptrunc float %3497 to half
  %4082 = fptrunc float %3498 to half
  %4083 = fptrunc float %3501 to half
  %4084 = fptrunc float %3502 to half
  %4085 = fptrunc float %3503 to half
  %4086 = fptrunc float %3504 to half
  %4087 = fptrunc float %3507 to half
  %4088 = fptrunc float %3508 to half
  %4089 = fptrunc float %3509 to half
  %4090 = fptrunc float %3510 to half
  %4091 = fptrunc float %3513 to half
  %4092 = fptrunc float %3514 to half
  %4093 = fptrunc float %3515 to half
  %4094 = fptrunc float %3516 to half
  %4095 = insertelement <4 x half> poison, half %4079, i64 0
  %4096 = insertelement <4 x half> %4095, half %4080, i64 1
  %4097 = insertelement <4 x half> %4096, half %4081, i64 2
  %4098 = insertelement <4 x half> %4097, half %4082, i64 3
  %4099 = bitcast <4 x half> %4098 to <2 x i32>
  %4100 = shl i32 %4075, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4099, ptr addrspace(8) %3918, i32 %4100, i32 0, i32 0)
  %4101 = insertelement <4 x half> poison, half %4083, i64 0
  %4102 = insertelement <4 x half> %4101, half %4084, i64 1
  %4103 = insertelement <4 x half> %4102, half %4085, i64 2
  %4104 = insertelement <4 x half> %4103, half %4086, i64 3
  %4105 = bitcast <4 x half> %4104 to <2 x i32>
  %4106 = shl i32 %4076, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4105, ptr addrspace(8) %3918, i32 %4106, i32 0, i32 0)
  %4107 = insertelement <4 x half> poison, half %4087, i64 0
  %4108 = insertelement <4 x half> %4107, half %4088, i64 1
  %4109 = insertelement <4 x half> %4108, half %4089, i64 2
  %4110 = insertelement <4 x half> %4109, half %4090, i64 3
  %4111 = bitcast <4 x half> %4110 to <2 x i32>
  %4112 = shl i32 %4077, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4111, ptr addrspace(8) %3918, i32 %4112, i32 0, i32 0)
  %4113 = insertelement <4 x half> poison, half %4091, i64 0
  %4114 = insertelement <4 x half> %4113, half %4092, i64 1
  %4115 = insertelement <4 x half> %4114, half %4093, i64 2
  %4116 = insertelement <4 x half> %4115, half %4094, i64 3
  %4117 = bitcast <4 x half> %4116 to <2 x i32>
  %4118 = shl i32 %4078, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4117, ptr addrspace(8) %3918, i32 %4118, i32 0, i32 0)
  %4119 = add i32 %3892, %2612
  %4120 = add i32 %3892, %2611
  %4121 = add i32 %3893, %2612
  %4122 = add i32 %3893, %2611
  %4123 = fptrunc float %3527 to half
  %4124 = fptrunc float %3528 to half
  %4125 = fptrunc float %3529 to half
  %4126 = fptrunc float %3530 to half
  %4127 = fptrunc float %3533 to half
  %4128 = fptrunc float %3534 to half
  %4129 = fptrunc float %3535 to half
  %4130 = fptrunc float %3536 to half
  %4131 = fptrunc float %3539 to half
  %4132 = fptrunc float %3540 to half
  %4133 = fptrunc float %3541 to half
  %4134 = fptrunc float %3542 to half
  %4135 = fptrunc float %3545 to half
  %4136 = fptrunc float %3546 to half
  %4137 = fptrunc float %3547 to half
  %4138 = fptrunc float %3548 to half
  %4139 = insertelement <4 x half> poison, half %4123, i64 0
  %4140 = insertelement <4 x half> %4139, half %4124, i64 1
  %4141 = insertelement <4 x half> %4140, half %4125, i64 2
  %4142 = insertelement <4 x half> %4141, half %4126, i64 3
  %4143 = bitcast <4 x half> %4142 to <2 x i32>
  %4144 = shl i32 %4119, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4143, ptr addrspace(8) %3918, i32 %4144, i32 0, i32 0)
  %4145 = insertelement <4 x half> poison, half %4127, i64 0
  %4146 = insertelement <4 x half> %4145, half %4128, i64 1
  %4147 = insertelement <4 x half> %4146, half %4129, i64 2
  %4148 = insertelement <4 x half> %4147, half %4130, i64 3
  %4149 = bitcast <4 x half> %4148 to <2 x i32>
  %4150 = shl i32 %4120, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4149, ptr addrspace(8) %3918, i32 %4150, i32 0, i32 0)
  %4151 = insertelement <4 x half> poison, half %4131, i64 0
  %4152 = insertelement <4 x half> %4151, half %4132, i64 1
  %4153 = insertelement <4 x half> %4152, half %4133, i64 2
  %4154 = insertelement <4 x half> %4153, half %4134, i64 3
  %4155 = bitcast <4 x half> %4154 to <2 x i32>
  %4156 = shl i32 %4121, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4155, ptr addrspace(8) %3918, i32 %4156, i32 0, i32 0)
  %4157 = insertelement <4 x half> poison, half %4135, i64 0
  %4158 = insertelement <4 x half> %4157, half %4136, i64 1
  %4159 = insertelement <4 x half> %4158, half %4137, i64 2
  %4160 = insertelement <4 x half> %4159, half %4138, i64 3
  %4161 = bitcast <4 x half> %4160 to <2 x i32>
  %4162 = shl i32 %4122, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4161, ptr addrspace(8) %3918, i32 %4162, i32 0, i32 0)
  %4163 = add i32 %3892, %2610
  %4164 = add i32 %3892, %2609
  %4165 = add i32 %3893, %2610
  %4166 = add i32 %3893, %2609
  %4167 = fptrunc float %3559 to half
  %4168 = fptrunc float %3560 to half
  %4169 = fptrunc float %3561 to half
  %4170 = fptrunc float %3562 to half
  %4171 = fptrunc float %3565 to half
  %4172 = fptrunc float %3566 to half
  %4173 = fptrunc float %3567 to half
  %4174 = fptrunc float %3568 to half
  %4175 = fptrunc float %3571 to half
  %4176 = fptrunc float %3572 to half
  %4177 = fptrunc float %3573 to half
  %4178 = fptrunc float %3574 to half
  %4179 = fptrunc float %3577 to half
  %4180 = fptrunc float %3578 to half
  %4181 = fptrunc float %3579 to half
  %4182 = fptrunc float %3580 to half
  %4183 = insertelement <4 x half> poison, half %4167, i64 0
  %4184 = insertelement <4 x half> %4183, half %4168, i64 1
  %4185 = insertelement <4 x half> %4184, half %4169, i64 2
  %4186 = insertelement <4 x half> %4185, half %4170, i64 3
  %4187 = bitcast <4 x half> %4186 to <2 x i32>
  %4188 = shl i32 %4163, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4187, ptr addrspace(8) %3918, i32 %4188, i32 0, i32 0)
  %4189 = insertelement <4 x half> poison, half %4171, i64 0
  %4190 = insertelement <4 x half> %4189, half %4172, i64 1
  %4191 = insertelement <4 x half> %4190, half %4173, i64 2
  %4192 = insertelement <4 x half> %4191, half %4174, i64 3
  %4193 = bitcast <4 x half> %4192 to <2 x i32>
  %4194 = shl i32 %4164, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4193, ptr addrspace(8) %3918, i32 %4194, i32 0, i32 0)
  %4195 = insertelement <4 x half> poison, half %4175, i64 0
  %4196 = insertelement <4 x half> %4195, half %4176, i64 1
  %4197 = insertelement <4 x half> %4196, half %4177, i64 2
  %4198 = insertelement <4 x half> %4197, half %4178, i64 3
  %4199 = bitcast <4 x half> %4198 to <2 x i32>
  %4200 = shl i32 %4165, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4199, ptr addrspace(8) %3918, i32 %4200, i32 0, i32 0)
  %4201 = insertelement <4 x half> poison, half %4179, i64 0
  %4202 = insertelement <4 x half> %4201, half %4180, i64 1
  %4203 = insertelement <4 x half> %4202, half %4181, i64 2
  %4204 = insertelement <4 x half> %4203, half %4182, i64 3
  %4205 = bitcast <4 x half> %4204 to <2 x i32>
  %4206 = shl i32 %4166, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4205, ptr addrspace(8) %3918, i32 %4206, i32 0, i32 0)
  %4207 = add i32 %3892, %2608
  %4208 = add i32 %3892, %2607
  %4209 = add i32 %3893, %2608
  %4210 = add i32 %3893, %2607
  %4211 = fptrunc float %3591 to half
  %4212 = fptrunc float %3592 to half
  %4213 = fptrunc float %3593 to half
  %4214 = fptrunc float %3594 to half
  %4215 = fptrunc float %3597 to half
  %4216 = fptrunc float %3598 to half
  %4217 = fptrunc float %3599 to half
  %4218 = fptrunc float %3600 to half
  %4219 = fptrunc float %3603 to half
  %4220 = fptrunc float %3604 to half
  %4221 = fptrunc float %3605 to half
  %4222 = fptrunc float %3606 to half
  %4223 = fptrunc float %3609 to half
  %4224 = fptrunc float %3610 to half
  %4225 = fptrunc float %3611 to half
  %4226 = fptrunc float %3612 to half
  %4227 = insertelement <4 x half> poison, half %4211, i64 0
  %4228 = insertelement <4 x half> %4227, half %4212, i64 1
  %4229 = insertelement <4 x half> %4228, half %4213, i64 2
  %4230 = insertelement <4 x half> %4229, half %4214, i64 3
  %4231 = bitcast <4 x half> %4230 to <2 x i32>
  %4232 = shl i32 %4207, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4231, ptr addrspace(8) %3918, i32 %4232, i32 0, i32 0)
  %4233 = insertelement <4 x half> poison, half %4215, i64 0
  %4234 = insertelement <4 x half> %4233, half %4216, i64 1
  %4235 = insertelement <4 x half> %4234, half %4217, i64 2
  %4236 = insertelement <4 x half> %4235, half %4218, i64 3
  %4237 = bitcast <4 x half> %4236 to <2 x i32>
  %4238 = shl i32 %4208, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4237, ptr addrspace(8) %3918, i32 %4238, i32 0, i32 0)
  %4239 = insertelement <4 x half> poison, half %4219, i64 0
  %4240 = insertelement <4 x half> %4239, half %4220, i64 1
  %4241 = insertelement <4 x half> %4240, half %4221, i64 2
  %4242 = insertelement <4 x half> %4241, half %4222, i64 3
  %4243 = bitcast <4 x half> %4242 to <2 x i32>
  %4244 = shl i32 %4209, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4243, ptr addrspace(8) %3918, i32 %4244, i32 0, i32 0)
  %4245 = insertelement <4 x half> poison, half %4223, i64 0
  %4246 = insertelement <4 x half> %4245, half %4224, i64 1
  %4247 = insertelement <4 x half> %4246, half %4225, i64 2
  %4248 = insertelement <4 x half> %4247, half %4226, i64 3
  %4249 = bitcast <4 x half> %4248 to <2 x i32>
  %4250 = shl i32 %4210, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4249, ptr addrspace(8) %3918, i32 %4250, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !160
  %4251 = add i32 %3894, %2606
  %4252 = add i32 %3894, %2613
  %4253 = add i32 %3895, %2606
  %4254 = add i32 %3895, %2613
  %4255 = fptrunc float %3631 to half
  %4256 = fptrunc float %3632 to half
  %4257 = fptrunc float %3633 to half
  %4258 = fptrunc float %3634 to half
  %4259 = fptrunc float %3637 to half
  %4260 = fptrunc float %3638 to half
  %4261 = fptrunc float %3639 to half
  %4262 = fptrunc float %3640 to half
  %4263 = fptrunc float %3643 to half
  %4264 = fptrunc float %3644 to half
  %4265 = fptrunc float %3645 to half
  %4266 = fptrunc float %3646 to half
  %4267 = fptrunc float %3649 to half
  %4268 = fptrunc float %3650 to half
  %4269 = fptrunc float %3651 to half
  %4270 = fptrunc float %3652 to half
  %4271 = insertelement <4 x half> poison, half %4255, i64 0
  %4272 = insertelement <4 x half> %4271, half %4256, i64 1
  %4273 = insertelement <4 x half> %4272, half %4257, i64 2
  %4274 = insertelement <4 x half> %4273, half %4258, i64 3
  %4275 = bitcast <4 x half> %4274 to <2 x i32>
  %4276 = shl i32 %4251, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4275, ptr addrspace(8) %3918, i32 %4276, i32 0, i32 0)
  %4277 = insertelement <4 x half> poison, half %4259, i64 0
  %4278 = insertelement <4 x half> %4277, half %4260, i64 1
  %4279 = insertelement <4 x half> %4278, half %4261, i64 2
  %4280 = insertelement <4 x half> %4279, half %4262, i64 3
  %4281 = bitcast <4 x half> %4280 to <2 x i32>
  %4282 = shl i32 %4252, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4281, ptr addrspace(8) %3918, i32 %4282, i32 0, i32 0)
  %4283 = insertelement <4 x half> poison, half %4263, i64 0
  %4284 = insertelement <4 x half> %4283, half %4264, i64 1
  %4285 = insertelement <4 x half> %4284, half %4265, i64 2
  %4286 = insertelement <4 x half> %4285, half %4266, i64 3
  %4287 = bitcast <4 x half> %4286 to <2 x i32>
  %4288 = shl i32 %4253, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4287, ptr addrspace(8) %3918, i32 %4288, i32 0, i32 0)
  %4289 = insertelement <4 x half> poison, half %4267, i64 0
  %4290 = insertelement <4 x half> %4289, half %4268, i64 1
  %4291 = insertelement <4 x half> %4290, half %4269, i64 2
  %4292 = insertelement <4 x half> %4291, half %4270, i64 3
  %4293 = bitcast <4 x half> %4292 to <2 x i32>
  %4294 = shl i32 %4254, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4293, ptr addrspace(8) %3918, i32 %4294, i32 0, i32 0)
  %4295 = add i32 %3894, %2612
  %4296 = add i32 %3894, %2611
  %4297 = add i32 %3895, %2612
  %4298 = add i32 %3895, %2611
  %4299 = fptrunc float %3663 to half
  %4300 = fptrunc float %3664 to half
  %4301 = fptrunc float %3665 to half
  %4302 = fptrunc float %3666 to half
  %4303 = fptrunc float %3669 to half
  %4304 = fptrunc float %3670 to half
  %4305 = fptrunc float %3671 to half
  %4306 = fptrunc float %3672 to half
  %4307 = fptrunc float %3675 to half
  %4308 = fptrunc float %3676 to half
  %4309 = fptrunc float %3677 to half
  %4310 = fptrunc float %3678 to half
  %4311 = fptrunc float %3681 to half
  %4312 = fptrunc float %3682 to half
  %4313 = fptrunc float %3683 to half
  %4314 = fptrunc float %3684 to half
  %4315 = insertelement <4 x half> poison, half %4299, i64 0
  %4316 = insertelement <4 x half> %4315, half %4300, i64 1
  %4317 = insertelement <4 x half> %4316, half %4301, i64 2
  %4318 = insertelement <4 x half> %4317, half %4302, i64 3
  %4319 = bitcast <4 x half> %4318 to <2 x i32>
  %4320 = shl i32 %4295, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4319, ptr addrspace(8) %3918, i32 %4320, i32 0, i32 0)
  %4321 = insertelement <4 x half> poison, half %4303, i64 0
  %4322 = insertelement <4 x half> %4321, half %4304, i64 1
  %4323 = insertelement <4 x half> %4322, half %4305, i64 2
  %4324 = insertelement <4 x half> %4323, half %4306, i64 3
  %4325 = bitcast <4 x half> %4324 to <2 x i32>
  %4326 = shl i32 %4296, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4325, ptr addrspace(8) %3918, i32 %4326, i32 0, i32 0)
  %4327 = insertelement <4 x half> poison, half %4307, i64 0
  %4328 = insertelement <4 x half> %4327, half %4308, i64 1
  %4329 = insertelement <4 x half> %4328, half %4309, i64 2
  %4330 = insertelement <4 x half> %4329, half %4310, i64 3
  %4331 = bitcast <4 x half> %4330 to <2 x i32>
  %4332 = shl i32 %4297, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4331, ptr addrspace(8) %3918, i32 %4332, i32 0, i32 0)
  %4333 = insertelement <4 x half> poison, half %4311, i64 0
  %4334 = insertelement <4 x half> %4333, half %4312, i64 1
  %4335 = insertelement <4 x half> %4334, half %4313, i64 2
  %4336 = insertelement <4 x half> %4335, half %4314, i64 3
  %4337 = bitcast <4 x half> %4336 to <2 x i32>
  %4338 = shl i32 %4298, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4337, ptr addrspace(8) %3918, i32 %4338, i32 0, i32 0)
  %4339 = add i32 %3894, %2610
  %4340 = add i32 %3894, %2609
  %4341 = add i32 %3895, %2610
  %4342 = add i32 %3895, %2609
  %4343 = fptrunc float %3695 to half
  %4344 = fptrunc float %3696 to half
  %4345 = fptrunc float %3697 to half
  %4346 = fptrunc float %3698 to half
  %4347 = fptrunc float %3701 to half
  %4348 = fptrunc float %3702 to half
  %4349 = fptrunc float %3703 to half
  %4350 = fptrunc float %3704 to half
  %4351 = fptrunc float %3707 to half
  %4352 = fptrunc float %3708 to half
  %4353 = fptrunc float %3709 to half
  %4354 = fptrunc float %3710 to half
  %4355 = fptrunc float %3713 to half
  %4356 = fptrunc float %3714 to half
  %4357 = fptrunc float %3715 to half
  %4358 = fptrunc float %3716 to half
  %4359 = insertelement <4 x half> poison, half %4343, i64 0
  %4360 = insertelement <4 x half> %4359, half %4344, i64 1
  %4361 = insertelement <4 x half> %4360, half %4345, i64 2
  %4362 = insertelement <4 x half> %4361, half %4346, i64 3
  %4363 = bitcast <4 x half> %4362 to <2 x i32>
  %4364 = shl i32 %4339, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4363, ptr addrspace(8) %3918, i32 %4364, i32 0, i32 0)
  %4365 = insertelement <4 x half> poison, half %4347, i64 0
  %4366 = insertelement <4 x half> %4365, half %4348, i64 1
  %4367 = insertelement <4 x half> %4366, half %4349, i64 2
  %4368 = insertelement <4 x half> %4367, half %4350, i64 3
  %4369 = bitcast <4 x half> %4368 to <2 x i32>
  %4370 = shl i32 %4340, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4369, ptr addrspace(8) %3918, i32 %4370, i32 0, i32 0)
  %4371 = insertelement <4 x half> poison, half %4351, i64 0
  %4372 = insertelement <4 x half> %4371, half %4352, i64 1
  %4373 = insertelement <4 x half> %4372, half %4353, i64 2
  %4374 = insertelement <4 x half> %4373, half %4354, i64 3
  %4375 = bitcast <4 x half> %4374 to <2 x i32>
  %4376 = shl i32 %4341, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4375, ptr addrspace(8) %3918, i32 %4376, i32 0, i32 0)
  %4377 = insertelement <4 x half> poison, half %4355, i64 0
  %4378 = insertelement <4 x half> %4377, half %4356, i64 1
  %4379 = insertelement <4 x half> %4378, half %4357, i64 2
  %4380 = insertelement <4 x half> %4379, half %4358, i64 3
  %4381 = bitcast <4 x half> %4380 to <2 x i32>
  %4382 = shl i32 %4342, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4381, ptr addrspace(8) %3918, i32 %4382, i32 0, i32 0)
  %4383 = add i32 %3894, %2608
  %4384 = add i32 %3894, %2607
  %4385 = add i32 %3895, %2608
  %4386 = add i32 %3895, %2607
  %4387 = fptrunc float %3727 to half
  %4388 = fptrunc float %3728 to half
  %4389 = fptrunc float %3729 to half
  %4390 = fptrunc float %3730 to half
  %4391 = fptrunc float %3733 to half
  %4392 = fptrunc float %3734 to half
  %4393 = fptrunc float %3735 to half
  %4394 = fptrunc float %3736 to half
  %4395 = fptrunc float %3739 to half
  %4396 = fptrunc float %3740 to half
  %4397 = fptrunc float %3741 to half
  %4398 = fptrunc float %3742 to half
  %4399 = fptrunc float %3745 to half
  %4400 = fptrunc float %3746 to half
  %4401 = fptrunc float %3747 to half
  %4402 = fptrunc float %3748 to half
  %4403 = insertelement <4 x half> poison, half %4387, i64 0
  %4404 = insertelement <4 x half> %4403, half %4388, i64 1
  %4405 = insertelement <4 x half> %4404, half %4389, i64 2
  %4406 = insertelement <4 x half> %4405, half %4390, i64 3
  %4407 = bitcast <4 x half> %4406 to <2 x i32>
  %4408 = shl i32 %4383, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4407, ptr addrspace(8) %3918, i32 %4408, i32 0, i32 0)
  %4409 = insertelement <4 x half> poison, half %4391, i64 0
  %4410 = insertelement <4 x half> %4409, half %4392, i64 1
  %4411 = insertelement <4 x half> %4410, half %4393, i64 2
  %4412 = insertelement <4 x half> %4411, half %4394, i64 3
  %4413 = bitcast <4 x half> %4412 to <2 x i32>
  %4414 = shl i32 %4384, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4413, ptr addrspace(8) %3918, i32 %4414, i32 0, i32 0)
  %4415 = insertelement <4 x half> poison, half %4395, i64 0
  %4416 = insertelement <4 x half> %4415, half %4396, i64 1
  %4417 = insertelement <4 x half> %4416, half %4397, i64 2
  %4418 = insertelement <4 x half> %4417, half %4398, i64 3
  %4419 = bitcast <4 x half> %4418 to <2 x i32>
  %4420 = shl i32 %4385, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4419, ptr addrspace(8) %3918, i32 %4420, i32 0, i32 0)
  %4421 = insertelement <4 x half> poison, half %4399, i64 0
  %4422 = insertelement <4 x half> %4421, half %4400, i64 1
  %4423 = insertelement <4 x half> %4422, half %4401, i64 2
  %4424 = insertelement <4 x half> %4423, half %4402, i64 3
  %4425 = bitcast <4 x half> %4424 to <2 x i32>
  %4426 = shl i32 %4386, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4425, ptr addrspace(8) %3918, i32 %4426, i32 0, i32 0)
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !161
  %4427 = add i32 %3896, %2606
  %4428 = add i32 %3896, %2613
  %4429 = add i32 %3897, %2606
  %4430 = add i32 %3897, %2613
  %4431 = fptrunc float %3767 to half
  %4432 = fptrunc float %3768 to half
  %4433 = fptrunc float %3769 to half
  %4434 = fptrunc float %3770 to half
  %4435 = fptrunc float %3773 to half
  %4436 = fptrunc float %3774 to half
  %4437 = fptrunc float %3775 to half
  %4438 = fptrunc float %3776 to half
  %4439 = fptrunc float %3779 to half
  %4440 = fptrunc float %3780 to half
  %4441 = fptrunc float %3781 to half
  %4442 = fptrunc float %3782 to half
  %4443 = fptrunc float %3785 to half
  %4444 = fptrunc float %3786 to half
  %4445 = fptrunc float %3787 to half
  %4446 = fptrunc float %3788 to half
  %4447 = insertelement <4 x half> poison, half %4431, i64 0
  %4448 = insertelement <4 x half> %4447, half %4432, i64 1
  %4449 = insertelement <4 x half> %4448, half %4433, i64 2
  %4450 = insertelement <4 x half> %4449, half %4434, i64 3
  %4451 = bitcast <4 x half> %4450 to <2 x i32>
  %4452 = shl i32 %4427, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4451, ptr addrspace(8) %3918, i32 %4452, i32 0, i32 0)
  %4453 = insertelement <4 x half> poison, half %4435, i64 0
  %4454 = insertelement <4 x half> %4453, half %4436, i64 1
  %4455 = insertelement <4 x half> %4454, half %4437, i64 2
  %4456 = insertelement <4 x half> %4455, half %4438, i64 3
  %4457 = bitcast <4 x half> %4456 to <2 x i32>
  %4458 = shl i32 %4428, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4457, ptr addrspace(8) %3918, i32 %4458, i32 0, i32 0)
  %4459 = insertelement <4 x half> poison, half %4439, i64 0
  %4460 = insertelement <4 x half> %4459, half %4440, i64 1
  %4461 = insertelement <4 x half> %4460, half %4441, i64 2
  %4462 = insertelement <4 x half> %4461, half %4442, i64 3
  %4463 = bitcast <4 x half> %4462 to <2 x i32>
  %4464 = shl i32 %4429, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4463, ptr addrspace(8) %3918, i32 %4464, i32 0, i32 0)
  %4465 = insertelement <4 x half> poison, half %4443, i64 0
  %4466 = insertelement <4 x half> %4465, half %4444, i64 1
  %4467 = insertelement <4 x half> %4466, half %4445, i64 2
  %4468 = insertelement <4 x half> %4467, half %4446, i64 3
  %4469 = bitcast <4 x half> %4468 to <2 x i32>
  %4470 = shl i32 %4430, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4469, ptr addrspace(8) %3918, i32 %4470, i32 0, i32 0)
  %4471 = add i32 %3896, %2612
  %4472 = add i32 %3896, %2611
  %4473 = add i32 %3897, %2612
  %4474 = add i32 %3897, %2611
  %4475 = fptrunc float %3799 to half
  %4476 = fptrunc float %3800 to half
  %4477 = fptrunc float %3801 to half
  %4478 = fptrunc float %3802 to half
  %4479 = fptrunc float %3805 to half
  %4480 = fptrunc float %3806 to half
  %4481 = fptrunc float %3807 to half
  %4482 = fptrunc float %3808 to half
  %4483 = fptrunc float %3811 to half
  %4484 = fptrunc float %3812 to half
  %4485 = fptrunc float %3813 to half
  %4486 = fptrunc float %3814 to half
  %4487 = fptrunc float %3817 to half
  %4488 = fptrunc float %3818 to half
  %4489 = fptrunc float %3819 to half
  %4490 = fptrunc float %3820 to half
  %4491 = insertelement <4 x half> poison, half %4475, i64 0
  %4492 = insertelement <4 x half> %4491, half %4476, i64 1
  %4493 = insertelement <4 x half> %4492, half %4477, i64 2
  %4494 = insertelement <4 x half> %4493, half %4478, i64 3
  %4495 = bitcast <4 x half> %4494 to <2 x i32>
  %4496 = shl i32 %4471, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4495, ptr addrspace(8) %3918, i32 %4496, i32 0, i32 0)
  %4497 = insertelement <4 x half> poison, half %4479, i64 0
  %4498 = insertelement <4 x half> %4497, half %4480, i64 1
  %4499 = insertelement <4 x half> %4498, half %4481, i64 2
  %4500 = insertelement <4 x half> %4499, half %4482, i64 3
  %4501 = bitcast <4 x half> %4500 to <2 x i32>
  %4502 = shl i32 %4472, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4501, ptr addrspace(8) %3918, i32 %4502, i32 0, i32 0)
  %4503 = insertelement <4 x half> poison, half %4483, i64 0
  %4504 = insertelement <4 x half> %4503, half %4484, i64 1
  %4505 = insertelement <4 x half> %4504, half %4485, i64 2
  %4506 = insertelement <4 x half> %4505, half %4486, i64 3
  %4507 = bitcast <4 x half> %4506 to <2 x i32>
  %4508 = shl i32 %4473, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4507, ptr addrspace(8) %3918, i32 %4508, i32 0, i32 0)
  %4509 = insertelement <4 x half> poison, half %4487, i64 0
  %4510 = insertelement <4 x half> %4509, half %4488, i64 1
  %4511 = insertelement <4 x half> %4510, half %4489, i64 2
  %4512 = insertelement <4 x half> %4511, half %4490, i64 3
  %4513 = bitcast <4 x half> %4512 to <2 x i32>
  %4514 = shl i32 %4474, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4513, ptr addrspace(8) %3918, i32 %4514, i32 0, i32 0)
  %4515 = add i32 %3896, %2610
  %4516 = add i32 %3896, %2609
  %4517 = add i32 %3897, %2610
  %4518 = add i32 %3897, %2609
  %4519 = fptrunc float %3831 to half
  %4520 = fptrunc float %3832 to half
  %4521 = fptrunc float %3833 to half
  %4522 = fptrunc float %3834 to half
  %4523 = fptrunc float %3837 to half
  %4524 = fptrunc float %3838 to half
  %4525 = fptrunc float %3839 to half
  %4526 = fptrunc float %3840 to half
  %4527 = fptrunc float %3843 to half
  %4528 = fptrunc float %3844 to half
  %4529 = fptrunc float %3845 to half
  %4530 = fptrunc float %3846 to half
  %4531 = fptrunc float %3849 to half
  %4532 = fptrunc float %3850 to half
  %4533 = fptrunc float %3851 to half
  %4534 = fptrunc float %3852 to half
  %4535 = insertelement <4 x half> poison, half %4519, i64 0
  %4536 = insertelement <4 x half> %4535, half %4520, i64 1
  %4537 = insertelement <4 x half> %4536, half %4521, i64 2
  %4538 = insertelement <4 x half> %4537, half %4522, i64 3
  %4539 = bitcast <4 x half> %4538 to <2 x i32>
  %4540 = shl i32 %4515, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4539, ptr addrspace(8) %3918, i32 %4540, i32 0, i32 0)
  %4541 = insertelement <4 x half> poison, half %4523, i64 0
  %4542 = insertelement <4 x half> %4541, half %4524, i64 1
  %4543 = insertelement <4 x half> %4542, half %4525, i64 2
  %4544 = insertelement <4 x half> %4543, half %4526, i64 3
  %4545 = bitcast <4 x half> %4544 to <2 x i32>
  %4546 = shl i32 %4516, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4545, ptr addrspace(8) %3918, i32 %4546, i32 0, i32 0)
  %4547 = insertelement <4 x half> poison, half %4527, i64 0
  %4548 = insertelement <4 x half> %4547, half %4528, i64 1
  %4549 = insertelement <4 x half> %4548, half %4529, i64 2
  %4550 = insertelement <4 x half> %4549, half %4530, i64 3
  %4551 = bitcast <4 x half> %4550 to <2 x i32>
  %4552 = shl i32 %4517, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4551, ptr addrspace(8) %3918, i32 %4552, i32 0, i32 0)
  %4553 = insertelement <4 x half> poison, half %4531, i64 0
  %4554 = insertelement <4 x half> %4553, half %4532, i64 1
  %4555 = insertelement <4 x half> %4554, half %4533, i64 2
  %4556 = insertelement <4 x half> %4555, half %4534, i64 3
  %4557 = bitcast <4 x half> %4556 to <2 x i32>
  %4558 = shl i32 %4518, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4557, ptr addrspace(8) %3918, i32 %4558, i32 0, i32 0)
  %4559 = add i32 %3896, %2608
  %4560 = add i32 %3896, %2607
  %4561 = add i32 %3897, %2608
  %4562 = add i32 %3897, %2607
  %4563 = fptrunc float %3863 to half
  %4564 = fptrunc float %3864 to half
  %4565 = fptrunc float %3865 to half
  %4566 = fptrunc float %3866 to half
  %4567 = fptrunc float %3869 to half
  %4568 = fptrunc float %3870 to half
  %4569 = fptrunc float %3871 to half
  %4570 = fptrunc float %3872 to half
  %4571 = fptrunc float %3875 to half
  %4572 = fptrunc float %3876 to half
  %4573 = fptrunc float %3877 to half
  %4574 = fptrunc float %3878 to half
  %4575 = fptrunc float %3881 to half
  %4576 = fptrunc float %3882 to half
  %4577 = fptrunc float %3883 to half
  %4578 = fptrunc float %3884 to half
  %4579 = insertelement <4 x half> poison, half %4563, i64 0
  %4580 = insertelement <4 x half> %4579, half %4564, i64 1
  %4581 = insertelement <4 x half> %4580, half %4565, i64 2
  %4582 = insertelement <4 x half> %4581, half %4566, i64 3
  %4583 = bitcast <4 x half> %4582 to <2 x i32>
  %4584 = shl i32 %4559, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4583, ptr addrspace(8) %3918, i32 %4584, i32 0, i32 0)
  %4585 = insertelement <4 x half> poison, half %4567, i64 0
  %4586 = insertelement <4 x half> %4585, half %4568, i64 1
  %4587 = insertelement <4 x half> %4586, half %4569, i64 2
  %4588 = insertelement <4 x half> %4587, half %4570, i64 3
  %4589 = bitcast <4 x half> %4588 to <2 x i32>
  %4590 = shl i32 %4560, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4589, ptr addrspace(8) %3918, i32 %4590, i32 0, i32 0)
  %4591 = insertelement <4 x half> poison, half %4571, i64 0
  %4592 = insertelement <4 x half> %4591, half %4572, i64 1
  %4593 = insertelement <4 x half> %4592, half %4573, i64 2
  %4594 = insertelement <4 x half> %4593, half %4574, i64 3
  %4595 = bitcast <4 x half> %4594 to <2 x i32>
  %4596 = shl i32 %4561, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4595, ptr addrspace(8) %3918, i32 %4596, i32 0, i32 0)
  %4597 = insertelement <4 x half> poison, half %4575, i64 0
  %4598 = insertelement <4 x half> %4597, half %4576, i64 1
  %4599 = insertelement <4 x half> %4598, half %4577, i64 2
  %4600 = insertelement <4 x half> %4599, half %4578, i64 3
  %4601 = bitcast <4 x half> %4600 to <2 x i32>
  %4602 = shl i32 %4562, 1
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4601, ptr addrspace(8) %3918, i32 %4602, i32 0, i32 0)
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) nocapture readonly, i32, i32, i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write)
declare void @llvm.assume(i1 noundef) #3

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #4

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half>, <4 x half>, <4 x float>, i32 immarg, i32 immarg, i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.sched.barrier(i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32>, ptr addrspace(8) nocapture writeonly, i32, i32, i32 immarg) #6

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.sched.group.barrier(i32 immarg, i32 immarg, i32 immarg) #4

attributes #0 = { nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="0" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #5 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "<unknown>", directory: "")
!4 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !3, file: !3, type: !5, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 247, column: 7, scope: !4)
!8 = !DILocation(line: 248, column: 7, scope: !4)
!9 = !DILocation(line: 249, column: 7, scope: !4)
!10 = !DILocation(line: 250, column: 7, scope: !4)
!11 = !DILocation(line: 251, column: 7, scope: !4)
!12 = !DILocation(line: 252, column: 7, scope: !4)
!13 = !DILocation(line: 253, column: 7, scope: !4)
!14 = !DILocation(line: 254, column: 7, scope: !4)
!15 = !DILocation(line: 255, column: 7, scope: !4)
!16 = !DILocation(line: 256, column: 7, scope: !4)
!17 = !DILocation(line: 257, column: 7, scope: !4)
!18 = !DILocation(line: 258, column: 7, scope: !4)
!19 = !DILocation(line: 259, column: 7, scope: !4)
!20 = !DILocation(line: 260, column: 7, scope: !4)
!21 = !DILocation(line: 261, column: 7, scope: !4)
!22 = !DILocation(line: 262, column: 7, scope: !4)
!23 = !DILocation(line: 263, column: 7, scope: !4)
!24 = !DILocation(line: 264, column: 7, scope: !4)
!25 = !DILocation(line: 265, column: 7, scope: !4)
!26 = !DILocation(line: 266, column: 7, scope: !4)
!27 = !DILocation(line: 267, column: 7, scope: !4)
!28 = !DILocation(line: 268, column: 7, scope: !4)
!29 = !DILocation(line: 269, column: 7, scope: !4)
!30 = !DILocation(line: 270, column: 7, scope: !4)
!31 = !DILocation(line: 271, column: 7, scope: !4)
!32 = !DILocation(line: 272, column: 7, scope: !4)
!33 = !DILocation(line: 273, column: 7, scope: !4)
!34 = !DILocation(line: 274, column: 7, scope: !4)
!35 = !DILocation(line: 275, column: 7, scope: !4)
!36 = !DILocation(line: 276, column: 7, scope: !4)
!37 = !DILocation(line: 277, column: 7, scope: !4)
!38 = !DILocation(line: 278, column: 7, scope: !4)
!39 = !DILocation(line: 279, column: 7, scope: !4)
!40 = !DILocation(line: 292, column: 7, scope: !4)
!41 = !DILocation(line: 293, column: 7, scope: !4)
!42 = !DILocation(line: 294, column: 7, scope: !4)
!43 = !DILocation(line: 295, column: 7, scope: !4)
!44 = !DILocation(line: 296, column: 7, scope: !4)
!45 = !DILocation(line: 297, column: 7, scope: !4)
!46 = !DILocation(line: 298, column: 7, scope: !4)
!47 = !DILocation(line: 299, column: 7, scope: !4)
!48 = !DILocation(line: 300, column: 7, scope: !4)
!49 = !DILocation(line: 301, column: 7, scope: !4)
!50 = !DILocation(line: 302, column: 7, scope: !4)
!51 = !DILocation(line: 303, column: 7, scope: !4)
!52 = !DILocation(line: 304, column: 7, scope: !4)
!53 = !DILocation(line: 305, column: 7, scope: !4)
!54 = !DILocation(line: 306, column: 7, scope: !4)
!55 = !DILocation(line: 307, column: 7, scope: !4)
!56 = !DILocation(line: 308, column: 7, scope: !4)
!57 = !DILocation(line: 309, column: 7, scope: !4)
!58 = !DILocation(line: 310, column: 7, scope: !4)
!59 = !DILocation(line: 311, column: 7, scope: !4)
!60 = !DILocation(line: 312, column: 7, scope: !4)
!61 = !DILocation(line: 313, column: 7, scope: !4)
!62 = !DILocation(line: 314, column: 7, scope: !4)
!63 = !DILocation(line: 315, column: 7, scope: !4)
!64 = !DILocation(line: 316, column: 7, scope: !4)
!65 = !DILocation(line: 317, column: 7, scope: !4)
!66 = !DILocation(line: 318, column: 7, scope: !4)
!67 = !DILocation(line: 319, column: 7, scope: !4)
!68 = !DILocation(line: 320, column: 7, scope: !4)
!69 = !DILocation(line: 321, column: 7, scope: !4)
!70 = !DILocation(line: 322, column: 7, scope: !4)
!71 = !DILocation(line: 323, column: 7, scope: !4)
!72 = !DILocation(line: 324, column: 7, scope: !4)
!73 = !DILocation(line: 335, column: 7, scope: !4)
!74 = !DILocation(line: 346, column: 7, scope: !4)
!75 = !DILocation(line: 347, column: 7, scope: !4)
!76 = !DILocation(line: 348, column: 7, scope: !4)
!77 = !DILocation(line: 349, column: 7, scope: !4)
!78 = !DILocation(line: 350, column: 7, scope: !4)
!79 = !DILocation(line: 351, column: 7, scope: !4)
!80 = !DILocation(line: 352, column: 7, scope: !4)
!81 = !DILocation(line: 353, column: 7, scope: !4)
!82 = !DILocation(line: 354, column: 7, scope: !4)
!83 = !DILocation(line: 355, column: 7, scope: !4)
!84 = !DILocation(line: 356, column: 7, scope: !4)
!85 = !DILocation(line: 357, column: 7, scope: !4)
!86 = !DILocation(line: 358, column: 7, scope: !4)
!87 = !DILocation(line: 359, column: 7, scope: !4)
!88 = !DILocation(line: 360, column: 7, scope: !4)
!89 = !DILocation(line: 361, column: 7, scope: !4)
!90 = !DILocation(line: 362, column: 7, scope: !4)
!91 = !DILocation(line: 373, column: 7, scope: !4)
!92 = !DILocation(line: 374, column: 7, scope: !4)
!93 = !DILocation(line: 375, column: 7, scope: !4)
!94 = !DILocation(line: 376, column: 7, scope: !4)
!95 = !DILocation(line: 377, column: 7, scope: !4)
!96 = !DILocation(line: 378, column: 7, scope: !4)
!97 = !DILocation(line: 379, column: 7, scope: !4)
!98 = !DILocation(line: 380, column: 7, scope: !4)
!99 = !DILocation(line: 381, column: 7, scope: !4)
!100 = !DILocation(line: 382, column: 7, scope: !4)
!101 = !DILocation(line: 383, column: 7, scope: !4)
!102 = !DILocation(line: 384, column: 7, scope: !4)
!103 = !DILocation(line: 385, column: 7, scope: !4)
!104 = !DILocation(line: 386, column: 7, scope: !4)
!105 = !DILocation(line: 387, column: 7, scope: !4)
!106 = !DILocation(line: 388, column: 7, scope: !4)
!107 = !DILocation(line: 390, column: 7, scope: !4)
!108 = !DILocation(line: 401, column: 7, scope: !4)
!109 = !DILocation(line: 402, column: 7, scope: !4)
!110 = !DILocation(line: 403, column: 7, scope: !4)
!111 = !DILocation(line: 404, column: 7, scope: !4)
!112 = !DILocation(line: 405, column: 7, scope: !4)
!113 = !DILocation(line: 406, column: 7, scope: !4)
!114 = !DILocation(line: 407, column: 7, scope: !4)
!115 = !DILocation(line: 408, column: 7, scope: !4)
!116 = !DILocation(line: 409, column: 7, scope: !4)
!117 = !DILocation(line: 410, column: 7, scope: !4)
!118 = !DILocation(line: 411, column: 7, scope: !4)
!119 = !DILocation(line: 412, column: 7, scope: !4)
!120 = !DILocation(line: 413, column: 7, scope: !4)
!121 = !DILocation(line: 414, column: 7, scope: !4)
!122 = !DILocation(line: 415, column: 7, scope: !4)
!123 = !DILocation(line: 416, column: 7, scope: !4)
!124 = !DILocation(line: 417, column: 7, scope: !4)
!125 = !DILocation(line: 428, column: 7, scope: !4)
!126 = !DILocation(line: 429, column: 7, scope: !4)
!127 = !DILocation(line: 430, column: 7, scope: !4)
!128 = !DILocation(line: 431, column: 7, scope: !4)
!129 = !DILocation(line: 432, column: 7, scope: !4)
!130 = !DILocation(line: 433, column: 7, scope: !4)
!131 = !DILocation(line: 434, column: 7, scope: !4)
!132 = !DILocation(line: 435, column: 7, scope: !4)
!133 = !DILocation(line: 436, column: 7, scope: !4)
!134 = !DILocation(line: 437, column: 7, scope: !4)
!135 = !DILocation(line: 438, column: 7, scope: !4)
!136 = !DILocation(line: 439, column: 7, scope: !4)
!137 = !DILocation(line: 440, column: 7, scope: !4)
!138 = !DILocation(line: 441, column: 7, scope: !4)
!139 = !DILocation(line: 442, column: 7, scope: !4)
!140 = !DILocation(line: 443, column: 7, scope: !4)
!141 = !DILocation(line: 444, column: 7, scope: !4)
!142 = !DILocation(line: 175, column: 9, scope: !4)
!143 = !DILocation(line: 183, column: 9, scope: !4)
!144 = !DILocation(line: 184, column: 9, scope: !4)
!145 = !DILocation(line: 185, column: 9, scope: !4)
!146 = !DILocation(line: 186, column: 9, scope: !4)
!147 = !DILocation(line: 187, column: 9, scope: !4)
!148 = !DILocation(line: 188, column: 9, scope: !4)
!149 = !DILocation(line: 189, column: 9, scope: !4)
!150 = !DILocation(line: 190, column: 9, scope: !4)
!151 = !DILocation(line: 191, column: 9, scope: !4)
!152 = !DILocation(line: 192, column: 9, scope: !4)
!153 = !DILocation(line: 193, column: 9, scope: !4)
!154 = !DILocation(line: 194, column: 9, scope: !4)
!155 = !DILocation(line: 195, column: 9, scope: !4)
!156 = !DILocation(line: 196, column: 9, scope: !4)
!157 = !DILocation(line: 197, column: 9, scope: !4)
!158 = !DILocation(line: 631, column: 5, scope: !4)
!159 = !DILocation(line: 649, column: 5, scope: !4)
!160 = !DILocation(line: 667, column: 5, scope: !4)
!161 = !DILocation(line: 685, column: 5, scope: !4)
