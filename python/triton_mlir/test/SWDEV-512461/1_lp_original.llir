; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @matmul_kernel(ptr addrspace(1) inreg nocapture readonly %0, ptr addrspace(1) inreg nocapture readonly %1, ptr addrspace(1) inreg nocapture writeonly %2, ptr addrspace(1) inreg nocapture readnone %3, i32 inreg %4, i32 inreg %5, i32 inreg %6, i32 inreg %7, i32 inreg %8, i32 inreg %9, i32 inreg %10, ptr addrspace(1) inreg nocapture readnone %11) local_unnamed_addr #0 !dbg !4 {
  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %14 = sdiv i32 %13, 8, !dbg !8
  %15 = mul i32 %13, 76, !dbg !9
  %16 = mul i32 %14, -607, !dbg !9
  %17 = add i32 %16, %15, !dbg !9
  %18 = add i32 %5, 255, !dbg !10
  %19 = sdiv i32 %18, 256, !dbg !14
  %20 = shl nsw i32 %19, 2, !dbg !15
  %.frozen = freeze i32 %20, !dbg !16
  %21 = sdiv i32 %17, %.frozen, !dbg !16
  %22 = shl nsw i32 %21, 2, !dbg !17
  %23 = mul i32 %21, %.frozen, !dbg !18
  %.decomposed = sub i32 %17, %23, !dbg !18
  %24 = add i32 %4, 255, !dbg !19
  %25 = sdiv i32 %24, 256, !dbg !21
  %26 = sub nsw i32 %25, %22, !dbg !22
  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 4), !dbg !23
  %.decomposed.frozen = freeze i32 %.decomposed, !dbg !24
  %.frozen5374 = freeze i32 %27, !dbg !24
  %28 = sdiv i32 %.decomposed.frozen, %.frozen5374, !dbg !24
  %29 = mul i32 %28, %.frozen5374, !dbg !25
  %.decomposed5375 = sub i32 %.decomposed.frozen, %29, !dbg !25
  %30 = add nsw i32 %.decomposed5375, %22, !dbg !26
  %31 = shl i32 %30, 8, !dbg !27
  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !28
  %33 = lshr i32 %32, 3, !dbg !28
  %34 = and i32 %33, 16, !dbg !28
  %35 = and i32 %33, 31, !dbg !28
  %36 = or disjoint i32 %35, 32, !dbg !28
  %37 = or disjoint i32 %35, 64, !dbg !28
  %38 = or disjoint i32 %35, 96, !dbg !28
  %39 = or disjoint i32 %35, 128, !dbg !28
  %40 = or disjoint i32 %35, 160, !dbg !28
  %41 = or disjoint i32 %35, 192, !dbg !28
  %42 = or disjoint i32 %35, 224, !dbg !28
  %43 = mul i32 %31, %7, !dbg !29
  %44 = mul i32 %7, %35, !dbg !29
  %45 = mul i32 %7, %36, !dbg !29
  %46 = mul i32 %7, %37, !dbg !29
  %47 = mul i32 %7, %38, !dbg !29
  %48 = mul i32 %7, %39, !dbg !29
  %49 = mul i32 %7, %40, !dbg !29
  %50 = mul i32 %7, %41, !dbg !29
  %51 = mul i32 %7, %42, !dbg !29
  %52 = sext i32 %43 to i64, !dbg !29
  %53 = getelementptr half, ptr addrspace(1) %0, i64 %52, !dbg !29
  %54 = shl i32 %32, 3, !dbg !30
  %55 = and i32 %54, 56, !dbg !30
  %56 = add i32 %44, %55, !dbg !31
  %57 = add i32 %45, %55, !dbg !31
  %58 = add i32 %46, %55, !dbg !31
  %59 = add i32 %47, %55, !dbg !31
  %60 = add i32 %48, %55, !dbg !31
  %61 = add i32 %49, %55, !dbg !31
  %62 = add i32 %50, %55, !dbg !31
  %63 = add i32 %51, %55, !dbg !31
  %64 = getelementptr i8, ptr addrspace(1) %53, i64 128, !dbg !32
  %65 = add i32 %6, 63, !dbg !33
  %66 = icmp sgt i32 %65, 63, !dbg !35
  %67 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %53, i16 0, i32 2147483646, i32 159744), !dbg !36
  %68 = shl i32 %56, 1, !dbg !36
  %69 = select i1 %66, i32 %68, i32 -2147483648, !dbg !36
  %70 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %69, i32 0, i32 0), !dbg !36
  %71 = shl i32 %57, 1, !dbg !36
  %72 = select i1 %66, i32 %71, i32 -2147483648, !dbg !36
  %73 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %72, i32 0, i32 0), !dbg !36
  %74 = shl i32 %58, 1, !dbg !36
  %75 = select i1 %66, i32 %74, i32 -2147483648, !dbg !36
  %76 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %75, i32 0, i32 0), !dbg !36
  %77 = shl i32 %59, 1, !dbg !36
  %78 = select i1 %66, i32 %77, i32 -2147483648, !dbg !36
  %79 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %78, i32 0, i32 0), !dbg !36
  %80 = shl i32 %60, 1, !dbg !36
  %81 = select i1 %66, i32 %80, i32 -2147483648, !dbg !36
  %82 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %81, i32 0, i32 0), !dbg !36
  %83 = shl i32 %61, 1, !dbg !36
  %84 = select i1 %66, i32 %83, i32 -2147483648, !dbg !36
  %85 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %84, i32 0, i32 0), !dbg !36
  %86 = shl i32 %62, 1, !dbg !36
  %87 = select i1 %66, i32 %86, i32 -2147483648, !dbg !36
  %88 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %87, i32 0, i32 0), !dbg !36
  %89 = shl i32 %63, 1, !dbg !36
  %90 = select i1 %66, i32 %89, i32 -2147483648, !dbg !36
  %91 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %67, i32 %90, i32 0, i32 0), !dbg !36
  %92 = icmp sgt i32 %65, 127, !dbg !35
  %93 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %64, i16 0, i32 2147483646, i32 159744), !dbg !36
  %94 = select i1 %92, i32 %68, i32 -2147483648, !dbg !36
  %95 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %94, i32 0, i32 0), !dbg !36
  %96 = bitcast <4 x i32> %95 to <8 x half>, !dbg !36
  %97 = select i1 %92, i32 %71, i32 -2147483648, !dbg !36
  %98 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %97, i32 0, i32 0), !dbg !36
  %99 = bitcast <4 x i32> %98 to <8 x half>, !dbg !36
  %100 = select i1 %92, i32 %74, i32 -2147483648, !dbg !36
  %101 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %100, i32 0, i32 0), !dbg !36
  %102 = bitcast <4 x i32> %101 to <8 x half>, !dbg !36
  %103 = select i1 %92, i32 %77, i32 -2147483648, !dbg !36
  %104 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %103, i32 0, i32 0), !dbg !36
  %105 = bitcast <4 x i32> %104 to <8 x half>, !dbg !36
  %106 = select i1 %92, i32 %80, i32 -2147483648, !dbg !36
  %107 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %106, i32 0, i32 0), !dbg !36
  %108 = bitcast <4 x i32> %107 to <8 x half>, !dbg !36
  %109 = select i1 %92, i32 %83, i32 -2147483648, !dbg !36
  %110 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %109, i32 0, i32 0), !dbg !36
  %111 = bitcast <4 x i32> %110 to <8 x half>, !dbg !36
  %112 = select i1 %92, i32 %86, i32 -2147483648, !dbg !36
  %113 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %112, i32 0, i32 0), !dbg !36
  %114 = bitcast <4 x i32> %113 to <8 x half>, !dbg !36
  %115 = select i1 %92, i32 %89, i32 -2147483648, !dbg !36
  %116 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %93, i32 %115, i32 0, i32 0), !dbg !36
  %117 = bitcast <4 x i32> %116 to <8 x half>, !dbg !36
  %118 = shl i32 %28, 8, !dbg !37
  %119 = mul i32 %118, %8, !dbg !38
  %120 = mul i32 %8, %35, !dbg !38
  %121 = mul i32 %8, %36, !dbg !38
  %122 = mul i32 %8, %37, !dbg !38
  %123 = mul i32 %8, %38, !dbg !38
  %124 = mul i32 %8, %39, !dbg !38
  %125 = mul i32 %8, %40, !dbg !38
  %126 = mul i32 %8, %41, !dbg !38
  %127 = mul i32 %8, %42, !dbg !38
  %128 = sext i32 %119 to i64, !dbg !38
  %129 = getelementptr half, ptr addrspace(1) %1, i64 %128, !dbg !38
  %130 = add i32 %120, %55, !dbg !38
  %131 = add i32 %121, %55, !dbg !38
  %132 = add i32 %122, %55, !dbg !38
  %133 = add i32 %123, %55, !dbg !38
  %134 = add i32 %124, %55, !dbg !38
  %135 = add i32 %125, %55, !dbg !38
  %136 = add i32 %126, %55, !dbg !38
  %137 = add i32 %127, %55, !dbg !38
  %138 = getelementptr i8, ptr addrspace(1) %129, i64 128, !dbg !39
  %139 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %129, i16 0, i32 2147483646, i32 159744), !dbg !40
  %140 = shl i32 %130, 1, !dbg !40
  %141 = select i1 %66, i32 %140, i32 -2147483648, !dbg !40
  %142 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %141, i32 0, i32 0), !dbg !40
  %143 = shl i32 %131, 1, !dbg !40
  %144 = select i1 %66, i32 %143, i32 -2147483648, !dbg !40
  %145 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %144, i32 0, i32 0), !dbg !40
  %146 = shl i32 %132, 1, !dbg !40
  %147 = select i1 %66, i32 %146, i32 -2147483648, !dbg !40
  %148 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %147, i32 0, i32 0), !dbg !40
  %149 = shl i32 %133, 1, !dbg !40
  %150 = select i1 %66, i32 %149, i32 -2147483648, !dbg !40
  %151 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %150, i32 0, i32 0), !dbg !40
  %152 = shl i32 %134, 1, !dbg !40
  %153 = select i1 %66, i32 %152, i32 -2147483648, !dbg !40
  %154 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %153, i32 0, i32 0), !dbg !40
  %155 = shl i32 %135, 1, !dbg !40
  %156 = select i1 %66, i32 %155, i32 -2147483648, !dbg !40
  %157 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %156, i32 0, i32 0), !dbg !40
  %158 = shl i32 %136, 1, !dbg !40
  %159 = select i1 %66, i32 %158, i32 -2147483648, !dbg !40
  %160 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %159, i32 0, i32 0), !dbg !40
  %161 = shl i32 %137, 1, !dbg !40
  %162 = select i1 %66, i32 %161, i32 -2147483648, !dbg !40
  %163 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %139, i32 %162, i32 0, i32 0), !dbg !40
  %164 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %138, i16 0, i32 2147483646, i32 159744), !dbg !40
  %165 = select i1 %92, i32 %140, i32 -2147483648, !dbg !40
  %166 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %165, i32 0, i32 0), !dbg !40
  %167 = bitcast <4 x i32> %166 to <8 x half>, !dbg !40
  %168 = select i1 %92, i32 %143, i32 -2147483648, !dbg !40
  %169 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %168, i32 0, i32 0), !dbg !40
  %170 = bitcast <4 x i32> %169 to <8 x half>, !dbg !40
  %171 = select i1 %92, i32 %146, i32 -2147483648, !dbg !40
  %172 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %171, i32 0, i32 0), !dbg !40
  %173 = bitcast <4 x i32> %172 to <8 x half>, !dbg !40
  %174 = select i1 %92, i32 %149, i32 -2147483648, !dbg !40
  %175 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %174, i32 0, i32 0), !dbg !40
  %176 = bitcast <4 x i32> %175 to <8 x half>, !dbg !40
  %177 = select i1 %92, i32 %152, i32 -2147483648, !dbg !40
  %178 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %177, i32 0, i32 0), !dbg !40
  %179 = bitcast <4 x i32> %178 to <8 x half>, !dbg !40
  %180 = select i1 %92, i32 %155, i32 -2147483648, !dbg !40
  %181 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %180, i32 0, i32 0), !dbg !40
  %182 = bitcast <4 x i32> %181 to <8 x half>, !dbg !40
  %183 = select i1 %92, i32 %158, i32 -2147483648, !dbg !40
  %184 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %183, i32 0, i32 0), !dbg !40
  %185 = bitcast <4 x i32> %184 to <8 x half>, !dbg !40
  %186 = select i1 %92, i32 %161, i32 -2147483648, !dbg !40
  %187 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %164, i32 %186, i32 0, i32 0), !dbg !40
  %188 = bitcast <4 x i32> %187 to <8 x half>, !dbg !40
  %189 = icmp sgt i32 %7, 0, !dbg !41
  tail call void @llvm.assume(i1 %189), !dbg !42
  %190 = icmp sgt i32 %8, 0, !dbg !43
  tail call void @llvm.assume(i1 %190), !dbg !44
  %191 = icmp sgt i32 %9, 0, !dbg !45
  tail call void @llvm.assume(i1 %191), !dbg !46
  %192 = icmp sgt i32 %10, 0, !dbg !47
  tail call void @llvm.assume(i1 %192), !dbg !48
  %193 = icmp sgt i32 %30, 0, !dbg !49
  tail call void @llvm.assume(i1 %193), !dbg !50
  %194 = icmp sgt i32 %28, 0, !dbg !51
  tail call void @llvm.assume(i1 %194), !dbg !52
  %195 = xor i32 %54, %32, !dbg !36
  %196 = and i32 %195, 56, !dbg !36
  %197 = shl nuw nsw i32 %35, 6, !dbg !36
  %198 = or disjoint i32 %197, %196, !dbg !36
  %199 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %198, !dbg !36
  store <4 x i32> %70, ptr addrspace(3) %199, align 16, !dbg !36
  %200 = or disjoint i32 %198, 2048, !dbg !36
  %201 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %200, !dbg !36
  store <4 x i32> %73, ptr addrspace(3) %201, align 16, !dbg !36
  %202 = or disjoint i32 %198, 4096, !dbg !36
  %203 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %202, !dbg !36
  store <4 x i32> %76, ptr addrspace(3) %203, align 16, !dbg !36
  %204 = or disjoint i32 %198, 6144, !dbg !36
  %205 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %204, !dbg !36
  store <4 x i32> %79, ptr addrspace(3) %205, align 16, !dbg !36
  %206 = or disjoint i32 %198, 8192, !dbg !36
  %207 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %206, !dbg !36
  store <4 x i32> %82, ptr addrspace(3) %207, align 16, !dbg !36
  %208 = or disjoint i32 %198, 10240, !dbg !36
  %209 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %208, !dbg !36
  store <4 x i32> %85, ptr addrspace(3) %209, align 16, !dbg !36
  %210 = or disjoint i32 %198, 12288, !dbg !36
  %211 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %210, !dbg !36
  store <4 x i32> %88, ptr addrspace(3) %211, align 16, !dbg !36
  %212 = or disjoint i32 %198, 14336, !dbg !36
  %213 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %212, !dbg !36
  store <4 x i32> %91, ptr addrspace(3) %213, align 16, !dbg !36
  %214 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %198, !dbg !40
  store <4 x i32> %142, ptr addrspace(3) %214, align 16, !dbg !40
  %215 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %200, !dbg !40
  store <4 x i32> %145, ptr addrspace(3) %215, align 16, !dbg !40
  %216 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %202, !dbg !40
  store <4 x i32> %148, ptr addrspace(3) %216, align 16, !dbg !40
  %217 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %204, !dbg !40
  store <4 x i32> %151, ptr addrspace(3) %217, align 16, !dbg !40
  %218 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %206, !dbg !40
  store <4 x i32> %154, ptr addrspace(3) %218, align 16, !dbg !40
  %219 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %208, !dbg !40
  store <4 x i32> %157, ptr addrspace(3) %219, align 16, !dbg !40
  %220 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %210, !dbg !40
  store <4 x i32> %160, ptr addrspace(3) %220, align 16, !dbg !40
  %221 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %212, !dbg !40
  store <4 x i32> %163, ptr addrspace(3) %221, align 16, !dbg !40
  fence syncscope("workgroup") release, !dbg !36
  tail call void @llvm.amdgcn.s.barrier(), !dbg !36
  fence syncscope("workgroup") acquire, !dbg !36
  %222 = and i32 %32, 15, !dbg !36
  %223 = lshr i32 %32, 4, !dbg !36
  %224 = and i32 %223, 3, !dbg !36
  %225 = or disjoint i32 %34, %222, !dbg !36
  %226 = and i32 %32, 7, !dbg !36
  %227 = xor i32 %224, %226, !dbg !36
  %228 = shl nuw nsw i32 %227, 3, !dbg !36
  %229 = shl nuw nsw i32 %225, 6, !dbg !36
  %230 = or disjoint i32 %229, %228, !dbg !36
  %231 = or disjoint i32 %224, 4, !dbg !36
  %232 = xor i32 %231, %226, !dbg !36
  %233 = shl nuw nsw i32 %232, 3, !dbg !36
  %234 = or disjoint i32 %233, %229, !dbg !36
  %235 = or disjoint i32 %230, 2048, !dbg !36
  %236 = or disjoint i32 %234, 2048, !dbg !36
  %237 = or disjoint i32 %230, 4096, !dbg !36
  %238 = or disjoint i32 %234, 4096, !dbg !36
  %239 = or disjoint i32 %230, 6144, !dbg !36
  %240 = or disjoint i32 %234, 6144, !dbg !36
  %241 = or disjoint i32 %230, 8192, !dbg !36
  %242 = or disjoint i32 %234, 8192, !dbg !36
  %243 = or disjoint i32 %230, 10240, !dbg !36
  %244 = or disjoint i32 %234, 10240, !dbg !36
  %245 = or disjoint i32 %230, 12288, !dbg !36
  %246 = or disjoint i32 %234, 12288, !dbg !36
  %247 = or disjoint i32 %230, 14336, !dbg !36
  %248 = or disjoint i32 %234, 14336, !dbg !36
  %249 = getelementptr half, ptr addrspace(3) @global_smem, i32 %230, !dbg !36
  %250 = load <8 x half>, ptr addrspace(3) %249, align 16, !dbg !36
  %251 = getelementptr half, ptr addrspace(3) @global_smem, i32 %234, !dbg !36
  %252 = load <8 x half>, ptr addrspace(3) %251, align 16, !dbg !36
  %253 = getelementptr half, ptr addrspace(3) @global_smem, i32 %235, !dbg !36
  %254 = load <8 x half>, ptr addrspace(3) %253, align 16, !dbg !36
  %255 = getelementptr half, ptr addrspace(3) @global_smem, i32 %236, !dbg !36
  %256 = load <8 x half>, ptr addrspace(3) %255, align 16, !dbg !36
  %257 = getelementptr half, ptr addrspace(3) @global_smem, i32 %237, !dbg !36
  %258 = load <8 x half>, ptr addrspace(3) %257, align 16, !dbg !36
  %259 = getelementptr half, ptr addrspace(3) @global_smem, i32 %238, !dbg !36
  %260 = load <8 x half>, ptr addrspace(3) %259, align 16, !dbg !36
  %261 = getelementptr half, ptr addrspace(3) @global_smem, i32 %239, !dbg !36
  %262 = load <8 x half>, ptr addrspace(3) %261, align 16, !dbg !36
  %263 = getelementptr half, ptr addrspace(3) @global_smem, i32 %240, !dbg !36
  %264 = load <8 x half>, ptr addrspace(3) %263, align 16, !dbg !36
  %265 = getelementptr half, ptr addrspace(3) @global_smem, i32 %241, !dbg !36
  %266 = load <8 x half>, ptr addrspace(3) %265, align 16, !dbg !36
  %267 = getelementptr half, ptr addrspace(3) @global_smem, i32 %242, !dbg !36
  %268 = load <8 x half>, ptr addrspace(3) %267, align 16, !dbg !36
  %269 = getelementptr half, ptr addrspace(3) @global_smem, i32 %243, !dbg !36
  %270 = load <8 x half>, ptr addrspace(3) %269, align 16, !dbg !36
  %271 = getelementptr half, ptr addrspace(3) @global_smem, i32 %244, !dbg !36
  %272 = load <8 x half>, ptr addrspace(3) %271, align 16, !dbg !36
  %273 = getelementptr half, ptr addrspace(3) @global_smem, i32 %245, !dbg !36
  %274 = load <8 x half>, ptr addrspace(3) %273, align 16, !dbg !36
  %275 = getelementptr half, ptr addrspace(3) @global_smem, i32 %246, !dbg !36
  %276 = load <8 x half>, ptr addrspace(3) %275, align 16, !dbg !36
  %277 = getelementptr half, ptr addrspace(3) @global_smem, i32 %247, !dbg !36
  %278 = load <8 x half>, ptr addrspace(3) %277, align 16, !dbg !36
  %279 = getelementptr half, ptr addrspace(3) @global_smem, i32 %248, !dbg !36
  %280 = load <8 x half>, ptr addrspace(3) %279, align 16, !dbg !36
  %281 = lshr i32 %32, 2, !dbg !40
  %282 = and i32 %281, 16, !dbg !40
  %283 = or disjoint i32 %282, %222, !dbg !40
  %284 = shl nuw nsw i32 %283, 6, !dbg !40
  %285 = or disjoint i32 %228, %284, !dbg !40
  %286 = or disjoint i32 %233, %284, !dbg !40
  %287 = or disjoint i32 %285, 2048, !dbg !40
  %288 = or disjoint i32 %286, 2048, !dbg !40
  %289 = or disjoint i32 %285, 4096, !dbg !40
  %290 = or disjoint i32 %286, 4096, !dbg !40
  %291 = or disjoint i32 %285, 6144, !dbg !40
  %292 = or disjoint i32 %286, 6144, !dbg !40
  %293 = or disjoint i32 %285, 8192, !dbg !40
  %294 = or disjoint i32 %286, 8192, !dbg !40
  %295 = or disjoint i32 %285, 10240, !dbg !40
  %296 = or disjoint i32 %286, 10240, !dbg !40
  %297 = or disjoint i32 %285, 12288, !dbg !40
  %298 = or disjoint i32 %286, 12288, !dbg !40
  %299 = or disjoint i32 %285, 14336, !dbg !40
  %300 = or disjoint i32 %286, 14336, !dbg !40
  %301 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %285, !dbg !40
  %302 = load <8 x half>, ptr addrspace(3) %301, align 16, !dbg !40
  %303 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %286, !dbg !40
  %304 = load <8 x half>, ptr addrspace(3) %303, align 16, !dbg !40
  %305 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %287, !dbg !40
  %306 = load <8 x half>, ptr addrspace(3) %305, align 16, !dbg !40
  %307 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %288, !dbg !40
  %308 = load <8 x half>, ptr addrspace(3) %307, align 16, !dbg !40
  %309 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %289, !dbg !40
  %310 = load <8 x half>, ptr addrspace(3) %309, align 16, !dbg !40
  %311 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %290, !dbg !40
  %312 = load <8 x half>, ptr addrspace(3) %311, align 16, !dbg !40
  %313 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %291, !dbg !40
  %314 = load <8 x half>, ptr addrspace(3) %313, align 16, !dbg !40
  %315 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %292, !dbg !40
  %316 = load <8 x half>, ptr addrspace(3) %315, align 16, !dbg !40
  %317 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %293, !dbg !40
  %318 = load <8 x half>, ptr addrspace(3) %317, align 16, !dbg !40
  %319 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %294, !dbg !40
  %320 = load <8 x half>, ptr addrspace(3) %319, align 16, !dbg !40
  %321 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %295, !dbg !40
  %322 = load <8 x half>, ptr addrspace(3) %321, align 16, !dbg !40
  %323 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %296, !dbg !40
  %324 = load <8 x half>, ptr addrspace(3) %323, align 16, !dbg !40
  %325 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %297, !dbg !40
  %326 = load <8 x half>, ptr addrspace(3) %325, align 16, !dbg !40
  %327 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %298, !dbg !40
  %328 = load <8 x half>, ptr addrspace(3) %327, align 16, !dbg !40
  %329 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %299, !dbg !40
  %330 = load <8 x half>, ptr addrspace(3) %329, align 16, !dbg !40
  %331 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %300, !dbg !40
  %332 = load <8 x half>, ptr addrspace(3) %331, align 16, !dbg !40
  %333 = icmp sgt i32 %65, 191, !dbg !35
  %334 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %335 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %336 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %337 = shufflevector <8 x half> %332, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %338 = shufflevector <8 x half> %330, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %339 = shufflevector <8 x half> %330, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %340 = shufflevector <8 x half> %330, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %341 = shufflevector <8 x half> %330, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %342 = shufflevector <8 x half> %328, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %343 = shufflevector <8 x half> %328, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %344 = shufflevector <8 x half> %328, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %345 = shufflevector <8 x half> %328, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %346 = shufflevector <8 x half> %326, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %347 = shufflevector <8 x half> %326, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %348 = shufflevector <8 x half> %326, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %349 = shufflevector <8 x half> %326, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %350 = shufflevector <8 x half> %324, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %351 = shufflevector <8 x half> %324, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %352 = shufflevector <8 x half> %324, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %353 = shufflevector <8 x half> %324, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %354 = shufflevector <8 x half> %322, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %355 = shufflevector <8 x half> %322, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %356 = shufflevector <8 x half> %322, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %357 = shufflevector <8 x half> %322, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %358 = shufflevector <8 x half> %320, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %359 = shufflevector <8 x half> %320, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %360 = shufflevector <8 x half> %320, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %361 = shufflevector <8 x half> %320, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %362 = shufflevector <8 x half> %318, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %363 = shufflevector <8 x half> %318, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %364 = shufflevector <8 x half> %318, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %365 = shufflevector <8 x half> %318, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %366 = shufflevector <8 x half> %316, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %367 = shufflevector <8 x half> %316, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %368 = shufflevector <8 x half> %316, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %369 = shufflevector <8 x half> %316, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %370 = shufflevector <8 x half> %314, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %371 = shufflevector <8 x half> %314, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %372 = shufflevector <8 x half> %314, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %373 = shufflevector <8 x half> %314, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %374 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %375 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %376 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %377 = shufflevector <8 x half> %312, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %378 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %379 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %380 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %381 = shufflevector <8 x half> %310, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %382 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %383 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %384 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %385 = shufflevector <8 x half> %308, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %386 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %387 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %388 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %389 = shufflevector <8 x half> %306, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %390 = shufflevector <8 x half> %304, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %391 = shufflevector <8 x half> %304, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %392 = shufflevector <8 x half> %304, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %393 = shufflevector <8 x half> %304, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %394 = shufflevector <8 x half> %302, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %395 = shufflevector <8 x half> %302, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %396 = shufflevector <8 x half> %302, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %397 = shufflevector <8 x half> %302, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %398 = shufflevector <8 x half> %280, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %399 = shufflevector <8 x half> %280, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %400 = shufflevector <8 x half> %280, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %401 = shufflevector <8 x half> %280, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %402 = shufflevector <8 x half> %278, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %403 = shufflevector <8 x half> %278, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %404 = shufflevector <8 x half> %278, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %405 = shufflevector <8 x half> %278, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %406 = shufflevector <8 x half> %276, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %407 = shufflevector <8 x half> %276, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %408 = shufflevector <8 x half> %276, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %409 = shufflevector <8 x half> %276, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %410 = shufflevector <8 x half> %274, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %411 = shufflevector <8 x half> %274, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %412 = shufflevector <8 x half> %274, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %413 = shufflevector <8 x half> %274, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %414 = shufflevector <8 x half> %272, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %415 = shufflevector <8 x half> %272, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %416 = shufflevector <8 x half> %272, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %417 = shufflevector <8 x half> %272, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %418 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %419 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %420 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %421 = shufflevector <8 x half> %270, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %422 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %423 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %424 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %425 = shufflevector <8 x half> %268, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %426 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %427 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %428 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %429 = shufflevector <8 x half> %266, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %430 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %431 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %432 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %433 = shufflevector <8 x half> %264, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %434 = shufflevector <8 x half> %262, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %435 = shufflevector <8 x half> %262, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %436 = shufflevector <8 x half> %262, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %437 = shufflevector <8 x half> %262, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %438 = shufflevector <8 x half> %260, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %439 = shufflevector <8 x half> %260, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %440 = shufflevector <8 x half> %260, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %441 = shufflevector <8 x half> %260, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %442 = shufflevector <8 x half> %258, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %443 = shufflevector <8 x half> %258, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %444 = shufflevector <8 x half> %258, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %445 = shufflevector <8 x half> %258, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %446 = shufflevector <8 x half> %256, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %447 = shufflevector <8 x half> %256, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %448 = shufflevector <8 x half> %256, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %449 = shufflevector <8 x half> %256, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %450 = shufflevector <8 x half> %254, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %451 = shufflevector <8 x half> %254, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %452 = shufflevector <8 x half> %254, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %453 = shufflevector <8 x half> %254, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %454 = shufflevector <8 x half> %252, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %455 = shufflevector <8 x half> %252, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %456 = shufflevector <8 x half> %252, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %457 = shufflevector <8 x half> %252, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %458 = shufflevector <8 x half> %250, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %459 = shufflevector <8 x half> %250, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %460 = shufflevector <8 x half> %250, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %461 = shufflevector <8 x half> %250, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %462 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %463 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %464 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %465 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %466 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %467 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %468 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %469 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %470 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %471 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %472 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %473 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %474 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %475 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %476 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %477 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %478 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %479 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %480 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %481 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %482 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %483 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %484 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %485 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %486 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %487 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %488 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %489 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %490 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %491 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %492 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %493 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %494 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %495 = shufflevector <8 x half> %96, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %496 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %497 = shufflevector <8 x half> %99, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %498 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %499 = shufflevector <8 x half> %102, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %500 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %501 = shufflevector <8 x half> %105, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %502 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %503 = shufflevector <8 x half> %108, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %504 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %505 = shufflevector <8 x half> %111, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %506 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %507 = shufflevector <8 x half> %114, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %508 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %509 = shufflevector <8 x half> %117, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %510 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %511 = shufflevector <8 x half> %167, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %512 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %513 = shufflevector <8 x half> %170, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %514 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %515 = shufflevector <8 x half> %173, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %516 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %517 = shufflevector <8 x half> %176, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %518 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %519 = shufflevector <8 x half> %179, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %520 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %521 = shufflevector <8 x half> %182, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %522 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %523 = shufflevector <8 x half> %185, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %524 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %525 = shufflevector <8 x half> %188, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br i1 %333, label %.lr.ph.preheader, label %._crit_edge, !dbg !35

.lr.ph.preheader:                                 ; preds = %12
  %526 = lshr i32 %65, 6, !dbg !53
  %527 = add nsw i32 %526, -3
  br label %.lr.ph, !dbg !35

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %528 = phi ptr addrspace(1) [ %997, %.lr.ph ], [ %138, %.lr.ph.preheader ]
  %529 = phi ptr addrspace(1) [ %979, %.lr.ph ], [ %64, %.lr.ph.preheader ]
  %530 = phi float [ %1545, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %531 = phi float [ %1546, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %532 = phi float [ %1547, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %533 = phi float [ %1548, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %534 = phi float [ %1551, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %535 = phi float [ %1552, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %536 = phi float [ %1553, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %537 = phi float [ %1554, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %538 = phi float [ %1569, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %539 = phi float [ %1570, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %540 = phi float [ %1571, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %541 = phi float [ %1572, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %542 = phi float [ %1575, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %543 = phi float [ %1576, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %544 = phi float [ %1577, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %545 = phi float [ %1578, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %546 = phi float [ %1593, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %547 = phi float [ %1594, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %548 = phi float [ %1595, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %549 = phi float [ %1596, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %550 = phi float [ %1599, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %551 = phi float [ %1600, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %552 = phi float [ %1601, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %553 = phi float [ %1602, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %554 = phi float [ %1617, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %555 = phi float [ %1618, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %556 = phi float [ %1619, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %557 = phi float [ %1620, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %558 = phi float [ %1623, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %559 = phi float [ %1624, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %560 = phi float [ %1625, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %561 = phi float [ %1626, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %562 = phi float [ %1557, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %563 = phi float [ %1558, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %564 = phi float [ %1559, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %565 = phi float [ %1560, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %566 = phi float [ %1563, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %567 = phi float [ %1564, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %568 = phi float [ %1565, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %569 = phi float [ %1566, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %570 = phi float [ %1581, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %571 = phi float [ %1582, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %572 = phi float [ %1583, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %573 = phi float [ %1584, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %574 = phi float [ %1587, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %575 = phi float [ %1588, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %576 = phi float [ %1589, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %577 = phi float [ %1590, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %578 = phi float [ %1605, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %579 = phi float [ %1606, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %580 = phi float [ %1607, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %581 = phi float [ %1608, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %582 = phi float [ %1611, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %583 = phi float [ %1612, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %584 = phi float [ %1613, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %585 = phi float [ %1614, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %586 = phi float [ %1629, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %587 = phi float [ %1630, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %588 = phi float [ %1631, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %589 = phi float [ %1632, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %590 = phi float [ %1635, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %591 = phi float [ %1636, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %592 = phi float [ %1637, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %593 = phi float [ %1638, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %594 = phi float [ %1641, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %595 = phi float [ %1642, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %596 = phi float [ %1643, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %597 = phi float [ %1644, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %598 = phi float [ %1647, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %599 = phi float [ %1648, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %600 = phi float [ %1649, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %601 = phi float [ %1650, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %602 = phi float [ %1665, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %603 = phi float [ %1666, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %604 = phi float [ %1667, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %605 = phi float [ %1668, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %606 = phi float [ %1671, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %607 = phi float [ %1672, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %608 = phi float [ %1673, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %609 = phi float [ %1674, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %610 = phi float [ %1689, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %611 = phi float [ %1690, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %612 = phi float [ %1691, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %613 = phi float [ %1692, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %614 = phi float [ %1695, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %615 = phi float [ %1696, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %616 = phi float [ %1697, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %617 = phi float [ %1698, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %618 = phi float [ %1713, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %619 = phi float [ %1714, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %620 = phi float [ %1715, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %621 = phi float [ %1716, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %622 = phi float [ %1719, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %623 = phi float [ %1720, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %624 = phi float [ %1721, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %625 = phi float [ %1722, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %626 = phi float [ %1653, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %627 = phi float [ %1654, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %628 = phi float [ %1655, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %629 = phi float [ %1656, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %630 = phi float [ %1659, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %631 = phi float [ %1660, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %632 = phi float [ %1661, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %633 = phi float [ %1662, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %634 = phi float [ %1677, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %635 = phi float [ %1678, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %636 = phi float [ %1679, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %637 = phi float [ %1680, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %638 = phi float [ %1683, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %639 = phi float [ %1684, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %640 = phi float [ %1685, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %641 = phi float [ %1686, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %642 = phi float [ %1701, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %643 = phi float [ %1702, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %644 = phi float [ %1703, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %645 = phi float [ %1704, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %646 = phi float [ %1707, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %647 = phi float [ %1708, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %648 = phi float [ %1709, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %649 = phi float [ %1710, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %650 = phi float [ %1725, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %651 = phi float [ %1726, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %652 = phi float [ %1727, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %653 = phi float [ %1728, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %654 = phi float [ %1731, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %655 = phi float [ %1732, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %656 = phi float [ %1733, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %657 = phi float [ %1734, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %658 = phi float [ %1737, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %659 = phi float [ %1738, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %660 = phi float [ %1739, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %661 = phi float [ %1740, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %662 = phi float [ %1743, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %663 = phi float [ %1744, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %664 = phi float [ %1745, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %665 = phi float [ %1746, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %666 = phi float [ %1761, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %667 = phi float [ %1762, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %668 = phi float [ %1763, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %669 = phi float [ %1764, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %670 = phi float [ %1767, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %671 = phi float [ %1768, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %672 = phi float [ %1769, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %673 = phi float [ %1770, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %674 = phi float [ %1785, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %675 = phi float [ %1786, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %676 = phi float [ %1787, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %677 = phi float [ %1788, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %678 = phi float [ %1791, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %679 = phi float [ %1792, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %680 = phi float [ %1793, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %681 = phi float [ %1794, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %682 = phi float [ %1809, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %683 = phi float [ %1810, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %684 = phi float [ %1811, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %685 = phi float [ %1812, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %686 = phi float [ %1815, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %687 = phi float [ %1816, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %688 = phi float [ %1817, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %689 = phi float [ %1818, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %690 = phi float [ %1749, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %691 = phi float [ %1750, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %692 = phi float [ %1751, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %693 = phi float [ %1752, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %694 = phi float [ %1755, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %695 = phi float [ %1756, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %696 = phi float [ %1757, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %697 = phi float [ %1758, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %698 = phi float [ %1773, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %699 = phi float [ %1774, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %700 = phi float [ %1775, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %701 = phi float [ %1776, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %702 = phi float [ %1779, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %703 = phi float [ %1780, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %704 = phi float [ %1781, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %705 = phi float [ %1782, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %706 = phi float [ %1797, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %707 = phi float [ %1798, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %708 = phi float [ %1799, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %709 = phi float [ %1800, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %710 = phi float [ %1803, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %711 = phi float [ %1804, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %712 = phi float [ %1805, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %713 = phi float [ %1806, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %714 = phi float [ %1821, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %715 = phi float [ %1822, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %716 = phi float [ %1823, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %717 = phi float [ %1824, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %718 = phi float [ %1827, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %719 = phi float [ %1828, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %720 = phi float [ %1829, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %721 = phi float [ %1830, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %722 = phi float [ %1833, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %723 = phi float [ %1834, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %724 = phi float [ %1835, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %725 = phi float [ %1836, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %726 = phi float [ %1839, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %727 = phi float [ %1840, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %728 = phi float [ %1841, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %729 = phi float [ %1842, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %730 = phi float [ %1857, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %731 = phi float [ %1858, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %732 = phi float [ %1859, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %733 = phi float [ %1860, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %734 = phi float [ %1863, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %735 = phi float [ %1864, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %736 = phi float [ %1865, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %737 = phi float [ %1866, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %738 = phi float [ %1881, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %739 = phi float [ %1882, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %740 = phi float [ %1883, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %741 = phi float [ %1884, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %742 = phi float [ %1887, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %743 = phi float [ %1888, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %744 = phi float [ %1889, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %745 = phi float [ %1890, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %746 = phi float [ %1905, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %747 = phi float [ %1906, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %748 = phi float [ %1907, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %749 = phi float [ %1908, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %750 = phi float [ %1911, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %751 = phi float [ %1912, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %752 = phi float [ %1913, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %753 = phi float [ %1914, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %754 = phi float [ %1845, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %755 = phi float [ %1846, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %756 = phi float [ %1847, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %757 = phi float [ %1848, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %758 = phi float [ %1851, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %759 = phi float [ %1852, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %760 = phi float [ %1853, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %761 = phi float [ %1854, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %762 = phi float [ %1869, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %763 = phi float [ %1870, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %764 = phi float [ %1871, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %765 = phi float [ %1872, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %766 = phi float [ %1875, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %767 = phi float [ %1876, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %768 = phi float [ %1877, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %769 = phi float [ %1878, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %770 = phi float [ %1893, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %771 = phi float [ %1894, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %772 = phi float [ %1895, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %773 = phi float [ %1896, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %774 = phi float [ %1899, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %775 = phi float [ %1900, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %776 = phi float [ %1901, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %777 = phi float [ %1902, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %778 = phi float [ %1917, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %779 = phi float [ %1918, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %780 = phi float [ %1919, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %781 = phi float [ %1920, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %782 = phi float [ %1923, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %783 = phi float [ %1924, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %784 = phi float [ %1925, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %785 = phi float [ %1926, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %786 = phi i32 [ %1959, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %787 = phi <2 x half> [ %1961, %.lr.ph ], [ %335, %.lr.ph.preheader ]
  %788 = phi <2 x half> [ %1960, %.lr.ph ], [ %334, %.lr.ph.preheader ]
  %789 = phi <2 x half> [ %1963, %.lr.ph ], [ %337, %.lr.ph.preheader ]
  %790 = phi <2 x half> [ %1962, %.lr.ph ], [ %336, %.lr.ph.preheader ]
  %791 = phi <2 x half> [ %1965, %.lr.ph ], [ %339, %.lr.ph.preheader ]
  %792 = phi <2 x half> [ %1964, %.lr.ph ], [ %338, %.lr.ph.preheader ]
  %793 = phi <2 x half> [ %1967, %.lr.ph ], [ %341, %.lr.ph.preheader ]
  %794 = phi <2 x half> [ %1966, %.lr.ph ], [ %340, %.lr.ph.preheader ]
  %795 = phi <2 x half> [ %1969, %.lr.ph ], [ %343, %.lr.ph.preheader ]
  %796 = phi <2 x half> [ %1968, %.lr.ph ], [ %342, %.lr.ph.preheader ]
  %797 = phi <2 x half> [ %1971, %.lr.ph ], [ %345, %.lr.ph.preheader ]
  %798 = phi <2 x half> [ %1970, %.lr.ph ], [ %344, %.lr.ph.preheader ]
  %799 = phi <2 x half> [ %1973, %.lr.ph ], [ %347, %.lr.ph.preheader ]
  %800 = phi <2 x half> [ %1972, %.lr.ph ], [ %346, %.lr.ph.preheader ]
  %801 = phi <2 x half> [ %1975, %.lr.ph ], [ %349, %.lr.ph.preheader ]
  %802 = phi <2 x half> [ %1974, %.lr.ph ], [ %348, %.lr.ph.preheader ]
  %803 = phi <2 x half> [ %1977, %.lr.ph ], [ %351, %.lr.ph.preheader ]
  %804 = phi <2 x half> [ %1976, %.lr.ph ], [ %350, %.lr.ph.preheader ]
  %805 = phi <2 x half> [ %1979, %.lr.ph ], [ %353, %.lr.ph.preheader ]
  %806 = phi <2 x half> [ %1978, %.lr.ph ], [ %352, %.lr.ph.preheader ]
  %807 = phi <2 x half> [ %1981, %.lr.ph ], [ %355, %.lr.ph.preheader ]
  %808 = phi <2 x half> [ %1980, %.lr.ph ], [ %354, %.lr.ph.preheader ]
  %809 = phi <2 x half> [ %1983, %.lr.ph ], [ %357, %.lr.ph.preheader ]
  %810 = phi <2 x half> [ %1982, %.lr.ph ], [ %356, %.lr.ph.preheader ]
  %811 = phi <2 x half> [ %1985, %.lr.ph ], [ %359, %.lr.ph.preheader ]
  %812 = phi <2 x half> [ %1984, %.lr.ph ], [ %358, %.lr.ph.preheader ]
  %813 = phi <2 x half> [ %1987, %.lr.ph ], [ %361, %.lr.ph.preheader ]
  %814 = phi <2 x half> [ %1986, %.lr.ph ], [ %360, %.lr.ph.preheader ]
  %815 = phi <2 x half> [ %1989, %.lr.ph ], [ %363, %.lr.ph.preheader ]
  %816 = phi <2 x half> [ %1988, %.lr.ph ], [ %362, %.lr.ph.preheader ]
  %817 = phi <2 x half> [ %1991, %.lr.ph ], [ %365, %.lr.ph.preheader ]
  %818 = phi <2 x half> [ %1990, %.lr.ph ], [ %364, %.lr.ph.preheader ]
  %819 = phi <2 x half> [ %1993, %.lr.ph ], [ %367, %.lr.ph.preheader ]
  %820 = phi <2 x half> [ %1992, %.lr.ph ], [ %366, %.lr.ph.preheader ]
  %821 = phi <2 x half> [ %1995, %.lr.ph ], [ %369, %.lr.ph.preheader ]
  %822 = phi <2 x half> [ %1994, %.lr.ph ], [ %368, %.lr.ph.preheader ]
  %823 = phi <2 x half> [ %1997, %.lr.ph ], [ %371, %.lr.ph.preheader ]
  %824 = phi <2 x half> [ %1996, %.lr.ph ], [ %370, %.lr.ph.preheader ]
  %825 = phi <2 x half> [ %1999, %.lr.ph ], [ %373, %.lr.ph.preheader ]
  %826 = phi <2 x half> [ %1998, %.lr.ph ], [ %372, %.lr.ph.preheader ]
  %827 = phi <2 x half> [ %2001, %.lr.ph ], [ %375, %.lr.ph.preheader ]
  %828 = phi <2 x half> [ %2000, %.lr.ph ], [ %374, %.lr.ph.preheader ]
  %829 = phi <2 x half> [ %2003, %.lr.ph ], [ %377, %.lr.ph.preheader ]
  %830 = phi <2 x half> [ %2002, %.lr.ph ], [ %376, %.lr.ph.preheader ]
  %831 = phi <2 x half> [ %2005, %.lr.ph ], [ %379, %.lr.ph.preheader ]
  %832 = phi <2 x half> [ %2004, %.lr.ph ], [ %378, %.lr.ph.preheader ]
  %833 = phi <2 x half> [ %2007, %.lr.ph ], [ %381, %.lr.ph.preheader ]
  %834 = phi <2 x half> [ %2006, %.lr.ph ], [ %380, %.lr.ph.preheader ]
  %835 = phi <2 x half> [ %2009, %.lr.ph ], [ %383, %.lr.ph.preheader ]
  %836 = phi <2 x half> [ %2008, %.lr.ph ], [ %382, %.lr.ph.preheader ]
  %837 = phi <2 x half> [ %2011, %.lr.ph ], [ %385, %.lr.ph.preheader ]
  %838 = phi <2 x half> [ %2010, %.lr.ph ], [ %384, %.lr.ph.preheader ]
  %839 = phi <2 x half> [ %2013, %.lr.ph ], [ %387, %.lr.ph.preheader ]
  %840 = phi <2 x half> [ %2012, %.lr.ph ], [ %386, %.lr.ph.preheader ]
  %841 = phi <2 x half> [ %2015, %.lr.ph ], [ %389, %.lr.ph.preheader ]
  %842 = phi <2 x half> [ %2014, %.lr.ph ], [ %388, %.lr.ph.preheader ]
  %843 = phi <2 x half> [ %2017, %.lr.ph ], [ %391, %.lr.ph.preheader ]
  %844 = phi <2 x half> [ %2016, %.lr.ph ], [ %390, %.lr.ph.preheader ]
  %845 = phi <2 x half> [ %2019, %.lr.ph ], [ %393, %.lr.ph.preheader ]
  %846 = phi <2 x half> [ %2018, %.lr.ph ], [ %392, %.lr.ph.preheader ]
  %847 = phi <2 x half> [ %2021, %.lr.ph ], [ %395, %.lr.ph.preheader ]
  %848 = phi <2 x half> [ %2020, %.lr.ph ], [ %394, %.lr.ph.preheader ]
  %849 = phi <2 x half> [ %2023, %.lr.ph ], [ %397, %.lr.ph.preheader ]
  %850 = phi <2 x half> [ %2022, %.lr.ph ], [ %396, %.lr.ph.preheader ]
  %851 = phi <2 x half> [ %2025, %.lr.ph ], [ %399, %.lr.ph.preheader ]
  %852 = phi <2 x half> [ %2024, %.lr.ph ], [ %398, %.lr.ph.preheader ]
  %853 = phi <2 x half> [ %2027, %.lr.ph ], [ %401, %.lr.ph.preheader ]
  %854 = phi <2 x half> [ %2026, %.lr.ph ], [ %400, %.lr.ph.preheader ]
  %855 = phi <2 x half> [ %2029, %.lr.ph ], [ %403, %.lr.ph.preheader ]
  %856 = phi <2 x half> [ %2028, %.lr.ph ], [ %402, %.lr.ph.preheader ]
  %857 = phi <2 x half> [ %2031, %.lr.ph ], [ %405, %.lr.ph.preheader ]
  %858 = phi <2 x half> [ %2030, %.lr.ph ], [ %404, %.lr.ph.preheader ]
  %859 = phi <2 x half> [ %2033, %.lr.ph ], [ %407, %.lr.ph.preheader ]
  %860 = phi <2 x half> [ %2032, %.lr.ph ], [ %406, %.lr.ph.preheader ]
  %861 = phi <2 x half> [ %2035, %.lr.ph ], [ %409, %.lr.ph.preheader ]
  %862 = phi <2 x half> [ %2034, %.lr.ph ], [ %408, %.lr.ph.preheader ]
  %863 = phi <2 x half> [ %2037, %.lr.ph ], [ %411, %.lr.ph.preheader ]
  %864 = phi <2 x half> [ %2036, %.lr.ph ], [ %410, %.lr.ph.preheader ]
  %865 = phi <2 x half> [ %2039, %.lr.ph ], [ %413, %.lr.ph.preheader ]
  %866 = phi <2 x half> [ %2038, %.lr.ph ], [ %412, %.lr.ph.preheader ]
  %867 = phi <2 x half> [ %2041, %.lr.ph ], [ %415, %.lr.ph.preheader ]
  %868 = phi <2 x half> [ %2040, %.lr.ph ], [ %414, %.lr.ph.preheader ]
  %869 = phi <2 x half> [ %2043, %.lr.ph ], [ %417, %.lr.ph.preheader ]
  %870 = phi <2 x half> [ %2042, %.lr.ph ], [ %416, %.lr.ph.preheader ]
  %871 = phi <2 x half> [ %2045, %.lr.ph ], [ %419, %.lr.ph.preheader ]
  %872 = phi <2 x half> [ %2044, %.lr.ph ], [ %418, %.lr.ph.preheader ]
  %873 = phi <2 x half> [ %2047, %.lr.ph ], [ %421, %.lr.ph.preheader ]
  %874 = phi <2 x half> [ %2046, %.lr.ph ], [ %420, %.lr.ph.preheader ]
  %875 = phi <2 x half> [ %2049, %.lr.ph ], [ %423, %.lr.ph.preheader ]
  %876 = phi <2 x half> [ %2048, %.lr.ph ], [ %422, %.lr.ph.preheader ]
  %877 = phi <2 x half> [ %2051, %.lr.ph ], [ %425, %.lr.ph.preheader ]
  %878 = phi <2 x half> [ %2050, %.lr.ph ], [ %424, %.lr.ph.preheader ]
  %879 = phi <2 x half> [ %2053, %.lr.ph ], [ %427, %.lr.ph.preheader ]
  %880 = phi <2 x half> [ %2052, %.lr.ph ], [ %426, %.lr.ph.preheader ]
  %881 = phi <2 x half> [ %2055, %.lr.ph ], [ %429, %.lr.ph.preheader ]
  %882 = phi <2 x half> [ %2054, %.lr.ph ], [ %428, %.lr.ph.preheader ]
  %883 = phi <2 x half> [ %2057, %.lr.ph ], [ %431, %.lr.ph.preheader ]
  %884 = phi <2 x half> [ %2056, %.lr.ph ], [ %430, %.lr.ph.preheader ]
  %885 = phi <2 x half> [ %2059, %.lr.ph ], [ %433, %.lr.ph.preheader ]
  %886 = phi <2 x half> [ %2058, %.lr.ph ], [ %432, %.lr.ph.preheader ]
  %887 = phi <2 x half> [ %2061, %.lr.ph ], [ %435, %.lr.ph.preheader ]
  %888 = phi <2 x half> [ %2060, %.lr.ph ], [ %434, %.lr.ph.preheader ]
  %889 = phi <2 x half> [ %2063, %.lr.ph ], [ %437, %.lr.ph.preheader ]
  %890 = phi <2 x half> [ %2062, %.lr.ph ], [ %436, %.lr.ph.preheader ]
  %891 = phi <2 x half> [ %2065, %.lr.ph ], [ %439, %.lr.ph.preheader ]
  %892 = phi <2 x half> [ %2064, %.lr.ph ], [ %438, %.lr.ph.preheader ]
  %893 = phi <2 x half> [ %2067, %.lr.ph ], [ %441, %.lr.ph.preheader ]
  %894 = phi <2 x half> [ %2066, %.lr.ph ], [ %440, %.lr.ph.preheader ]
  %895 = phi <2 x half> [ %2069, %.lr.ph ], [ %443, %.lr.ph.preheader ]
  %896 = phi <2 x half> [ %2068, %.lr.ph ], [ %442, %.lr.ph.preheader ]
  %897 = phi <2 x half> [ %2071, %.lr.ph ], [ %445, %.lr.ph.preheader ]
  %898 = phi <2 x half> [ %2070, %.lr.ph ], [ %444, %.lr.ph.preheader ]
  %899 = phi <2 x half> [ %2073, %.lr.ph ], [ %447, %.lr.ph.preheader ]
  %900 = phi <2 x half> [ %2072, %.lr.ph ], [ %446, %.lr.ph.preheader ]
  %901 = phi <2 x half> [ %2075, %.lr.ph ], [ %449, %.lr.ph.preheader ]
  %902 = phi <2 x half> [ %2074, %.lr.ph ], [ %448, %.lr.ph.preheader ]
  %903 = phi <2 x half> [ %2077, %.lr.ph ], [ %451, %.lr.ph.preheader ]
  %904 = phi <2 x half> [ %2076, %.lr.ph ], [ %450, %.lr.ph.preheader ]
  %905 = phi <2 x half> [ %2079, %.lr.ph ], [ %453, %.lr.ph.preheader ]
  %906 = phi <2 x half> [ %2078, %.lr.ph ], [ %452, %.lr.ph.preheader ]
  %907 = phi <2 x half> [ %2081, %.lr.ph ], [ %455, %.lr.ph.preheader ]
  %908 = phi <2 x half> [ %2080, %.lr.ph ], [ %454, %.lr.ph.preheader ]
  %909 = phi <2 x half> [ %2083, %.lr.ph ], [ %457, %.lr.ph.preheader ]
  %910 = phi <2 x half> [ %2082, %.lr.ph ], [ %456, %.lr.ph.preheader ]
  %911 = phi <2 x half> [ %2085, %.lr.ph ], [ %459, %.lr.ph.preheader ]
  %912 = phi <2 x half> [ %2084, %.lr.ph ], [ %458, %.lr.ph.preheader ]
  %913 = phi <2 x half> [ %2087, %.lr.ph ], [ %461, %.lr.ph.preheader ]
  %914 = phi <2 x half> [ %2086, %.lr.ph ], [ %460, %.lr.ph.preheader ]
  %915 = phi <2 x half> [ %2119, %.lr.ph ], [ %493, %.lr.ph.preheader ]
  %916 = phi <2 x half> [ %2151, %.lr.ph ], [ %525, %.lr.ph.preheader ]
  %917 = phi <2 x half> [ %2150, %.lr.ph ], [ %524, %.lr.ph.preheader ]
  %918 = phi <2 x half> [ %2118, %.lr.ph ], [ %492, %.lr.ph.preheader ]
  %919 = phi <2 x half> [ %2117, %.lr.ph ], [ %491, %.lr.ph.preheader ]
  %920 = phi <2 x half> [ %2149, %.lr.ph ], [ %523, %.lr.ph.preheader ]
  %921 = phi <2 x half> [ %2148, %.lr.ph ], [ %522, %.lr.ph.preheader ]
  %922 = phi <2 x half> [ %2116, %.lr.ph ], [ %490, %.lr.ph.preheader ]
  %923 = phi <2 x half> [ %2115, %.lr.ph ], [ %489, %.lr.ph.preheader ]
  %924 = phi <2 x half> [ %2147, %.lr.ph ], [ %521, %.lr.ph.preheader ]
  %925 = phi <2 x half> [ %2146, %.lr.ph ], [ %520, %.lr.ph.preheader ]
  %926 = phi <2 x half> [ %2114, %.lr.ph ], [ %488, %.lr.ph.preheader ]
  %927 = phi <2 x half> [ %2113, %.lr.ph ], [ %487, %.lr.ph.preheader ]
  %928 = phi <2 x half> [ %2145, %.lr.ph ], [ %519, %.lr.ph.preheader ]
  %929 = phi <2 x half> [ %2144, %.lr.ph ], [ %518, %.lr.ph.preheader ]
  %930 = phi <2 x half> [ %2112, %.lr.ph ], [ %486, %.lr.ph.preheader ]
  %931 = phi <2 x half> [ %2111, %.lr.ph ], [ %485, %.lr.ph.preheader ]
  %932 = phi <2 x half> [ %2143, %.lr.ph ], [ %517, %.lr.ph.preheader ]
  %933 = phi <2 x half> [ %2142, %.lr.ph ], [ %516, %.lr.ph.preheader ]
  %934 = phi <2 x half> [ %2110, %.lr.ph ], [ %484, %.lr.ph.preheader ]
  %935 = phi <2 x half> [ %2109, %.lr.ph ], [ %483, %.lr.ph.preheader ]
  %936 = phi <2 x half> [ %2141, %.lr.ph ], [ %515, %.lr.ph.preheader ]
  %937 = phi <2 x half> [ %2140, %.lr.ph ], [ %514, %.lr.ph.preheader ]
  %938 = phi <2 x half> [ %2108, %.lr.ph ], [ %482, %.lr.ph.preheader ]
  %939 = phi <2 x half> [ %2107, %.lr.ph ], [ %481, %.lr.ph.preheader ]
  %940 = phi <2 x half> [ %2139, %.lr.ph ], [ %513, %.lr.ph.preheader ]
  %941 = phi <2 x half> [ %2138, %.lr.ph ], [ %512, %.lr.ph.preheader ]
  %942 = phi <2 x half> [ %2106, %.lr.ph ], [ %480, %.lr.ph.preheader ]
  %943 = phi <2 x half> [ %2105, %.lr.ph ], [ %479, %.lr.ph.preheader ]
  %944 = phi <2 x half> [ %2137, %.lr.ph ], [ %511, %.lr.ph.preheader ]
  %945 = phi <2 x half> [ %2136, %.lr.ph ], [ %510, %.lr.ph.preheader ]
  %946 = phi <2 x half> [ %2104, %.lr.ph ], [ %478, %.lr.ph.preheader ]
  %947 = phi <2 x half> [ %2103, %.lr.ph ], [ %477, %.lr.ph.preheader ]
  %948 = phi <2 x half> [ %2135, %.lr.ph ], [ %509, %.lr.ph.preheader ]
  %949 = phi <2 x half> [ %2134, %.lr.ph ], [ %508, %.lr.ph.preheader ]
  %950 = phi <2 x half> [ %2102, %.lr.ph ], [ %476, %.lr.ph.preheader ]
  %951 = phi <2 x half> [ %2101, %.lr.ph ], [ %475, %.lr.ph.preheader ]
  %952 = phi <2 x half> [ %2133, %.lr.ph ], [ %507, %.lr.ph.preheader ]
  %953 = phi <2 x half> [ %2132, %.lr.ph ], [ %506, %.lr.ph.preheader ]
  %954 = phi <2 x half> [ %2100, %.lr.ph ], [ %474, %.lr.ph.preheader ]
  %955 = phi <2 x half> [ %2099, %.lr.ph ], [ %473, %.lr.ph.preheader ]
  %956 = phi <2 x half> [ %2131, %.lr.ph ], [ %505, %.lr.ph.preheader ]
  %957 = phi <2 x half> [ %2130, %.lr.ph ], [ %504, %.lr.ph.preheader ]
  %958 = phi <2 x half> [ %2098, %.lr.ph ], [ %472, %.lr.ph.preheader ]
  %959 = phi <2 x half> [ %2097, %.lr.ph ], [ %471, %.lr.ph.preheader ]
  %960 = phi <2 x half> [ %2129, %.lr.ph ], [ %503, %.lr.ph.preheader ]
  %961 = phi <2 x half> [ %2128, %.lr.ph ], [ %502, %.lr.ph.preheader ]
  %962 = phi <2 x half> [ %2096, %.lr.ph ], [ %470, %.lr.ph.preheader ]
  %963 = phi <2 x half> [ %2095, %.lr.ph ], [ %469, %.lr.ph.preheader ]
  %964 = phi <2 x half> [ %2127, %.lr.ph ], [ %501, %.lr.ph.preheader ]
  %965 = phi <2 x half> [ %2126, %.lr.ph ], [ %500, %.lr.ph.preheader ]
  %966 = phi <2 x half> [ %2094, %.lr.ph ], [ %468, %.lr.ph.preheader ]
  %967 = phi <2 x half> [ %2093, %.lr.ph ], [ %467, %.lr.ph.preheader ]
  %968 = phi <2 x half> [ %2125, %.lr.ph ], [ %499, %.lr.ph.preheader ]
  %969 = phi <2 x half> [ %2124, %.lr.ph ], [ %498, %.lr.ph.preheader ]
  %970 = phi <2 x half> [ %2092, %.lr.ph ], [ %466, %.lr.ph.preheader ]
  %971 = phi <2 x half> [ %2091, %.lr.ph ], [ %465, %.lr.ph.preheader ]
  %972 = phi <2 x half> [ %2123, %.lr.ph ], [ %497, %.lr.ph.preheader ]
  %973 = phi <2 x half> [ %2122, %.lr.ph ], [ %496, %.lr.ph.preheader ]
  %974 = phi <2 x half> [ %2090, %.lr.ph ], [ %464, %.lr.ph.preheader ]
  %975 = phi <2 x half> [ %2089, %.lr.ph ], [ %463, %.lr.ph.preheader ]
  %976 = phi <2 x half> [ %2121, %.lr.ph ], [ %495, %.lr.ph.preheader ]
  %977 = phi <2 x half> [ %2120, %.lr.ph ], [ %494, %.lr.ph.preheader ]
  %978 = phi <2 x half> [ %2088, %.lr.ph ], [ %462, %.lr.ph.preheader ]
  %979 = getelementptr i8, ptr addrspace(1) %529, i64 128, !dbg !32
  %980 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %979, i16 0, i32 2147483646, i32 159744), !dbg !36
  %981 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %68, i32 0, i32 0), !dbg !36
  %982 = bitcast <4 x i32> %981 to <8 x half>, !dbg !36
  %983 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %71, i32 0, i32 0), !dbg !36
  %984 = bitcast <4 x i32> %983 to <8 x half>, !dbg !36
  %985 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %74, i32 0, i32 0), !dbg !36
  %986 = bitcast <4 x i32> %985 to <8 x half>, !dbg !36
  %987 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %77, i32 0, i32 0), !dbg !36
  %988 = bitcast <4 x i32> %987 to <8 x half>, !dbg !36
  %989 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %80, i32 0, i32 0), !dbg !36
  %990 = bitcast <4 x i32> %989 to <8 x half>, !dbg !36
  %991 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %83, i32 0, i32 0), !dbg !36
  %992 = bitcast <4 x i32> %991 to <8 x half>, !dbg !36
  %993 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %86, i32 0, i32 0), !dbg !36
  %994 = bitcast <4 x i32> %993 to <8 x half>, !dbg !36
  %995 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %980, i32 %89, i32 0, i32 0), !dbg !36
  %996 = bitcast <4 x i32> %995 to <8 x half>, !dbg !36
  %997 = getelementptr i8, ptr addrspace(1) %528, i64 128, !dbg !39
  fence syncscope("workgroup") release, !dbg !36
  tail call void @llvm.amdgcn.s.barrier(), !dbg !36
  fence syncscope("workgroup") acquire, !dbg !36
  %998 = shufflevector <2 x half> %978, <2 x half> %977, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %999 = shufflevector <2 x half> %976, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1000 = shufflevector <8 x half> %998, <8 x half> %999, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1001 = shufflevector <2 x half> %975, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1002 = shufflevector <8 x half> %1000, <8 x half> %1001, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1002, ptr addrspace(3) %199, align 16, !dbg !36
  %1003 = shufflevector <2 x half> %974, <2 x half> %973, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1004 = shufflevector <2 x half> %972, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1005 = shufflevector <8 x half> %1003, <8 x half> %1004, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1006 = shufflevector <2 x half> %971, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1007 = shufflevector <8 x half> %1005, <8 x half> %1006, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1007, ptr addrspace(3) %201, align 16, !dbg !36
  %1008 = shufflevector <2 x half> %970, <2 x half> %969, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1009 = shufflevector <2 x half> %968, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1010 = shufflevector <8 x half> %1008, <8 x half> %1009, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1011 = shufflevector <2 x half> %967, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1012 = shufflevector <8 x half> %1010, <8 x half> %1011, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1012, ptr addrspace(3) %203, align 16, !dbg !36
  %1013 = shufflevector <2 x half> %966, <2 x half> %965, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1014 = shufflevector <2 x half> %964, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1015 = shufflevector <8 x half> %1013, <8 x half> %1014, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1016 = shufflevector <2 x half> %963, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1017 = shufflevector <8 x half> %1015, <8 x half> %1016, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1017, ptr addrspace(3) %205, align 16, !dbg !36
  %1018 = shufflevector <2 x half> %962, <2 x half> %961, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1019 = shufflevector <2 x half> %960, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1020 = shufflevector <8 x half> %1018, <8 x half> %1019, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1021 = shufflevector <2 x half> %959, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1022 = shufflevector <8 x half> %1020, <8 x half> %1021, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1022, ptr addrspace(3) %207, align 16, !dbg !36
  %1023 = shufflevector <2 x half> %958, <2 x half> %957, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1024 = shufflevector <2 x half> %956, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1025 = shufflevector <8 x half> %1023, <8 x half> %1024, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1026 = shufflevector <2 x half> %955, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1027 = shufflevector <8 x half> %1025, <8 x half> %1026, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1027, ptr addrspace(3) %209, align 16, !dbg !36
  %1028 = shufflevector <2 x half> %954, <2 x half> %953, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1029 = shufflevector <2 x half> %952, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1030 = shufflevector <8 x half> %1028, <8 x half> %1029, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1031 = shufflevector <2 x half> %951, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1032 = shufflevector <8 x half> %1030, <8 x half> %1031, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1032, ptr addrspace(3) %211, align 16, !dbg !36
  %1033 = shufflevector <2 x half> %950, <2 x half> %949, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1034 = shufflevector <2 x half> %948, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1035 = shufflevector <8 x half> %1033, <8 x half> %1034, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %1036 = shufflevector <2 x half> %947, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %1037 = shufflevector <8 x half> %1035, <8 x half> %1036, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %1037, ptr addrspace(3) %213, align 16, !dbg !36
  %1038 = shufflevector <2 x half> %946, <2 x half> %945, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1039 = shufflevector <2 x half> %944, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1040 = shufflevector <8 x half> %1038, <8 x half> %1039, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1041 = shufflevector <2 x half> %943, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1042 = shufflevector <8 x half> %1040, <8 x half> %1041, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1042, ptr addrspace(3) %214, align 16, !dbg !40
  %1043 = shufflevector <2 x half> %942, <2 x half> %941, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1044 = shufflevector <2 x half> %940, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1045 = shufflevector <8 x half> %1043, <8 x half> %1044, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1046 = shufflevector <2 x half> %939, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1047 = shufflevector <8 x half> %1045, <8 x half> %1046, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1047, ptr addrspace(3) %215, align 16, !dbg !40
  %1048 = shufflevector <2 x half> %938, <2 x half> %937, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1049 = shufflevector <2 x half> %936, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1050 = shufflevector <8 x half> %1048, <8 x half> %1049, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1051 = shufflevector <2 x half> %935, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1052 = shufflevector <8 x half> %1050, <8 x half> %1051, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1052, ptr addrspace(3) %216, align 16, !dbg !40
  %1053 = shufflevector <2 x half> %934, <2 x half> %933, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1054 = shufflevector <2 x half> %932, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1055 = shufflevector <8 x half> %1053, <8 x half> %1054, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1056 = shufflevector <2 x half> %931, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1057 = shufflevector <8 x half> %1055, <8 x half> %1056, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1057, ptr addrspace(3) %217, align 16, !dbg !40
  %1058 = shufflevector <2 x half> %930, <2 x half> %929, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1059 = shufflevector <2 x half> %928, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1060 = shufflevector <8 x half> %1058, <8 x half> %1059, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1061 = shufflevector <2 x half> %927, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1062 = shufflevector <8 x half> %1060, <8 x half> %1061, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1062, ptr addrspace(3) %218, align 16, !dbg !40
  %1063 = shufflevector <2 x half> %926, <2 x half> %925, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1064 = shufflevector <2 x half> %924, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1065 = shufflevector <8 x half> %1063, <8 x half> %1064, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1066 = shufflevector <2 x half> %923, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1067 = shufflevector <8 x half> %1065, <8 x half> %1066, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1067, ptr addrspace(3) %219, align 16, !dbg !40
  %1068 = shufflevector <2 x half> %922, <2 x half> %921, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1069 = shufflevector <2 x half> %920, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1070 = shufflevector <8 x half> %1068, <8 x half> %1069, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1071 = shufflevector <2 x half> %919, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1072 = shufflevector <8 x half> %1070, <8 x half> %1071, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1072, ptr addrspace(3) %220, align 16, !dbg !40
  %1073 = shufflevector <2 x half> %918, <2 x half> %917, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1074 = shufflevector <2 x half> %916, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1075 = shufflevector <8 x half> %1073, <8 x half> %1074, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %1076 = shufflevector <2 x half> %915, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %1077 = shufflevector <8 x half> %1075, <8 x half> %1076, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %1077, ptr addrspace(3) %221, align 16, !dbg !40
  %1078 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %997, i16 0, i32 2147483646, i32 159744), !dbg !40
  %1079 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %140, i32 0, i32 0), !dbg !40
  %1080 = bitcast <4 x i32> %1079 to <8 x half>, !dbg !40
  %1081 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %143, i32 0, i32 0), !dbg !40
  %1082 = bitcast <4 x i32> %1081 to <8 x half>, !dbg !40
  %1083 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %146, i32 0, i32 0), !dbg !40
  %1084 = bitcast <4 x i32> %1083 to <8 x half>, !dbg !40
  %1085 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %149, i32 0, i32 0), !dbg !40
  %1086 = bitcast <4 x i32> %1085 to <8 x half>, !dbg !40
  %1087 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %152, i32 0, i32 0), !dbg !40
  %1088 = bitcast <4 x i32> %1087 to <8 x half>, !dbg !40
  %1089 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %155, i32 0, i32 0), !dbg !40
  %1090 = bitcast <4 x i32> %1089 to <8 x half>, !dbg !40
  %1091 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %158, i32 0, i32 0), !dbg !40
  %1092 = bitcast <4 x i32> %1091 to <8 x half>, !dbg !40
  %1093 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %1078, i32 %161, i32 0, i32 0), !dbg !40
  %1094 = bitcast <4 x i32> %1093 to <8 x half>, !dbg !40
  %1095 = shufflevector <2 x half> %914, <2 x half> %913, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1096 = shufflevector <2 x half> %912, <2 x half> %911, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1097 = shufflevector <2 x half> %910, <2 x half> %909, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1098 = shufflevector <2 x half> %908, <2 x half> %907, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1099 = shufflevector <2 x half> %906, <2 x half> %905, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1100 = shufflevector <2 x half> %904, <2 x half> %903, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1101 = shufflevector <2 x half> %902, <2 x half> %901, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1102 = shufflevector <2 x half> %900, <2 x half> %899, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1103 = shufflevector <2 x half> %898, <2 x half> %897, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1104 = shufflevector <2 x half> %896, <2 x half> %895, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1105 = shufflevector <2 x half> %894, <2 x half> %893, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1106 = shufflevector <2 x half> %892, <2 x half> %891, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1107 = shufflevector <2 x half> %890, <2 x half> %889, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1108 = shufflevector <2 x half> %888, <2 x half> %887, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1109 = shufflevector <2 x half> %886, <2 x half> %885, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1110 = shufflevector <2 x half> %884, <2 x half> %883, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1111 = shufflevector <2 x half> %882, <2 x half> %881, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1112 = shufflevector <2 x half> %880, <2 x half> %879, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1113 = shufflevector <2 x half> %878, <2 x half> %877, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1114 = shufflevector <2 x half> %876, <2 x half> %875, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1115 = shufflevector <2 x half> %874, <2 x half> %873, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1116 = shufflevector <2 x half> %872, <2 x half> %871, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1117 = shufflevector <2 x half> %870, <2 x half> %869, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1118 = shufflevector <2 x half> %868, <2 x half> %867, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1119 = shufflevector <2 x half> %866, <2 x half> %865, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1120 = shufflevector <2 x half> %864, <2 x half> %863, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1121 = shufflevector <2 x half> %862, <2 x half> %861, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1122 = shufflevector <2 x half> %860, <2 x half> %859, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1123 = shufflevector <2 x half> %858, <2 x half> %857, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1124 = shufflevector <2 x half> %856, <2 x half> %855, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1125 = shufflevector <2 x half> %854, <2 x half> %853, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1126 = shufflevector <2 x half> %852, <2 x half> %851, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1127 = shufflevector <2 x half> %850, <2 x half> %849, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1128 = shufflevector <2 x half> %848, <2 x half> %847, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1129 = shufflevector <2 x half> %846, <2 x half> %845, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1130 = shufflevector <2 x half> %844, <2 x half> %843, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1131 = shufflevector <2 x half> %842, <2 x half> %841, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1132 = shufflevector <2 x half> %840, <2 x half> %839, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1133 = shufflevector <2 x half> %838, <2 x half> %837, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1134 = shufflevector <2 x half> %836, <2 x half> %835, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1135 = shufflevector <2 x half> %834, <2 x half> %833, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1136 = shufflevector <2 x half> %832, <2 x half> %831, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1137 = shufflevector <2 x half> %830, <2 x half> %829, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1138 = shufflevector <2 x half> %828, <2 x half> %827, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1139 = shufflevector <2 x half> %826, <2 x half> %825, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1140 = shufflevector <2 x half> %824, <2 x half> %823, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1141 = shufflevector <2 x half> %822, <2 x half> %821, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1142 = shufflevector <2 x half> %820, <2 x half> %819, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1143 = shufflevector <2 x half> %818, <2 x half> %817, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1144 = shufflevector <2 x half> %816, <2 x half> %815, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1145 = shufflevector <2 x half> %814, <2 x half> %813, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1146 = shufflevector <2 x half> %812, <2 x half> %811, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1147 = shufflevector <2 x half> %810, <2 x half> %809, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1148 = shufflevector <2 x half> %808, <2 x half> %807, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1149 = shufflevector <2 x half> %806, <2 x half> %805, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1150 = shufflevector <2 x half> %804, <2 x half> %803, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1151 = shufflevector <2 x half> %802, <2 x half> %801, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1152 = shufflevector <2 x half> %800, <2 x half> %799, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1153 = shufflevector <2 x half> %798, <2 x half> %797, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1154 = shufflevector <2 x half> %796, <2 x half> %795, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1155 = shufflevector <2 x half> %794, <2 x half> %793, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1156 = shufflevector <2 x half> %792, <2 x half> %791, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1157 = shufflevector <2 x half> %790, <2 x half> %789, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1158 = shufflevector <2 x half> %788, <2 x half> %787, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1159 = insertelement <4 x float> poison, float %530, i64 0, !dbg !54
  %1160 = insertelement <4 x float> %1159, float %531, i64 1, !dbg !54
  %1161 = insertelement <4 x float> %1160, float %532, i64 2, !dbg !54
  %1162 = insertelement <4 x float> %1161, float %533, i64 3, !dbg !54
  %1163 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1095, <4 x float> %1162, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1164 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1096, <4 x float> %1163, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1165 = insertelement <4 x float> poison, float %534, i64 0, !dbg !54
  %1166 = insertelement <4 x float> %1165, float %535, i64 1, !dbg !54
  %1167 = insertelement <4 x float> %1166, float %536, i64 2, !dbg !54
  %1168 = insertelement <4 x float> %1167, float %537, i64 3, !dbg !54
  %1169 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1095, <4 x float> %1168, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1170 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1096, <4 x float> %1169, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1171 = insertelement <4 x float> poison, float %562, i64 0, !dbg !54
  %1172 = insertelement <4 x float> %1171, float %563, i64 1, !dbg !54
  %1173 = insertelement <4 x float> %1172, float %564, i64 2, !dbg !54
  %1174 = insertelement <4 x float> %1173, float %565, i64 3, !dbg !54
  %1175 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1099, <4 x float> %1174, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1176 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1100, <4 x float> %1175, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1177 = insertelement <4 x float> poison, float %566, i64 0, !dbg !54
  %1178 = insertelement <4 x float> %1177, float %567, i64 1, !dbg !54
  %1179 = insertelement <4 x float> %1178, float %568, i64 2, !dbg !54
  %1180 = insertelement <4 x float> %1179, float %569, i64 3, !dbg !54
  %1181 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1099, <4 x float> %1180, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1182 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1100, <4 x float> %1181, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1183 = insertelement <4 x float> poison, float %538, i64 0, !dbg !54
  %1184 = insertelement <4 x float> %1183, float %539, i64 1, !dbg !54
  %1185 = insertelement <4 x float> %1184, float %540, i64 2, !dbg !54
  %1186 = insertelement <4 x float> %1185, float %541, i64 3, !dbg !54
  %1187 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1095, <4 x float> %1186, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1188 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1096, <4 x float> %1187, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1189 = insertelement <4 x float> poison, float %542, i64 0, !dbg !54
  %1190 = insertelement <4 x float> %1189, float %543, i64 1, !dbg !54
  %1191 = insertelement <4 x float> %1190, float %544, i64 2, !dbg !54
  %1192 = insertelement <4 x float> %1191, float %545, i64 3, !dbg !54
  %1193 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1095, <4 x float> %1192, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1194 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1096, <4 x float> %1193, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1195 = insertelement <4 x float> poison, float %570, i64 0, !dbg !54
  %1196 = insertelement <4 x float> %1195, float %571, i64 1, !dbg !54
  %1197 = insertelement <4 x float> %1196, float %572, i64 2, !dbg !54
  %1198 = insertelement <4 x float> %1197, float %573, i64 3, !dbg !54
  %1199 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1099, <4 x float> %1198, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1200 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1100, <4 x float> %1199, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1201 = insertelement <4 x float> poison, float %574, i64 0, !dbg !54
  %1202 = insertelement <4 x float> %1201, float %575, i64 1, !dbg !54
  %1203 = insertelement <4 x float> %1202, float %576, i64 2, !dbg !54
  %1204 = insertelement <4 x float> %1203, float %577, i64 3, !dbg !54
  %1205 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1099, <4 x float> %1204, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1206 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1100, <4 x float> %1205, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1207 = insertelement <4 x float> poison, float %546, i64 0, !dbg !54
  %1208 = insertelement <4 x float> %1207, float %547, i64 1, !dbg !54
  %1209 = insertelement <4 x float> %1208, float %548, i64 2, !dbg !54
  %1210 = insertelement <4 x float> %1209, float %549, i64 3, !dbg !54
  %1211 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1095, <4 x float> %1210, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1212 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1096, <4 x float> %1211, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1213 = insertelement <4 x float> poison, float %550, i64 0, !dbg !54
  %1214 = insertelement <4 x float> %1213, float %551, i64 1, !dbg !54
  %1215 = insertelement <4 x float> %1214, float %552, i64 2, !dbg !54
  %1216 = insertelement <4 x float> %1215, float %553, i64 3, !dbg !54
  %1217 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1095, <4 x float> %1216, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1218 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1096, <4 x float> %1217, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1219 = insertelement <4 x float> poison, float %578, i64 0, !dbg !54
  %1220 = insertelement <4 x float> %1219, float %579, i64 1, !dbg !54
  %1221 = insertelement <4 x float> %1220, float %580, i64 2, !dbg !54
  %1222 = insertelement <4 x float> %1221, float %581, i64 3, !dbg !54
  %1223 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1099, <4 x float> %1222, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1224 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1100, <4 x float> %1223, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1225 = insertelement <4 x float> poison, float %582, i64 0, !dbg !54
  %1226 = insertelement <4 x float> %1225, float %583, i64 1, !dbg !54
  %1227 = insertelement <4 x float> %1226, float %584, i64 2, !dbg !54
  %1228 = insertelement <4 x float> %1227, float %585, i64 3, !dbg !54
  %1229 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1099, <4 x float> %1228, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1230 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1100, <4 x float> %1229, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1231 = insertelement <4 x float> poison, float %554, i64 0, !dbg !54
  %1232 = insertelement <4 x float> %1231, float %555, i64 1, !dbg !54
  %1233 = insertelement <4 x float> %1232, float %556, i64 2, !dbg !54
  %1234 = insertelement <4 x float> %1233, float %557, i64 3, !dbg !54
  %1235 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1095, <4 x float> %1234, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1236 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1096, <4 x float> %1235, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1237 = insertelement <4 x float> poison, float %558, i64 0, !dbg !54
  %1238 = insertelement <4 x float> %1237, float %559, i64 1, !dbg !54
  %1239 = insertelement <4 x float> %1238, float %560, i64 2, !dbg !54
  %1240 = insertelement <4 x float> %1239, float %561, i64 3, !dbg !54
  %1241 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1095, <4 x float> %1240, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1242 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1096, <4 x float> %1241, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1243 = insertelement <4 x float> poison, float %586, i64 0, !dbg !54
  %1244 = insertelement <4 x float> %1243, float %587, i64 1, !dbg !54
  %1245 = insertelement <4 x float> %1244, float %588, i64 2, !dbg !54
  %1246 = insertelement <4 x float> %1245, float %589, i64 3, !dbg !54
  %1247 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1099, <4 x float> %1246, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1248 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1100, <4 x float> %1247, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1249 = insertelement <4 x float> poison, float %590, i64 0, !dbg !54
  %1250 = insertelement <4 x float> %1249, float %591, i64 1, !dbg !54
  %1251 = insertelement <4 x float> %1250, float %592, i64 2, !dbg !54
  %1252 = insertelement <4 x float> %1251, float %593, i64 3, !dbg !54
  %1253 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1099, <4 x float> %1252, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1254 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1100, <4 x float> %1253, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1255 = insertelement <4 x float> poison, float %594, i64 0, !dbg !54
  %1256 = insertelement <4 x float> %1255, float %595, i64 1, !dbg !54
  %1257 = insertelement <4 x float> %1256, float %596, i64 2, !dbg !54
  %1258 = insertelement <4 x float> %1257, float %597, i64 3, !dbg !54
  %1259 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1103, <4 x float> %1258, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1260 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1104, <4 x float> %1259, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1261 = insertelement <4 x float> poison, float %598, i64 0, !dbg !54
  %1262 = insertelement <4 x float> %1261, float %599, i64 1, !dbg !54
  %1263 = insertelement <4 x float> %1262, float %600, i64 2, !dbg !54
  %1264 = insertelement <4 x float> %1263, float %601, i64 3, !dbg !54
  %1265 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1103, <4 x float> %1264, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1266 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1104, <4 x float> %1265, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1267 = insertelement <4 x float> poison, float %626, i64 0, !dbg !54
  %1268 = insertelement <4 x float> %1267, float %627, i64 1, !dbg !54
  %1269 = insertelement <4 x float> %1268, float %628, i64 2, !dbg !54
  %1270 = insertelement <4 x float> %1269, float %629, i64 3, !dbg !54
  %1271 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1107, <4 x float> %1270, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1272 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1108, <4 x float> %1271, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1273 = insertelement <4 x float> poison, float %630, i64 0, !dbg !54
  %1274 = insertelement <4 x float> %1273, float %631, i64 1, !dbg !54
  %1275 = insertelement <4 x float> %1274, float %632, i64 2, !dbg !54
  %1276 = insertelement <4 x float> %1275, float %633, i64 3, !dbg !54
  %1277 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1107, <4 x float> %1276, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1278 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1108, <4 x float> %1277, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1279 = insertelement <4 x float> poison, float %602, i64 0, !dbg !54
  %1280 = insertelement <4 x float> %1279, float %603, i64 1, !dbg !54
  %1281 = insertelement <4 x float> %1280, float %604, i64 2, !dbg !54
  %1282 = insertelement <4 x float> %1281, float %605, i64 3, !dbg !54
  %1283 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1103, <4 x float> %1282, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1284 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1104, <4 x float> %1283, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1285 = insertelement <4 x float> poison, float %606, i64 0, !dbg !54
  %1286 = insertelement <4 x float> %1285, float %607, i64 1, !dbg !54
  %1287 = insertelement <4 x float> %1286, float %608, i64 2, !dbg !54
  %1288 = insertelement <4 x float> %1287, float %609, i64 3, !dbg !54
  %1289 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1103, <4 x float> %1288, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1290 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1104, <4 x float> %1289, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1291 = insertelement <4 x float> poison, float %634, i64 0, !dbg !54
  %1292 = insertelement <4 x float> %1291, float %635, i64 1, !dbg !54
  %1293 = insertelement <4 x float> %1292, float %636, i64 2, !dbg !54
  %1294 = insertelement <4 x float> %1293, float %637, i64 3, !dbg !54
  %1295 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1107, <4 x float> %1294, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1296 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1108, <4 x float> %1295, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1297 = insertelement <4 x float> poison, float %638, i64 0, !dbg !54
  %1298 = insertelement <4 x float> %1297, float %639, i64 1, !dbg !54
  %1299 = insertelement <4 x float> %1298, float %640, i64 2, !dbg !54
  %1300 = insertelement <4 x float> %1299, float %641, i64 3, !dbg !54
  %1301 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1107, <4 x float> %1300, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1302 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1108, <4 x float> %1301, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1303 = insertelement <4 x float> poison, float %610, i64 0, !dbg !54
  %1304 = insertelement <4 x float> %1303, float %611, i64 1, !dbg !54
  %1305 = insertelement <4 x float> %1304, float %612, i64 2, !dbg !54
  %1306 = insertelement <4 x float> %1305, float %613, i64 3, !dbg !54
  %1307 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1103, <4 x float> %1306, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1308 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1104, <4 x float> %1307, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1309 = insertelement <4 x float> poison, float %614, i64 0, !dbg !54
  %1310 = insertelement <4 x float> %1309, float %615, i64 1, !dbg !54
  %1311 = insertelement <4 x float> %1310, float %616, i64 2, !dbg !54
  %1312 = insertelement <4 x float> %1311, float %617, i64 3, !dbg !54
  %1313 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1103, <4 x float> %1312, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1314 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1104, <4 x float> %1313, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1315 = insertelement <4 x float> poison, float %642, i64 0, !dbg !54
  %1316 = insertelement <4 x float> %1315, float %643, i64 1, !dbg !54
  %1317 = insertelement <4 x float> %1316, float %644, i64 2, !dbg !54
  %1318 = insertelement <4 x float> %1317, float %645, i64 3, !dbg !54
  %1319 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1107, <4 x float> %1318, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1320 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1108, <4 x float> %1319, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1321 = insertelement <4 x float> poison, float %646, i64 0, !dbg !54
  %1322 = insertelement <4 x float> %1321, float %647, i64 1, !dbg !54
  %1323 = insertelement <4 x float> %1322, float %648, i64 2, !dbg !54
  %1324 = insertelement <4 x float> %1323, float %649, i64 3, !dbg !54
  %1325 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1107, <4 x float> %1324, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1326 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1108, <4 x float> %1325, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1327 = insertelement <4 x float> poison, float %618, i64 0, !dbg !54
  %1328 = insertelement <4 x float> %1327, float %619, i64 1, !dbg !54
  %1329 = insertelement <4 x float> %1328, float %620, i64 2, !dbg !54
  %1330 = insertelement <4 x float> %1329, float %621, i64 3, !dbg !54
  %1331 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1103, <4 x float> %1330, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1332 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1104, <4 x float> %1331, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1333 = insertelement <4 x float> poison, float %622, i64 0, !dbg !54
  %1334 = insertelement <4 x float> %1333, float %623, i64 1, !dbg !54
  %1335 = insertelement <4 x float> %1334, float %624, i64 2, !dbg !54
  %1336 = insertelement <4 x float> %1335, float %625, i64 3, !dbg !54
  %1337 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1103, <4 x float> %1336, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1338 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1104, <4 x float> %1337, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1339 = insertelement <4 x float> poison, float %650, i64 0, !dbg !54
  %1340 = insertelement <4 x float> %1339, float %651, i64 1, !dbg !54
  %1341 = insertelement <4 x float> %1340, float %652, i64 2, !dbg !54
  %1342 = insertelement <4 x float> %1341, float %653, i64 3, !dbg !54
  %1343 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1107, <4 x float> %1342, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1344 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1108, <4 x float> %1343, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1345 = insertelement <4 x float> poison, float %654, i64 0, !dbg !54
  %1346 = insertelement <4 x float> %1345, float %655, i64 1, !dbg !54
  %1347 = insertelement <4 x float> %1346, float %656, i64 2, !dbg !54
  %1348 = insertelement <4 x float> %1347, float %657, i64 3, !dbg !54
  %1349 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1107, <4 x float> %1348, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1350 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1108, <4 x float> %1349, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1351 = insertelement <4 x float> poison, float %658, i64 0, !dbg !54
  %1352 = insertelement <4 x float> %1351, float %659, i64 1, !dbg !54
  %1353 = insertelement <4 x float> %1352, float %660, i64 2, !dbg !54
  %1354 = insertelement <4 x float> %1353, float %661, i64 3, !dbg !54
  %1355 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1111, <4 x float> %1354, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1356 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1112, <4 x float> %1355, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1357 = insertelement <4 x float> poison, float %662, i64 0, !dbg !54
  %1358 = insertelement <4 x float> %1357, float %663, i64 1, !dbg !54
  %1359 = insertelement <4 x float> %1358, float %664, i64 2, !dbg !54
  %1360 = insertelement <4 x float> %1359, float %665, i64 3, !dbg !54
  %1361 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1111, <4 x float> %1360, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1362 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1112, <4 x float> %1361, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1363 = insertelement <4 x float> poison, float %690, i64 0, !dbg !54
  %1364 = insertelement <4 x float> %1363, float %691, i64 1, !dbg !54
  %1365 = insertelement <4 x float> %1364, float %692, i64 2, !dbg !54
  %1366 = insertelement <4 x float> %1365, float %693, i64 3, !dbg !54
  %1367 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1115, <4 x float> %1366, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1368 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1116, <4 x float> %1367, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1369 = insertelement <4 x float> poison, float %694, i64 0, !dbg !54
  %1370 = insertelement <4 x float> %1369, float %695, i64 1, !dbg !54
  %1371 = insertelement <4 x float> %1370, float %696, i64 2, !dbg !54
  %1372 = insertelement <4 x float> %1371, float %697, i64 3, !dbg !54
  %1373 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1115, <4 x float> %1372, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1374 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1116, <4 x float> %1373, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1375 = insertelement <4 x float> poison, float %666, i64 0, !dbg !54
  %1376 = insertelement <4 x float> %1375, float %667, i64 1, !dbg !54
  %1377 = insertelement <4 x float> %1376, float %668, i64 2, !dbg !54
  %1378 = insertelement <4 x float> %1377, float %669, i64 3, !dbg !54
  %1379 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1111, <4 x float> %1378, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1380 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1112, <4 x float> %1379, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1381 = insertelement <4 x float> poison, float %670, i64 0, !dbg !54
  %1382 = insertelement <4 x float> %1381, float %671, i64 1, !dbg !54
  %1383 = insertelement <4 x float> %1382, float %672, i64 2, !dbg !54
  %1384 = insertelement <4 x float> %1383, float %673, i64 3, !dbg !54
  %1385 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1111, <4 x float> %1384, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1386 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1112, <4 x float> %1385, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1387 = insertelement <4 x float> poison, float %698, i64 0, !dbg !54
  %1388 = insertelement <4 x float> %1387, float %699, i64 1, !dbg !54
  %1389 = insertelement <4 x float> %1388, float %700, i64 2, !dbg !54
  %1390 = insertelement <4 x float> %1389, float %701, i64 3, !dbg !54
  %1391 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1115, <4 x float> %1390, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1392 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1116, <4 x float> %1391, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1393 = insertelement <4 x float> poison, float %702, i64 0, !dbg !54
  %1394 = insertelement <4 x float> %1393, float %703, i64 1, !dbg !54
  %1395 = insertelement <4 x float> %1394, float %704, i64 2, !dbg !54
  %1396 = insertelement <4 x float> %1395, float %705, i64 3, !dbg !54
  %1397 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1115, <4 x float> %1396, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1398 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1116, <4 x float> %1397, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1399 = insertelement <4 x float> poison, float %674, i64 0, !dbg !54
  %1400 = insertelement <4 x float> %1399, float %675, i64 1, !dbg !54
  %1401 = insertelement <4 x float> %1400, float %676, i64 2, !dbg !54
  %1402 = insertelement <4 x float> %1401, float %677, i64 3, !dbg !54
  %1403 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1111, <4 x float> %1402, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1404 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1112, <4 x float> %1403, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1405 = insertelement <4 x float> poison, float %678, i64 0, !dbg !54
  %1406 = insertelement <4 x float> %1405, float %679, i64 1, !dbg !54
  %1407 = insertelement <4 x float> %1406, float %680, i64 2, !dbg !54
  %1408 = insertelement <4 x float> %1407, float %681, i64 3, !dbg !54
  %1409 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1111, <4 x float> %1408, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1410 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1112, <4 x float> %1409, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1411 = insertelement <4 x float> poison, float %706, i64 0, !dbg !54
  %1412 = insertelement <4 x float> %1411, float %707, i64 1, !dbg !54
  %1413 = insertelement <4 x float> %1412, float %708, i64 2, !dbg !54
  %1414 = insertelement <4 x float> %1413, float %709, i64 3, !dbg !54
  %1415 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1115, <4 x float> %1414, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1416 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1116, <4 x float> %1415, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1417 = insertelement <4 x float> poison, float %710, i64 0, !dbg !54
  %1418 = insertelement <4 x float> %1417, float %711, i64 1, !dbg !54
  %1419 = insertelement <4 x float> %1418, float %712, i64 2, !dbg !54
  %1420 = insertelement <4 x float> %1419, float %713, i64 3, !dbg !54
  %1421 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1115, <4 x float> %1420, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1422 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1116, <4 x float> %1421, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1423 = insertelement <4 x float> poison, float %682, i64 0, !dbg !54
  %1424 = insertelement <4 x float> %1423, float %683, i64 1, !dbg !54
  %1425 = insertelement <4 x float> %1424, float %684, i64 2, !dbg !54
  %1426 = insertelement <4 x float> %1425, float %685, i64 3, !dbg !54
  %1427 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1111, <4 x float> %1426, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1428 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1112, <4 x float> %1427, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1429 = insertelement <4 x float> poison, float %686, i64 0, !dbg !54
  %1430 = insertelement <4 x float> %1429, float %687, i64 1, !dbg !54
  %1431 = insertelement <4 x float> %1430, float %688, i64 2, !dbg !54
  %1432 = insertelement <4 x float> %1431, float %689, i64 3, !dbg !54
  %1433 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1111, <4 x float> %1432, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1434 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1112, <4 x float> %1433, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1435 = insertelement <4 x float> poison, float %714, i64 0, !dbg !54
  %1436 = insertelement <4 x float> %1435, float %715, i64 1, !dbg !54
  %1437 = insertelement <4 x float> %1436, float %716, i64 2, !dbg !54
  %1438 = insertelement <4 x float> %1437, float %717, i64 3, !dbg !54
  %1439 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1115, <4 x float> %1438, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1440 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1116, <4 x float> %1439, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1441 = insertelement <4 x float> poison, float %718, i64 0, !dbg !54
  %1442 = insertelement <4 x float> %1441, float %719, i64 1, !dbg !54
  %1443 = insertelement <4 x float> %1442, float %720, i64 2, !dbg !54
  %1444 = insertelement <4 x float> %1443, float %721, i64 3, !dbg !54
  %1445 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1115, <4 x float> %1444, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1446 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1116, <4 x float> %1445, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1447 = insertelement <4 x float> poison, float %722, i64 0, !dbg !54
  %1448 = insertelement <4 x float> %1447, float %723, i64 1, !dbg !54
  %1449 = insertelement <4 x float> %1448, float %724, i64 2, !dbg !54
  %1450 = insertelement <4 x float> %1449, float %725, i64 3, !dbg !54
  %1451 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1119, <4 x float> %1450, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1452 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1120, <4 x float> %1451, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1453 = insertelement <4 x float> poison, float %726, i64 0, !dbg !54
  %1454 = insertelement <4 x float> %1453, float %727, i64 1, !dbg !54
  %1455 = insertelement <4 x float> %1454, float %728, i64 2, !dbg !54
  %1456 = insertelement <4 x float> %1455, float %729, i64 3, !dbg !54
  %1457 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1119, <4 x float> %1456, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1458 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1120, <4 x float> %1457, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1459 = insertelement <4 x float> poison, float %754, i64 0, !dbg !54
  %1460 = insertelement <4 x float> %1459, float %755, i64 1, !dbg !54
  %1461 = insertelement <4 x float> %1460, float %756, i64 2, !dbg !54
  %1462 = insertelement <4 x float> %1461, float %757, i64 3, !dbg !54
  %1463 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1127, <4 x half> %1123, <4 x float> %1462, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1464 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1128, <4 x half> %1124, <4 x float> %1463, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1465 = insertelement <4 x float> poison, float %758, i64 0, !dbg !54
  %1466 = insertelement <4 x float> %1465, float %759, i64 1, !dbg !54
  %1467 = insertelement <4 x float> %1466, float %760, i64 2, !dbg !54
  %1468 = insertelement <4 x float> %1467, float %761, i64 3, !dbg !54
  %1469 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1131, <4 x half> %1123, <4 x float> %1468, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1470 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1132, <4 x half> %1124, <4 x float> %1469, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1471 = insertelement <4 x float> poison, float %730, i64 0, !dbg !54
  %1472 = insertelement <4 x float> %1471, float %731, i64 1, !dbg !54
  %1473 = insertelement <4 x float> %1472, float %732, i64 2, !dbg !54
  %1474 = insertelement <4 x float> %1473, float %733, i64 3, !dbg !54
  %1475 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1119, <4 x float> %1474, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1476 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1120, <4 x float> %1475, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1477 = insertelement <4 x float> poison, float %734, i64 0, !dbg !54
  %1478 = insertelement <4 x float> %1477, float %735, i64 1, !dbg !54
  %1479 = insertelement <4 x float> %1478, float %736, i64 2, !dbg !54
  %1480 = insertelement <4 x float> %1479, float %737, i64 3, !dbg !54
  %1481 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1119, <4 x float> %1480, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1482 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1120, <4 x float> %1481, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1483 = insertelement <4 x float> poison, float %762, i64 0, !dbg !54
  %1484 = insertelement <4 x float> %1483, float %763, i64 1, !dbg !54
  %1485 = insertelement <4 x float> %1484, float %764, i64 2, !dbg !54
  %1486 = insertelement <4 x float> %1485, float %765, i64 3, !dbg !54
  %1487 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1135, <4 x half> %1123, <4 x float> %1486, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1488 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1136, <4 x half> %1124, <4 x float> %1487, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1489 = insertelement <4 x float> poison, float %766, i64 0, !dbg !54
  %1490 = insertelement <4 x float> %1489, float %767, i64 1, !dbg !54
  %1491 = insertelement <4 x float> %1490, float %768, i64 2, !dbg !54
  %1492 = insertelement <4 x float> %1491, float %769, i64 3, !dbg !54
  %1493 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1139, <4 x half> %1123, <4 x float> %1492, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1494 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1140, <4 x half> %1124, <4 x float> %1493, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1495 = insertelement <4 x float> poison, float %738, i64 0, !dbg !54
  %1496 = insertelement <4 x float> %1495, float %739, i64 1, !dbg !54
  %1497 = insertelement <4 x float> %1496, float %740, i64 2, !dbg !54
  %1498 = insertelement <4 x float> %1497, float %741, i64 3, !dbg !54
  %1499 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1119, <4 x float> %1498, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1500 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1120, <4 x float> %1499, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1501 = insertelement <4 x float> poison, float %742, i64 0, !dbg !54
  %1502 = insertelement <4 x float> %1501, float %743, i64 1, !dbg !54
  %1503 = insertelement <4 x float> %1502, float %744, i64 2, !dbg !54
  %1504 = insertelement <4 x float> %1503, float %745, i64 3, !dbg !54
  %1505 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1119, <4 x float> %1504, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1506 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1120, <4 x float> %1505, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1507 = insertelement <4 x float> poison, float %770, i64 0, !dbg !54
  %1508 = insertelement <4 x float> %1507, float %771, i64 1, !dbg !54
  %1509 = insertelement <4 x float> %1508, float %772, i64 2, !dbg !54
  %1510 = insertelement <4 x float> %1509, float %773, i64 3, !dbg !54
  %1511 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1143, <4 x half> %1123, <4 x float> %1510, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1512 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1144, <4 x half> %1124, <4 x float> %1511, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1513 = insertelement <4 x float> poison, float %774, i64 0, !dbg !54
  %1514 = insertelement <4 x float> %1513, float %775, i64 1, !dbg !54
  %1515 = insertelement <4 x float> %1514, float %776, i64 2, !dbg !54
  %1516 = insertelement <4 x float> %1515, float %777, i64 3, !dbg !54
  %1517 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1147, <4 x half> %1123, <4 x float> %1516, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1518 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1148, <4 x half> %1124, <4 x float> %1517, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1519 = insertelement <4 x float> poison, float %746, i64 0, !dbg !54
  %1520 = insertelement <4 x float> %1519, float %747, i64 1, !dbg !54
  %1521 = insertelement <4 x float> %1520, float %748, i64 2, !dbg !54
  %1522 = insertelement <4 x float> %1521, float %749, i64 3, !dbg !54
  %1523 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1119, <4 x float> %1522, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1524 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1120, <4 x float> %1523, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1525 = insertelement <4 x float> poison, float %750, i64 0, !dbg !54
  %1526 = insertelement <4 x float> %1525, float %751, i64 1, !dbg !54
  %1527 = insertelement <4 x float> %1526, float %752, i64 2, !dbg !54
  %1528 = insertelement <4 x float> %1527, float %753, i64 3, !dbg !54
  %1529 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1119, <4 x float> %1528, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1530 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1120, <4 x float> %1529, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1531 = insertelement <4 x float> poison, float %778, i64 0, !dbg !54
  %1532 = insertelement <4 x float> %1531, float %779, i64 1, !dbg !54
  %1533 = insertelement <4 x float> %1532, float %780, i64 2, !dbg !54
  %1534 = insertelement <4 x float> %1533, float %781, i64 3, !dbg !54
  %1535 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1151, <4 x half> %1123, <4 x float> %1534, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1536 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1152, <4 x half> %1124, <4 x float> %1535, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1537 = insertelement <4 x float> poison, float %782, i64 0, !dbg !54
  %1538 = insertelement <4 x float> %1537, float %783, i64 1, !dbg !54
  %1539 = insertelement <4 x float> %1538, float %784, i64 2, !dbg !54
  %1540 = insertelement <4 x float> %1539, float %785, i64 3, !dbg !54
  %1541 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1155, <4 x half> %1123, <4 x float> %1540, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1542 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1156, <4 x half> %1124, <4 x float> %1541, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1543 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1097, <4 x float> %1164, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1544 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1098, <4 x float> %1543, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1545 = extractelement <4 x float> %1544, i64 0, !dbg !54
  %1546 = extractelement <4 x float> %1544, i64 1, !dbg !54
  %1547 = extractelement <4 x float> %1544, i64 2, !dbg !54
  %1548 = extractelement <4 x float> %1544, i64 3, !dbg !54
  %1549 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1097, <4 x float> %1170, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1550 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1098, <4 x float> %1549, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1551 = extractelement <4 x float> %1550, i64 0, !dbg !54
  %1552 = extractelement <4 x float> %1550, i64 1, !dbg !54
  %1553 = extractelement <4 x float> %1550, i64 2, !dbg !54
  %1554 = extractelement <4 x float> %1550, i64 3, !dbg !54
  %1555 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1101, <4 x float> %1176, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1556 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1102, <4 x float> %1555, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1557 = extractelement <4 x float> %1556, i64 0, !dbg !54
  %1558 = extractelement <4 x float> %1556, i64 1, !dbg !54
  %1559 = extractelement <4 x float> %1556, i64 2, !dbg !54
  %1560 = extractelement <4 x float> %1556, i64 3, !dbg !54
  %1561 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1101, <4 x float> %1182, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1562 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1102, <4 x float> %1561, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1563 = extractelement <4 x float> %1562, i64 0, !dbg !54
  %1564 = extractelement <4 x float> %1562, i64 1, !dbg !54
  %1565 = extractelement <4 x float> %1562, i64 2, !dbg !54
  %1566 = extractelement <4 x float> %1562, i64 3, !dbg !54
  %1567 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1097, <4 x float> %1188, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1568 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1098, <4 x float> %1567, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1569 = extractelement <4 x float> %1568, i64 0, !dbg !54
  %1570 = extractelement <4 x float> %1568, i64 1, !dbg !54
  %1571 = extractelement <4 x float> %1568, i64 2, !dbg !54
  %1572 = extractelement <4 x float> %1568, i64 3, !dbg !54
  %1573 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1097, <4 x float> %1194, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1574 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1098, <4 x float> %1573, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1575 = extractelement <4 x float> %1574, i64 0, !dbg !54
  %1576 = extractelement <4 x float> %1574, i64 1, !dbg !54
  %1577 = extractelement <4 x float> %1574, i64 2, !dbg !54
  %1578 = extractelement <4 x float> %1574, i64 3, !dbg !54
  %1579 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1101, <4 x float> %1200, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1580 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1102, <4 x float> %1579, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1581 = extractelement <4 x float> %1580, i64 0, !dbg !54
  %1582 = extractelement <4 x float> %1580, i64 1, !dbg !54
  %1583 = extractelement <4 x float> %1580, i64 2, !dbg !54
  %1584 = extractelement <4 x float> %1580, i64 3, !dbg !54
  %1585 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1101, <4 x float> %1206, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1586 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1102, <4 x float> %1585, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1587 = extractelement <4 x float> %1586, i64 0, !dbg !54
  %1588 = extractelement <4 x float> %1586, i64 1, !dbg !54
  %1589 = extractelement <4 x float> %1586, i64 2, !dbg !54
  %1590 = extractelement <4 x float> %1586, i64 3, !dbg !54
  %1591 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1097, <4 x float> %1212, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1592 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1098, <4 x float> %1591, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1593 = extractelement <4 x float> %1592, i64 0, !dbg !54
  %1594 = extractelement <4 x float> %1592, i64 1, !dbg !54
  %1595 = extractelement <4 x float> %1592, i64 2, !dbg !54
  %1596 = extractelement <4 x float> %1592, i64 3, !dbg !54
  %1597 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1097, <4 x float> %1218, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1598 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1098, <4 x float> %1597, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1599 = extractelement <4 x float> %1598, i64 0, !dbg !54
  %1600 = extractelement <4 x float> %1598, i64 1, !dbg !54
  %1601 = extractelement <4 x float> %1598, i64 2, !dbg !54
  %1602 = extractelement <4 x float> %1598, i64 3, !dbg !54
  %1603 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1101, <4 x float> %1224, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1604 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1102, <4 x float> %1603, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1605 = extractelement <4 x float> %1604, i64 0, !dbg !54
  %1606 = extractelement <4 x float> %1604, i64 1, !dbg !54
  %1607 = extractelement <4 x float> %1604, i64 2, !dbg !54
  %1608 = extractelement <4 x float> %1604, i64 3, !dbg !54
  %1609 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1101, <4 x float> %1230, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1610 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1102, <4 x float> %1609, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1611 = extractelement <4 x float> %1610, i64 0, !dbg !54
  %1612 = extractelement <4 x float> %1610, i64 1, !dbg !54
  %1613 = extractelement <4 x float> %1610, i64 2, !dbg !54
  %1614 = extractelement <4 x float> %1610, i64 3, !dbg !54
  %1615 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1097, <4 x float> %1236, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1616 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1098, <4 x float> %1615, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1617 = extractelement <4 x float> %1616, i64 0, !dbg !54
  %1618 = extractelement <4 x float> %1616, i64 1, !dbg !54
  %1619 = extractelement <4 x float> %1616, i64 2, !dbg !54
  %1620 = extractelement <4 x float> %1616, i64 3, !dbg !54
  %1621 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1097, <4 x float> %1242, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1622 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1098, <4 x float> %1621, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1623 = extractelement <4 x float> %1622, i64 0, !dbg !54
  %1624 = extractelement <4 x float> %1622, i64 1, !dbg !54
  %1625 = extractelement <4 x float> %1622, i64 2, !dbg !54
  %1626 = extractelement <4 x float> %1622, i64 3, !dbg !54
  %1627 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1101, <4 x float> %1248, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1628 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1102, <4 x float> %1627, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1629 = extractelement <4 x float> %1628, i64 0, !dbg !54
  %1630 = extractelement <4 x float> %1628, i64 1, !dbg !54
  %1631 = extractelement <4 x float> %1628, i64 2, !dbg !54
  %1632 = extractelement <4 x float> %1628, i64 3, !dbg !54
  %1633 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1101, <4 x float> %1254, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1634 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1102, <4 x float> %1633, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1635 = extractelement <4 x float> %1634, i64 0, !dbg !54
  %1636 = extractelement <4 x float> %1634, i64 1, !dbg !54
  %1637 = extractelement <4 x float> %1634, i64 2, !dbg !54
  %1638 = extractelement <4 x float> %1634, i64 3, !dbg !54
  %1639 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1105, <4 x float> %1260, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1640 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1106, <4 x float> %1639, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1641 = extractelement <4 x float> %1640, i64 0, !dbg !54
  %1642 = extractelement <4 x float> %1640, i64 1, !dbg !54
  %1643 = extractelement <4 x float> %1640, i64 2, !dbg !54
  %1644 = extractelement <4 x float> %1640, i64 3, !dbg !54
  %1645 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1105, <4 x float> %1266, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1646 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1106, <4 x float> %1645, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1647 = extractelement <4 x float> %1646, i64 0, !dbg !54
  %1648 = extractelement <4 x float> %1646, i64 1, !dbg !54
  %1649 = extractelement <4 x float> %1646, i64 2, !dbg !54
  %1650 = extractelement <4 x float> %1646, i64 3, !dbg !54
  %1651 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1109, <4 x float> %1272, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1652 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1110, <4 x float> %1651, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1653 = extractelement <4 x float> %1652, i64 0, !dbg !54
  %1654 = extractelement <4 x float> %1652, i64 1, !dbg !54
  %1655 = extractelement <4 x float> %1652, i64 2, !dbg !54
  %1656 = extractelement <4 x float> %1652, i64 3, !dbg !54
  %1657 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1109, <4 x float> %1278, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1658 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1110, <4 x float> %1657, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1659 = extractelement <4 x float> %1658, i64 0, !dbg !54
  %1660 = extractelement <4 x float> %1658, i64 1, !dbg !54
  %1661 = extractelement <4 x float> %1658, i64 2, !dbg !54
  %1662 = extractelement <4 x float> %1658, i64 3, !dbg !54
  %1663 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1105, <4 x float> %1284, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1664 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1106, <4 x float> %1663, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1665 = extractelement <4 x float> %1664, i64 0, !dbg !54
  %1666 = extractelement <4 x float> %1664, i64 1, !dbg !54
  %1667 = extractelement <4 x float> %1664, i64 2, !dbg !54
  %1668 = extractelement <4 x float> %1664, i64 3, !dbg !54
  %1669 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1105, <4 x float> %1290, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1670 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1106, <4 x float> %1669, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1671 = extractelement <4 x float> %1670, i64 0, !dbg !54
  %1672 = extractelement <4 x float> %1670, i64 1, !dbg !54
  %1673 = extractelement <4 x float> %1670, i64 2, !dbg !54
  %1674 = extractelement <4 x float> %1670, i64 3, !dbg !54
  %1675 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1109, <4 x float> %1296, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1676 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1110, <4 x float> %1675, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1677 = extractelement <4 x float> %1676, i64 0, !dbg !54
  %1678 = extractelement <4 x float> %1676, i64 1, !dbg !54
  %1679 = extractelement <4 x float> %1676, i64 2, !dbg !54
  %1680 = extractelement <4 x float> %1676, i64 3, !dbg !54
  %1681 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1109, <4 x float> %1302, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1682 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1110, <4 x float> %1681, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1683 = extractelement <4 x float> %1682, i64 0, !dbg !54
  %1684 = extractelement <4 x float> %1682, i64 1, !dbg !54
  %1685 = extractelement <4 x float> %1682, i64 2, !dbg !54
  %1686 = extractelement <4 x float> %1682, i64 3, !dbg !54
  %1687 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1105, <4 x float> %1308, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1688 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1106, <4 x float> %1687, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1689 = extractelement <4 x float> %1688, i64 0, !dbg !54
  %1690 = extractelement <4 x float> %1688, i64 1, !dbg !54
  %1691 = extractelement <4 x float> %1688, i64 2, !dbg !54
  %1692 = extractelement <4 x float> %1688, i64 3, !dbg !54
  %1693 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1105, <4 x float> %1314, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1694 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1106, <4 x float> %1693, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1695 = extractelement <4 x float> %1694, i64 0, !dbg !54
  %1696 = extractelement <4 x float> %1694, i64 1, !dbg !54
  %1697 = extractelement <4 x float> %1694, i64 2, !dbg !54
  %1698 = extractelement <4 x float> %1694, i64 3, !dbg !54
  %1699 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1109, <4 x float> %1320, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1700 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1110, <4 x float> %1699, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1701 = extractelement <4 x float> %1700, i64 0, !dbg !54
  %1702 = extractelement <4 x float> %1700, i64 1, !dbg !54
  %1703 = extractelement <4 x float> %1700, i64 2, !dbg !54
  %1704 = extractelement <4 x float> %1700, i64 3, !dbg !54
  %1705 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1109, <4 x float> %1326, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1706 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1110, <4 x float> %1705, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1707 = extractelement <4 x float> %1706, i64 0, !dbg !54
  %1708 = extractelement <4 x float> %1706, i64 1, !dbg !54
  %1709 = extractelement <4 x float> %1706, i64 2, !dbg !54
  %1710 = extractelement <4 x float> %1706, i64 3, !dbg !54
  %1711 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1105, <4 x float> %1332, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1712 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1106, <4 x float> %1711, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1713 = extractelement <4 x float> %1712, i64 0, !dbg !54
  %1714 = extractelement <4 x float> %1712, i64 1, !dbg !54
  %1715 = extractelement <4 x float> %1712, i64 2, !dbg !54
  %1716 = extractelement <4 x float> %1712, i64 3, !dbg !54
  %1717 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1105, <4 x float> %1338, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1718 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1106, <4 x float> %1717, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1719 = extractelement <4 x float> %1718, i64 0, !dbg !54
  %1720 = extractelement <4 x float> %1718, i64 1, !dbg !54
  %1721 = extractelement <4 x float> %1718, i64 2, !dbg !54
  %1722 = extractelement <4 x float> %1718, i64 3, !dbg !54
  %1723 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1109, <4 x float> %1344, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1724 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1110, <4 x float> %1723, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1725 = extractelement <4 x float> %1724, i64 0, !dbg !54
  %1726 = extractelement <4 x float> %1724, i64 1, !dbg !54
  %1727 = extractelement <4 x float> %1724, i64 2, !dbg !54
  %1728 = extractelement <4 x float> %1724, i64 3, !dbg !54
  %1729 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1109, <4 x float> %1350, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1730 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1110, <4 x float> %1729, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1731 = extractelement <4 x float> %1730, i64 0, !dbg !54
  %1732 = extractelement <4 x float> %1730, i64 1, !dbg !54
  %1733 = extractelement <4 x float> %1730, i64 2, !dbg !54
  %1734 = extractelement <4 x float> %1730, i64 3, !dbg !54
  %1735 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1113, <4 x float> %1356, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1736 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1114, <4 x float> %1735, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1737 = extractelement <4 x float> %1736, i64 0, !dbg !54
  %1738 = extractelement <4 x float> %1736, i64 1, !dbg !54
  %1739 = extractelement <4 x float> %1736, i64 2, !dbg !54
  %1740 = extractelement <4 x float> %1736, i64 3, !dbg !54
  %1741 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1113, <4 x float> %1362, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1742 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1114, <4 x float> %1741, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1743 = extractelement <4 x float> %1742, i64 0, !dbg !54
  %1744 = extractelement <4 x float> %1742, i64 1, !dbg !54
  %1745 = extractelement <4 x float> %1742, i64 2, !dbg !54
  %1746 = extractelement <4 x float> %1742, i64 3, !dbg !54
  %1747 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1117, <4 x float> %1368, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1748 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1118, <4 x float> %1747, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1749 = extractelement <4 x float> %1748, i64 0, !dbg !54
  %1750 = extractelement <4 x float> %1748, i64 1, !dbg !54
  %1751 = extractelement <4 x float> %1748, i64 2, !dbg !54
  %1752 = extractelement <4 x float> %1748, i64 3, !dbg !54
  %1753 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1117, <4 x float> %1374, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1754 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1118, <4 x float> %1753, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1755 = extractelement <4 x float> %1754, i64 0, !dbg !54
  %1756 = extractelement <4 x float> %1754, i64 1, !dbg !54
  %1757 = extractelement <4 x float> %1754, i64 2, !dbg !54
  %1758 = extractelement <4 x float> %1754, i64 3, !dbg !54
  %1759 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1113, <4 x float> %1380, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1760 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1114, <4 x float> %1759, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1761 = extractelement <4 x float> %1760, i64 0, !dbg !54
  %1762 = extractelement <4 x float> %1760, i64 1, !dbg !54
  %1763 = extractelement <4 x float> %1760, i64 2, !dbg !54
  %1764 = extractelement <4 x float> %1760, i64 3, !dbg !54
  %1765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1113, <4 x float> %1386, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1766 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1114, <4 x float> %1765, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1767 = extractelement <4 x float> %1766, i64 0, !dbg !54
  %1768 = extractelement <4 x float> %1766, i64 1, !dbg !54
  %1769 = extractelement <4 x float> %1766, i64 2, !dbg !54
  %1770 = extractelement <4 x float> %1766, i64 3, !dbg !54
  %1771 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1117, <4 x float> %1392, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1772 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1118, <4 x float> %1771, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1773 = extractelement <4 x float> %1772, i64 0, !dbg !54
  %1774 = extractelement <4 x float> %1772, i64 1, !dbg !54
  %1775 = extractelement <4 x float> %1772, i64 2, !dbg !54
  %1776 = extractelement <4 x float> %1772, i64 3, !dbg !54
  %1777 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1117, <4 x float> %1398, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1778 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1118, <4 x float> %1777, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1779 = extractelement <4 x float> %1778, i64 0, !dbg !54
  %1780 = extractelement <4 x float> %1778, i64 1, !dbg !54
  %1781 = extractelement <4 x float> %1778, i64 2, !dbg !54
  %1782 = extractelement <4 x float> %1778, i64 3, !dbg !54
  %1783 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1113, <4 x float> %1404, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1784 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1114, <4 x float> %1783, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1785 = extractelement <4 x float> %1784, i64 0, !dbg !54
  %1786 = extractelement <4 x float> %1784, i64 1, !dbg !54
  %1787 = extractelement <4 x float> %1784, i64 2, !dbg !54
  %1788 = extractelement <4 x float> %1784, i64 3, !dbg !54
  %1789 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1113, <4 x float> %1410, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1790 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1114, <4 x float> %1789, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1791 = extractelement <4 x float> %1790, i64 0, !dbg !54
  %1792 = extractelement <4 x float> %1790, i64 1, !dbg !54
  %1793 = extractelement <4 x float> %1790, i64 2, !dbg !54
  %1794 = extractelement <4 x float> %1790, i64 3, !dbg !54
  %1795 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1117, <4 x float> %1416, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1796 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1118, <4 x float> %1795, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1797 = extractelement <4 x float> %1796, i64 0, !dbg !54
  %1798 = extractelement <4 x float> %1796, i64 1, !dbg !54
  %1799 = extractelement <4 x float> %1796, i64 2, !dbg !54
  %1800 = extractelement <4 x float> %1796, i64 3, !dbg !54
  %1801 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1117, <4 x float> %1422, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1802 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1118, <4 x float> %1801, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1803 = extractelement <4 x float> %1802, i64 0, !dbg !54
  %1804 = extractelement <4 x float> %1802, i64 1, !dbg !54
  %1805 = extractelement <4 x float> %1802, i64 2, !dbg !54
  %1806 = extractelement <4 x float> %1802, i64 3, !dbg !54
  %1807 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1113, <4 x float> %1428, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1808 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1114, <4 x float> %1807, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1809 = extractelement <4 x float> %1808, i64 0, !dbg !54
  %1810 = extractelement <4 x float> %1808, i64 1, !dbg !54
  %1811 = extractelement <4 x float> %1808, i64 2, !dbg !54
  %1812 = extractelement <4 x float> %1808, i64 3, !dbg !54
  %1813 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1113, <4 x float> %1434, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1814 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1114, <4 x float> %1813, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1815 = extractelement <4 x float> %1814, i64 0, !dbg !54
  %1816 = extractelement <4 x float> %1814, i64 1, !dbg !54
  %1817 = extractelement <4 x float> %1814, i64 2, !dbg !54
  %1818 = extractelement <4 x float> %1814, i64 3, !dbg !54
  %1819 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1117, <4 x float> %1440, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1820 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1118, <4 x float> %1819, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1821 = extractelement <4 x float> %1820, i64 0, !dbg !54
  %1822 = extractelement <4 x float> %1820, i64 1, !dbg !54
  %1823 = extractelement <4 x float> %1820, i64 2, !dbg !54
  %1824 = extractelement <4 x float> %1820, i64 3, !dbg !54
  %1825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1117, <4 x float> %1446, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1826 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1118, <4 x float> %1825, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1827 = extractelement <4 x float> %1826, i64 0, !dbg !54
  %1828 = extractelement <4 x float> %1826, i64 1, !dbg !54
  %1829 = extractelement <4 x float> %1826, i64 2, !dbg !54
  %1830 = extractelement <4 x float> %1826, i64 3, !dbg !54
  %1831 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1121, <4 x float> %1452, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1832 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1122, <4 x float> %1831, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1833 = extractelement <4 x float> %1832, i64 0, !dbg !54
  %1834 = extractelement <4 x float> %1832, i64 1, !dbg !54
  %1835 = extractelement <4 x float> %1832, i64 2, !dbg !54
  %1836 = extractelement <4 x float> %1832, i64 3, !dbg !54
  %1837 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1121, <4 x float> %1458, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1838 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1122, <4 x float> %1837, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1839 = extractelement <4 x float> %1838, i64 0, !dbg !54
  %1840 = extractelement <4 x float> %1838, i64 1, !dbg !54
  %1841 = extractelement <4 x float> %1838, i64 2, !dbg !54
  %1842 = extractelement <4 x float> %1838, i64 3, !dbg !54
  %1843 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1129, <4 x half> %1125, <4 x float> %1464, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1844 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1130, <4 x half> %1126, <4 x float> %1843, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1845 = extractelement <4 x float> %1844, i64 0, !dbg !54
  %1846 = extractelement <4 x float> %1844, i64 1, !dbg !54
  %1847 = extractelement <4 x float> %1844, i64 2, !dbg !54
  %1848 = extractelement <4 x float> %1844, i64 3, !dbg !54
  %1849 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1133, <4 x half> %1125, <4 x float> %1470, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1850 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1134, <4 x half> %1126, <4 x float> %1849, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1851 = extractelement <4 x float> %1850, i64 0, !dbg !54
  %1852 = extractelement <4 x float> %1850, i64 1, !dbg !54
  %1853 = extractelement <4 x float> %1850, i64 2, !dbg !54
  %1854 = extractelement <4 x float> %1850, i64 3, !dbg !54
  %1855 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1121, <4 x float> %1476, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1856 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1122, <4 x float> %1855, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1857 = extractelement <4 x float> %1856, i64 0, !dbg !54
  %1858 = extractelement <4 x float> %1856, i64 1, !dbg !54
  %1859 = extractelement <4 x float> %1856, i64 2, !dbg !54
  %1860 = extractelement <4 x float> %1856, i64 3, !dbg !54
  %1861 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1121, <4 x float> %1482, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1862 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1122, <4 x float> %1861, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1863 = extractelement <4 x float> %1862, i64 0, !dbg !54
  %1864 = extractelement <4 x float> %1862, i64 1, !dbg !54
  %1865 = extractelement <4 x float> %1862, i64 2, !dbg !54
  %1866 = extractelement <4 x float> %1862, i64 3, !dbg !54
  %1867 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1137, <4 x half> %1125, <4 x float> %1488, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1868 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1138, <4 x half> %1126, <4 x float> %1867, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1869 = extractelement <4 x float> %1868, i64 0, !dbg !54
  %1870 = extractelement <4 x float> %1868, i64 1, !dbg !54
  %1871 = extractelement <4 x float> %1868, i64 2, !dbg !54
  %1872 = extractelement <4 x float> %1868, i64 3, !dbg !54
  %1873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1141, <4 x half> %1125, <4 x float> %1494, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1874 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1142, <4 x half> %1126, <4 x float> %1873, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1875 = extractelement <4 x float> %1874, i64 0, !dbg !54
  %1876 = extractelement <4 x float> %1874, i64 1, !dbg !54
  %1877 = extractelement <4 x float> %1874, i64 2, !dbg !54
  %1878 = extractelement <4 x float> %1874, i64 3, !dbg !54
  %1879 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1121, <4 x float> %1500, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1880 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1122, <4 x float> %1879, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1881 = extractelement <4 x float> %1880, i64 0, !dbg !54
  %1882 = extractelement <4 x float> %1880, i64 1, !dbg !54
  %1883 = extractelement <4 x float> %1880, i64 2, !dbg !54
  %1884 = extractelement <4 x float> %1880, i64 3, !dbg !54
  %1885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1121, <4 x float> %1506, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1886 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1122, <4 x float> %1885, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1887 = extractelement <4 x float> %1886, i64 0, !dbg !54
  %1888 = extractelement <4 x float> %1886, i64 1, !dbg !54
  %1889 = extractelement <4 x float> %1886, i64 2, !dbg !54
  %1890 = extractelement <4 x float> %1886, i64 3, !dbg !54
  %1891 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1145, <4 x half> %1125, <4 x float> %1512, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1892 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1146, <4 x half> %1126, <4 x float> %1891, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1893 = extractelement <4 x float> %1892, i64 0, !dbg !54
  %1894 = extractelement <4 x float> %1892, i64 1, !dbg !54
  %1895 = extractelement <4 x float> %1892, i64 2, !dbg !54
  %1896 = extractelement <4 x float> %1892, i64 3, !dbg !54
  %1897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1149, <4 x half> %1125, <4 x float> %1518, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1898 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1150, <4 x half> %1126, <4 x float> %1897, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1899 = extractelement <4 x float> %1898, i64 0, !dbg !54
  %1900 = extractelement <4 x float> %1898, i64 1, !dbg !54
  %1901 = extractelement <4 x float> %1898, i64 2, !dbg !54
  %1902 = extractelement <4 x float> %1898, i64 3, !dbg !54
  %1903 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1121, <4 x float> %1524, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1904 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1122, <4 x float> %1903, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1905 = extractelement <4 x float> %1904, i64 0, !dbg !54
  %1906 = extractelement <4 x float> %1904, i64 1, !dbg !54
  %1907 = extractelement <4 x float> %1904, i64 2, !dbg !54
  %1908 = extractelement <4 x float> %1904, i64 3, !dbg !54
  %1909 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1121, <4 x float> %1530, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1910 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1122, <4 x float> %1909, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1911 = extractelement <4 x float> %1910, i64 0, !dbg !54
  %1912 = extractelement <4 x float> %1910, i64 1, !dbg !54
  %1913 = extractelement <4 x float> %1910, i64 2, !dbg !54
  %1914 = extractelement <4 x float> %1910, i64 3, !dbg !54
  %1915 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1153, <4 x half> %1125, <4 x float> %1536, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1916 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1154, <4 x half> %1126, <4 x float> %1915, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1917 = extractelement <4 x float> %1916, i64 0, !dbg !54
  %1918 = extractelement <4 x float> %1916, i64 1, !dbg !54
  %1919 = extractelement <4 x float> %1916, i64 2, !dbg !54
  %1920 = extractelement <4 x float> %1916, i64 3, !dbg !54
  %1921 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1157, <4 x half> %1125, <4 x float> %1542, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1922 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1158, <4 x half> %1126, <4 x float> %1921, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %1923 = extractelement <4 x float> %1922, i64 0, !dbg !54
  %1924 = extractelement <4 x float> %1922, i64 1, !dbg !54
  %1925 = extractelement <4 x float> %1922, i64 2, !dbg !54
  %1926 = extractelement <4 x float> %1922, i64 3, !dbg !54
  fence syncscope("workgroup") release, !dbg !36
  tail call void @llvm.amdgcn.s.barrier(), !dbg !36
  fence syncscope("workgroup") acquire, !dbg !36
  %1927 = load <8 x half>, ptr addrspace(3) %249, align 16, !dbg !36
  %1928 = load <8 x half>, ptr addrspace(3) %251, align 16, !dbg !36
  %1929 = load <8 x half>, ptr addrspace(3) %253, align 16, !dbg !36
  %1930 = load <8 x half>, ptr addrspace(3) %255, align 16, !dbg !36
  %1931 = load <8 x half>, ptr addrspace(3) %257, align 16, !dbg !36
  %1932 = load <8 x half>, ptr addrspace(3) %259, align 16, !dbg !36
  %1933 = load <8 x half>, ptr addrspace(3) %261, align 16, !dbg !36
  %1934 = load <8 x half>, ptr addrspace(3) %263, align 16, !dbg !36
  %1935 = load <8 x half>, ptr addrspace(3) %265, align 16, !dbg !36
  %1936 = load <8 x half>, ptr addrspace(3) %267, align 16, !dbg !36
  %1937 = load <8 x half>, ptr addrspace(3) %269, align 16, !dbg !36
  %1938 = load <8 x half>, ptr addrspace(3) %271, align 16, !dbg !36
  %1939 = load <8 x half>, ptr addrspace(3) %273, align 16, !dbg !36
  %1940 = load <8 x half>, ptr addrspace(3) %275, align 16, !dbg !36
  %1941 = load <8 x half>, ptr addrspace(3) %277, align 16, !dbg !36
  %1942 = load <8 x half>, ptr addrspace(3) %279, align 16, !dbg !36
  %1943 = load <8 x half>, ptr addrspace(3) %301, align 16, !dbg !40
  %1944 = load <8 x half>, ptr addrspace(3) %303, align 16, !dbg !40
  %1945 = load <8 x half>, ptr addrspace(3) %305, align 16, !dbg !40
  %1946 = load <8 x half>, ptr addrspace(3) %307, align 16, !dbg !40
  %1947 = load <8 x half>, ptr addrspace(3) %309, align 16, !dbg !40
  %1948 = load <8 x half>, ptr addrspace(3) %311, align 16, !dbg !40
  %1949 = load <8 x half>, ptr addrspace(3) %313, align 16, !dbg !40
  %1950 = load <8 x half>, ptr addrspace(3) %315, align 16, !dbg !40
  %1951 = load <8 x half>, ptr addrspace(3) %317, align 16, !dbg !40
  %1952 = load <8 x half>, ptr addrspace(3) %319, align 16, !dbg !40
  %1953 = load <8 x half>, ptr addrspace(3) %321, align 16, !dbg !40
  %1954 = load <8 x half>, ptr addrspace(3) %323, align 16, !dbg !40
  %1955 = load <8 x half>, ptr addrspace(3) %325, align 16, !dbg !40
  %1956 = load <8 x half>, ptr addrspace(3) %327, align 16, !dbg !40
  %1957 = load <8 x half>, ptr addrspace(3) %329, align 16, !dbg !40
  %1958 = load <8 x half>, ptr addrspace(3) %331, align 16, !dbg !40
  %1959 = add nuw nsw i32 %786, 1, !dbg !35
  %exitcond.not = icmp eq i32 %786, %527, !dbg !35
  %1960 = shufflevector <8 x half> %1958, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1961 = shufflevector <8 x half> %1958, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1962 = shufflevector <8 x half> %1958, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1963 = shufflevector <8 x half> %1958, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1964 = shufflevector <8 x half> %1957, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1965 = shufflevector <8 x half> %1957, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1966 = shufflevector <8 x half> %1957, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1967 = shufflevector <8 x half> %1957, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1968 = shufflevector <8 x half> %1956, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1969 = shufflevector <8 x half> %1956, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1970 = shufflevector <8 x half> %1956, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1971 = shufflevector <8 x half> %1956, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1972 = shufflevector <8 x half> %1955, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1973 = shufflevector <8 x half> %1955, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1974 = shufflevector <8 x half> %1955, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1975 = shufflevector <8 x half> %1955, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1976 = shufflevector <8 x half> %1954, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1977 = shufflevector <8 x half> %1954, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1978 = shufflevector <8 x half> %1954, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1979 = shufflevector <8 x half> %1954, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1980 = shufflevector <8 x half> %1953, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1981 = shufflevector <8 x half> %1953, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1982 = shufflevector <8 x half> %1953, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1983 = shufflevector <8 x half> %1953, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1984 = shufflevector <8 x half> %1952, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1985 = shufflevector <8 x half> %1952, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1986 = shufflevector <8 x half> %1952, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1987 = shufflevector <8 x half> %1952, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1988 = shufflevector <8 x half> %1951, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1989 = shufflevector <8 x half> %1951, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1990 = shufflevector <8 x half> %1951, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1991 = shufflevector <8 x half> %1951, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1992 = shufflevector <8 x half> %1950, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1993 = shufflevector <8 x half> %1950, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1994 = shufflevector <8 x half> %1950, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1995 = shufflevector <8 x half> %1950, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1996 = shufflevector <8 x half> %1949, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1997 = shufflevector <8 x half> %1949, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1998 = shufflevector <8 x half> %1949, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1999 = shufflevector <8 x half> %1949, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2000 = shufflevector <8 x half> %1948, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2001 = shufflevector <8 x half> %1948, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2002 = shufflevector <8 x half> %1948, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2003 = shufflevector <8 x half> %1948, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2004 = shufflevector <8 x half> %1947, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2005 = shufflevector <8 x half> %1947, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2006 = shufflevector <8 x half> %1947, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2007 = shufflevector <8 x half> %1947, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2008 = shufflevector <8 x half> %1946, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2009 = shufflevector <8 x half> %1946, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2010 = shufflevector <8 x half> %1946, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2011 = shufflevector <8 x half> %1946, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2012 = shufflevector <8 x half> %1945, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2013 = shufflevector <8 x half> %1945, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2014 = shufflevector <8 x half> %1945, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2015 = shufflevector <8 x half> %1945, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2016 = shufflevector <8 x half> %1944, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2017 = shufflevector <8 x half> %1944, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2018 = shufflevector <8 x half> %1944, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2019 = shufflevector <8 x half> %1944, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2020 = shufflevector <8 x half> %1943, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2021 = shufflevector <8 x half> %1943, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2022 = shufflevector <8 x half> %1943, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2023 = shufflevector <8 x half> %1943, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2024 = shufflevector <8 x half> %1942, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2025 = shufflevector <8 x half> %1942, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2026 = shufflevector <8 x half> %1942, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2027 = shufflevector <8 x half> %1942, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2028 = shufflevector <8 x half> %1941, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2029 = shufflevector <8 x half> %1941, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2030 = shufflevector <8 x half> %1941, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2031 = shufflevector <8 x half> %1941, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2032 = shufflevector <8 x half> %1940, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2033 = shufflevector <8 x half> %1940, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2034 = shufflevector <8 x half> %1940, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2035 = shufflevector <8 x half> %1940, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2036 = shufflevector <8 x half> %1939, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2037 = shufflevector <8 x half> %1939, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2038 = shufflevector <8 x half> %1939, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2039 = shufflevector <8 x half> %1939, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2040 = shufflevector <8 x half> %1938, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2041 = shufflevector <8 x half> %1938, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2042 = shufflevector <8 x half> %1938, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2043 = shufflevector <8 x half> %1938, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2044 = shufflevector <8 x half> %1937, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2045 = shufflevector <8 x half> %1937, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2046 = shufflevector <8 x half> %1937, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2047 = shufflevector <8 x half> %1937, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2048 = shufflevector <8 x half> %1936, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2049 = shufflevector <8 x half> %1936, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2050 = shufflevector <8 x half> %1936, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2051 = shufflevector <8 x half> %1936, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2052 = shufflevector <8 x half> %1935, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2053 = shufflevector <8 x half> %1935, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2054 = shufflevector <8 x half> %1935, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2055 = shufflevector <8 x half> %1935, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2056 = shufflevector <8 x half> %1934, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2057 = shufflevector <8 x half> %1934, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2058 = shufflevector <8 x half> %1934, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2059 = shufflevector <8 x half> %1934, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2060 = shufflevector <8 x half> %1933, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2061 = shufflevector <8 x half> %1933, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2062 = shufflevector <8 x half> %1933, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2063 = shufflevector <8 x half> %1933, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2064 = shufflevector <8 x half> %1932, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2065 = shufflevector <8 x half> %1932, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2066 = shufflevector <8 x half> %1932, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2067 = shufflevector <8 x half> %1932, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2068 = shufflevector <8 x half> %1931, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2069 = shufflevector <8 x half> %1931, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2070 = shufflevector <8 x half> %1931, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2071 = shufflevector <8 x half> %1931, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2072 = shufflevector <8 x half> %1930, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2073 = shufflevector <8 x half> %1930, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2074 = shufflevector <8 x half> %1930, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2075 = shufflevector <8 x half> %1930, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2076 = shufflevector <8 x half> %1929, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2077 = shufflevector <8 x half> %1929, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2078 = shufflevector <8 x half> %1929, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2079 = shufflevector <8 x half> %1929, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2080 = shufflevector <8 x half> %1928, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2081 = shufflevector <8 x half> %1928, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2082 = shufflevector <8 x half> %1928, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2083 = shufflevector <8 x half> %1928, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2084 = shufflevector <8 x half> %1927, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2085 = shufflevector <8 x half> %1927, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2086 = shufflevector <8 x half> %1927, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2087 = shufflevector <8 x half> %1927, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2088 = shufflevector <8 x half> %982, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2089 = shufflevector <8 x half> %982, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2090 = shufflevector <8 x half> %984, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2091 = shufflevector <8 x half> %984, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2092 = shufflevector <8 x half> %986, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2093 = shufflevector <8 x half> %986, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2094 = shufflevector <8 x half> %988, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2095 = shufflevector <8 x half> %988, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2096 = shufflevector <8 x half> %990, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2097 = shufflevector <8 x half> %990, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2098 = shufflevector <8 x half> %992, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2099 = shufflevector <8 x half> %992, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2100 = shufflevector <8 x half> %994, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2101 = shufflevector <8 x half> %994, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2102 = shufflevector <8 x half> %996, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2103 = shufflevector <8 x half> %996, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2104 = shufflevector <8 x half> %1080, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2105 = shufflevector <8 x half> %1080, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2106 = shufflevector <8 x half> %1082, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2107 = shufflevector <8 x half> %1082, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2108 = shufflevector <8 x half> %1084, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2109 = shufflevector <8 x half> %1084, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2110 = shufflevector <8 x half> %1086, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2111 = shufflevector <8 x half> %1086, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2112 = shufflevector <8 x half> %1088, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2113 = shufflevector <8 x half> %1088, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2114 = shufflevector <8 x half> %1090, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2115 = shufflevector <8 x half> %1090, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2116 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2117 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2118 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2119 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2120 = shufflevector <8 x half> %982, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2121 = shufflevector <8 x half> %982, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2122 = shufflevector <8 x half> %984, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2123 = shufflevector <8 x half> %984, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2124 = shufflevector <8 x half> %986, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2125 = shufflevector <8 x half> %986, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2126 = shufflevector <8 x half> %988, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2127 = shufflevector <8 x half> %988, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2128 = shufflevector <8 x half> %990, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2129 = shufflevector <8 x half> %990, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2130 = shufflevector <8 x half> %992, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2131 = shufflevector <8 x half> %992, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2132 = shufflevector <8 x half> %994, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2133 = shufflevector <8 x half> %994, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2134 = shufflevector <8 x half> %996, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2135 = shufflevector <8 x half> %996, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2136 = shufflevector <8 x half> %1080, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2137 = shufflevector <8 x half> %1080, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2138 = shufflevector <8 x half> %1082, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2139 = shufflevector <8 x half> %1082, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2140 = shufflevector <8 x half> %1084, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2141 = shufflevector <8 x half> %1084, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2142 = shufflevector <8 x half> %1086, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2143 = shufflevector <8 x half> %1086, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2144 = shufflevector <8 x half> %1088, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2145 = shufflevector <8 x half> %1088, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2146 = shufflevector <8 x half> %1090, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2147 = shufflevector <8 x half> %1090, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2148 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2149 = shufflevector <8 x half> %1092, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2150 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2151 = shufflevector <8 x half> %1094, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !dbg !35

._crit_edge:                                      ; preds = %.lr.ph, %12
  %2152 = phi float [ 0.000000e+00, %12 ], [ %1545, %.lr.ph ], !dbg !55
  %2153 = phi float [ 0.000000e+00, %12 ], [ %1546, %.lr.ph ], !dbg !55
  %2154 = phi float [ 0.000000e+00, %12 ], [ %1547, %.lr.ph ], !dbg !55
  %2155 = phi float [ 0.000000e+00, %12 ], [ %1548, %.lr.ph ], !dbg !55
  %2156 = phi float [ 0.000000e+00, %12 ], [ %1551, %.lr.ph ], !dbg !55
  %2157 = phi float [ 0.000000e+00, %12 ], [ %1552, %.lr.ph ], !dbg !55
  %2158 = phi float [ 0.000000e+00, %12 ], [ %1553, %.lr.ph ], !dbg !55
  %2159 = phi float [ 0.000000e+00, %12 ], [ %1554, %.lr.ph ], !dbg !55
  %2160 = phi float [ 0.000000e+00, %12 ], [ %1569, %.lr.ph ], !dbg !55
  %2161 = phi float [ 0.000000e+00, %12 ], [ %1570, %.lr.ph ], !dbg !55
  %2162 = phi float [ 0.000000e+00, %12 ], [ %1571, %.lr.ph ], !dbg !55
  %2163 = phi float [ 0.000000e+00, %12 ], [ %1572, %.lr.ph ], !dbg !55
  %2164 = phi float [ 0.000000e+00, %12 ], [ %1575, %.lr.ph ], !dbg !55
  %2165 = phi float [ 0.000000e+00, %12 ], [ %1576, %.lr.ph ], !dbg !55
  %2166 = phi float [ 0.000000e+00, %12 ], [ %1577, %.lr.ph ], !dbg !55
  %2167 = phi float [ 0.000000e+00, %12 ], [ %1578, %.lr.ph ], !dbg !55
  %2168 = phi float [ 0.000000e+00, %12 ], [ %1593, %.lr.ph ], !dbg !55
  %2169 = phi float [ 0.000000e+00, %12 ], [ %1594, %.lr.ph ], !dbg !55
  %2170 = phi float [ 0.000000e+00, %12 ], [ %1595, %.lr.ph ], !dbg !55
  %2171 = phi float [ 0.000000e+00, %12 ], [ %1596, %.lr.ph ], !dbg !55
  %2172 = phi float [ 0.000000e+00, %12 ], [ %1599, %.lr.ph ], !dbg !55
  %2173 = phi float [ 0.000000e+00, %12 ], [ %1600, %.lr.ph ], !dbg !55
  %2174 = phi float [ 0.000000e+00, %12 ], [ %1601, %.lr.ph ], !dbg !55
  %2175 = phi float [ 0.000000e+00, %12 ], [ %1602, %.lr.ph ], !dbg !55
  %2176 = phi float [ 0.000000e+00, %12 ], [ %1617, %.lr.ph ], !dbg !55
  %2177 = phi float [ 0.000000e+00, %12 ], [ %1618, %.lr.ph ], !dbg !55
  %2178 = phi float [ 0.000000e+00, %12 ], [ %1619, %.lr.ph ], !dbg !55
  %2179 = phi float [ 0.000000e+00, %12 ], [ %1620, %.lr.ph ], !dbg !55
  %2180 = phi float [ 0.000000e+00, %12 ], [ %1623, %.lr.ph ], !dbg !55
  %2181 = phi float [ 0.000000e+00, %12 ], [ %1624, %.lr.ph ], !dbg !55
  %2182 = phi float [ 0.000000e+00, %12 ], [ %1625, %.lr.ph ], !dbg !55
  %2183 = phi float [ 0.000000e+00, %12 ], [ %1626, %.lr.ph ], !dbg !55
  %2184 = phi float [ 0.000000e+00, %12 ], [ %1557, %.lr.ph ], !dbg !55
  %2185 = phi float [ 0.000000e+00, %12 ], [ %1558, %.lr.ph ], !dbg !55
  %2186 = phi float [ 0.000000e+00, %12 ], [ %1559, %.lr.ph ], !dbg !55
  %2187 = phi float [ 0.000000e+00, %12 ], [ %1560, %.lr.ph ], !dbg !55
  %2188 = phi float [ 0.000000e+00, %12 ], [ %1563, %.lr.ph ], !dbg !55
  %2189 = phi float [ 0.000000e+00, %12 ], [ %1564, %.lr.ph ], !dbg !55
  %2190 = phi float [ 0.000000e+00, %12 ], [ %1565, %.lr.ph ], !dbg !55
  %2191 = phi float [ 0.000000e+00, %12 ], [ %1566, %.lr.ph ], !dbg !55
  %2192 = phi float [ 0.000000e+00, %12 ], [ %1581, %.lr.ph ], !dbg !55
  %2193 = phi float [ 0.000000e+00, %12 ], [ %1582, %.lr.ph ], !dbg !55
  %2194 = phi float [ 0.000000e+00, %12 ], [ %1583, %.lr.ph ], !dbg !55
  %2195 = phi float [ 0.000000e+00, %12 ], [ %1584, %.lr.ph ], !dbg !55
  %2196 = phi float [ 0.000000e+00, %12 ], [ %1587, %.lr.ph ], !dbg !55
  %2197 = phi float [ 0.000000e+00, %12 ], [ %1588, %.lr.ph ], !dbg !55
  %2198 = phi float [ 0.000000e+00, %12 ], [ %1589, %.lr.ph ], !dbg !55
  %2199 = phi float [ 0.000000e+00, %12 ], [ %1590, %.lr.ph ], !dbg !55
  %2200 = phi float [ 0.000000e+00, %12 ], [ %1605, %.lr.ph ], !dbg !55
  %2201 = phi float [ 0.000000e+00, %12 ], [ %1606, %.lr.ph ], !dbg !55
  %2202 = phi float [ 0.000000e+00, %12 ], [ %1607, %.lr.ph ], !dbg !55
  %2203 = phi float [ 0.000000e+00, %12 ], [ %1608, %.lr.ph ], !dbg !55
  %2204 = phi float [ 0.000000e+00, %12 ], [ %1611, %.lr.ph ], !dbg !55
  %2205 = phi float [ 0.000000e+00, %12 ], [ %1612, %.lr.ph ], !dbg !55
  %2206 = phi float [ 0.000000e+00, %12 ], [ %1613, %.lr.ph ], !dbg !55
  %2207 = phi float [ 0.000000e+00, %12 ], [ %1614, %.lr.ph ], !dbg !55
  %2208 = phi float [ 0.000000e+00, %12 ], [ %1629, %.lr.ph ], !dbg !55
  %2209 = phi float [ 0.000000e+00, %12 ], [ %1630, %.lr.ph ], !dbg !55
  %2210 = phi float [ 0.000000e+00, %12 ], [ %1631, %.lr.ph ], !dbg !55
  %2211 = phi float [ 0.000000e+00, %12 ], [ %1632, %.lr.ph ], !dbg !55
  %2212 = phi float [ 0.000000e+00, %12 ], [ %1635, %.lr.ph ], !dbg !55
  %2213 = phi float [ 0.000000e+00, %12 ], [ %1636, %.lr.ph ], !dbg !55
  %2214 = phi float [ 0.000000e+00, %12 ], [ %1637, %.lr.ph ], !dbg !55
  %2215 = phi float [ 0.000000e+00, %12 ], [ %1638, %.lr.ph ], !dbg !55
  %2216 = phi float [ 0.000000e+00, %12 ], [ %1641, %.lr.ph ], !dbg !55
  %2217 = phi float [ 0.000000e+00, %12 ], [ %1642, %.lr.ph ], !dbg !55
  %2218 = phi float [ 0.000000e+00, %12 ], [ %1643, %.lr.ph ], !dbg !55
  %2219 = phi float [ 0.000000e+00, %12 ], [ %1644, %.lr.ph ], !dbg !55
  %2220 = phi float [ 0.000000e+00, %12 ], [ %1647, %.lr.ph ], !dbg !55
  %2221 = phi float [ 0.000000e+00, %12 ], [ %1648, %.lr.ph ], !dbg !55
  %2222 = phi float [ 0.000000e+00, %12 ], [ %1649, %.lr.ph ], !dbg !55
  %2223 = phi float [ 0.000000e+00, %12 ], [ %1650, %.lr.ph ], !dbg !55
  %2224 = phi float [ 0.000000e+00, %12 ], [ %1665, %.lr.ph ], !dbg !55
  %2225 = phi float [ 0.000000e+00, %12 ], [ %1666, %.lr.ph ], !dbg !55
  %2226 = phi float [ 0.000000e+00, %12 ], [ %1667, %.lr.ph ], !dbg !55
  %2227 = phi float [ 0.000000e+00, %12 ], [ %1668, %.lr.ph ], !dbg !55
  %2228 = phi float [ 0.000000e+00, %12 ], [ %1671, %.lr.ph ], !dbg !55
  %2229 = phi float [ 0.000000e+00, %12 ], [ %1672, %.lr.ph ], !dbg !55
  %2230 = phi float [ 0.000000e+00, %12 ], [ %1673, %.lr.ph ], !dbg !55
  %2231 = phi float [ 0.000000e+00, %12 ], [ %1674, %.lr.ph ], !dbg !55
  %2232 = phi float [ 0.000000e+00, %12 ], [ %1689, %.lr.ph ], !dbg !55
  %2233 = phi float [ 0.000000e+00, %12 ], [ %1690, %.lr.ph ], !dbg !55
  %2234 = phi float [ 0.000000e+00, %12 ], [ %1691, %.lr.ph ], !dbg !55
  %2235 = phi float [ 0.000000e+00, %12 ], [ %1692, %.lr.ph ], !dbg !55
  %2236 = phi float [ 0.000000e+00, %12 ], [ %1695, %.lr.ph ], !dbg !55
  %2237 = phi float [ 0.000000e+00, %12 ], [ %1696, %.lr.ph ], !dbg !55
  %2238 = phi float [ 0.000000e+00, %12 ], [ %1697, %.lr.ph ], !dbg !55
  %2239 = phi float [ 0.000000e+00, %12 ], [ %1698, %.lr.ph ], !dbg !55
  %2240 = phi float [ 0.000000e+00, %12 ], [ %1713, %.lr.ph ], !dbg !55
  %2241 = phi float [ 0.000000e+00, %12 ], [ %1714, %.lr.ph ], !dbg !55
  %2242 = phi float [ 0.000000e+00, %12 ], [ %1715, %.lr.ph ], !dbg !55
  %2243 = phi float [ 0.000000e+00, %12 ], [ %1716, %.lr.ph ], !dbg !55
  %2244 = phi float [ 0.000000e+00, %12 ], [ %1719, %.lr.ph ], !dbg !55
  %2245 = phi float [ 0.000000e+00, %12 ], [ %1720, %.lr.ph ], !dbg !55
  %2246 = phi float [ 0.000000e+00, %12 ], [ %1721, %.lr.ph ], !dbg !55
  %2247 = phi float [ 0.000000e+00, %12 ], [ %1722, %.lr.ph ], !dbg !55
  %2248 = phi float [ 0.000000e+00, %12 ], [ %1653, %.lr.ph ], !dbg !55
  %2249 = phi float [ 0.000000e+00, %12 ], [ %1654, %.lr.ph ], !dbg !55
  %2250 = phi float [ 0.000000e+00, %12 ], [ %1655, %.lr.ph ], !dbg !55
  %2251 = phi float [ 0.000000e+00, %12 ], [ %1656, %.lr.ph ], !dbg !55
  %2252 = phi float [ 0.000000e+00, %12 ], [ %1659, %.lr.ph ], !dbg !55
  %2253 = phi float [ 0.000000e+00, %12 ], [ %1660, %.lr.ph ], !dbg !55
  %2254 = phi float [ 0.000000e+00, %12 ], [ %1661, %.lr.ph ], !dbg !55
  %2255 = phi float [ 0.000000e+00, %12 ], [ %1662, %.lr.ph ], !dbg !55
  %2256 = phi float [ 0.000000e+00, %12 ], [ %1677, %.lr.ph ], !dbg !55
  %2257 = phi float [ 0.000000e+00, %12 ], [ %1678, %.lr.ph ], !dbg !55
  %2258 = phi float [ 0.000000e+00, %12 ], [ %1679, %.lr.ph ], !dbg !55
  %2259 = phi float [ 0.000000e+00, %12 ], [ %1680, %.lr.ph ], !dbg !55
  %2260 = phi float [ 0.000000e+00, %12 ], [ %1683, %.lr.ph ], !dbg !55
  %2261 = phi float [ 0.000000e+00, %12 ], [ %1684, %.lr.ph ], !dbg !55
  %2262 = phi float [ 0.000000e+00, %12 ], [ %1685, %.lr.ph ], !dbg !55
  %2263 = phi float [ 0.000000e+00, %12 ], [ %1686, %.lr.ph ], !dbg !55
  %2264 = phi float [ 0.000000e+00, %12 ], [ %1701, %.lr.ph ], !dbg !55
  %2265 = phi float [ 0.000000e+00, %12 ], [ %1702, %.lr.ph ], !dbg !55
  %2266 = phi float [ 0.000000e+00, %12 ], [ %1703, %.lr.ph ], !dbg !55
  %2267 = phi float [ 0.000000e+00, %12 ], [ %1704, %.lr.ph ], !dbg !55
  %2268 = phi float [ 0.000000e+00, %12 ], [ %1707, %.lr.ph ], !dbg !55
  %2269 = phi float [ 0.000000e+00, %12 ], [ %1708, %.lr.ph ], !dbg !55
  %2270 = phi float [ 0.000000e+00, %12 ], [ %1709, %.lr.ph ], !dbg !55
  %2271 = phi float [ 0.000000e+00, %12 ], [ %1710, %.lr.ph ], !dbg !55
  %2272 = phi float [ 0.000000e+00, %12 ], [ %1725, %.lr.ph ], !dbg !55
  %2273 = phi float [ 0.000000e+00, %12 ], [ %1726, %.lr.ph ], !dbg !55
  %2274 = phi float [ 0.000000e+00, %12 ], [ %1727, %.lr.ph ], !dbg !55
  %2275 = phi float [ 0.000000e+00, %12 ], [ %1728, %.lr.ph ], !dbg !55
  %2276 = phi float [ 0.000000e+00, %12 ], [ %1731, %.lr.ph ], !dbg !55
  %2277 = phi float [ 0.000000e+00, %12 ], [ %1732, %.lr.ph ], !dbg !55
  %2278 = phi float [ 0.000000e+00, %12 ], [ %1733, %.lr.ph ], !dbg !55
  %2279 = phi float [ 0.000000e+00, %12 ], [ %1734, %.lr.ph ], !dbg !55
  %2280 = phi float [ 0.000000e+00, %12 ], [ %1737, %.lr.ph ], !dbg !55
  %2281 = phi float [ 0.000000e+00, %12 ], [ %1738, %.lr.ph ], !dbg !55
  %2282 = phi float [ 0.000000e+00, %12 ], [ %1739, %.lr.ph ], !dbg !55
  %2283 = phi float [ 0.000000e+00, %12 ], [ %1740, %.lr.ph ], !dbg !55
  %2284 = phi float [ 0.000000e+00, %12 ], [ %1743, %.lr.ph ], !dbg !55
  %2285 = phi float [ 0.000000e+00, %12 ], [ %1744, %.lr.ph ], !dbg !55
  %2286 = phi float [ 0.000000e+00, %12 ], [ %1745, %.lr.ph ], !dbg !55
  %2287 = phi float [ 0.000000e+00, %12 ], [ %1746, %.lr.ph ], !dbg !55
  %2288 = phi float [ 0.000000e+00, %12 ], [ %1761, %.lr.ph ], !dbg !55
  %2289 = phi float [ 0.000000e+00, %12 ], [ %1762, %.lr.ph ], !dbg !55
  %2290 = phi float [ 0.000000e+00, %12 ], [ %1763, %.lr.ph ], !dbg !55
  %2291 = phi float [ 0.000000e+00, %12 ], [ %1764, %.lr.ph ], !dbg !55
  %2292 = phi float [ 0.000000e+00, %12 ], [ %1767, %.lr.ph ], !dbg !55
  %2293 = phi float [ 0.000000e+00, %12 ], [ %1768, %.lr.ph ], !dbg !55
  %2294 = phi float [ 0.000000e+00, %12 ], [ %1769, %.lr.ph ], !dbg !55
  %2295 = phi float [ 0.000000e+00, %12 ], [ %1770, %.lr.ph ], !dbg !55
  %2296 = phi float [ 0.000000e+00, %12 ], [ %1785, %.lr.ph ], !dbg !55
  %2297 = phi float [ 0.000000e+00, %12 ], [ %1786, %.lr.ph ], !dbg !55
  %2298 = phi float [ 0.000000e+00, %12 ], [ %1787, %.lr.ph ], !dbg !55
  %2299 = phi float [ 0.000000e+00, %12 ], [ %1788, %.lr.ph ], !dbg !55
  %2300 = phi float [ 0.000000e+00, %12 ], [ %1791, %.lr.ph ], !dbg !55
  %2301 = phi float [ 0.000000e+00, %12 ], [ %1792, %.lr.ph ], !dbg !55
  %2302 = phi float [ 0.000000e+00, %12 ], [ %1793, %.lr.ph ], !dbg !55
  %2303 = phi float [ 0.000000e+00, %12 ], [ %1794, %.lr.ph ], !dbg !55
  %2304 = phi float [ 0.000000e+00, %12 ], [ %1809, %.lr.ph ], !dbg !55
  %2305 = phi float [ 0.000000e+00, %12 ], [ %1810, %.lr.ph ], !dbg !55
  %2306 = phi float [ 0.000000e+00, %12 ], [ %1811, %.lr.ph ], !dbg !55
  %2307 = phi float [ 0.000000e+00, %12 ], [ %1812, %.lr.ph ], !dbg !55
  %2308 = phi float [ 0.000000e+00, %12 ], [ %1815, %.lr.ph ], !dbg !55
  %2309 = phi float [ 0.000000e+00, %12 ], [ %1816, %.lr.ph ], !dbg !55
  %2310 = phi float [ 0.000000e+00, %12 ], [ %1817, %.lr.ph ], !dbg !55
  %2311 = phi float [ 0.000000e+00, %12 ], [ %1818, %.lr.ph ], !dbg !55
  %2312 = phi float [ 0.000000e+00, %12 ], [ %1749, %.lr.ph ], !dbg !55
  %2313 = phi float [ 0.000000e+00, %12 ], [ %1750, %.lr.ph ], !dbg !55
  %2314 = phi float [ 0.000000e+00, %12 ], [ %1751, %.lr.ph ], !dbg !55
  %2315 = phi float [ 0.000000e+00, %12 ], [ %1752, %.lr.ph ], !dbg !55
  %2316 = phi float [ 0.000000e+00, %12 ], [ %1755, %.lr.ph ], !dbg !55
  %2317 = phi float [ 0.000000e+00, %12 ], [ %1756, %.lr.ph ], !dbg !55
  %2318 = phi float [ 0.000000e+00, %12 ], [ %1757, %.lr.ph ], !dbg !55
  %2319 = phi float [ 0.000000e+00, %12 ], [ %1758, %.lr.ph ], !dbg !55
  %2320 = phi float [ 0.000000e+00, %12 ], [ %1773, %.lr.ph ], !dbg !55
  %2321 = phi float [ 0.000000e+00, %12 ], [ %1774, %.lr.ph ], !dbg !55
  %2322 = phi float [ 0.000000e+00, %12 ], [ %1775, %.lr.ph ], !dbg !55
  %2323 = phi float [ 0.000000e+00, %12 ], [ %1776, %.lr.ph ], !dbg !55
  %2324 = phi float [ 0.000000e+00, %12 ], [ %1779, %.lr.ph ], !dbg !55
  %2325 = phi float [ 0.000000e+00, %12 ], [ %1780, %.lr.ph ], !dbg !55
  %2326 = phi float [ 0.000000e+00, %12 ], [ %1781, %.lr.ph ], !dbg !55
  %2327 = phi float [ 0.000000e+00, %12 ], [ %1782, %.lr.ph ], !dbg !55
  %2328 = phi float [ 0.000000e+00, %12 ], [ %1797, %.lr.ph ], !dbg !55
  %2329 = phi float [ 0.000000e+00, %12 ], [ %1798, %.lr.ph ], !dbg !55
  %2330 = phi float [ 0.000000e+00, %12 ], [ %1799, %.lr.ph ], !dbg !55
  %2331 = phi float [ 0.000000e+00, %12 ], [ %1800, %.lr.ph ], !dbg !55
  %2332 = phi float [ 0.000000e+00, %12 ], [ %1803, %.lr.ph ], !dbg !55
  %2333 = phi float [ 0.000000e+00, %12 ], [ %1804, %.lr.ph ], !dbg !55
  %2334 = phi float [ 0.000000e+00, %12 ], [ %1805, %.lr.ph ], !dbg !55
  %2335 = phi float [ 0.000000e+00, %12 ], [ %1806, %.lr.ph ], !dbg !55
  %2336 = phi float [ 0.000000e+00, %12 ], [ %1821, %.lr.ph ], !dbg !55
  %2337 = phi float [ 0.000000e+00, %12 ], [ %1822, %.lr.ph ], !dbg !55
  %2338 = phi float [ 0.000000e+00, %12 ], [ %1823, %.lr.ph ], !dbg !55
  %2339 = phi float [ 0.000000e+00, %12 ], [ %1824, %.lr.ph ], !dbg !55
  %2340 = phi float [ 0.000000e+00, %12 ], [ %1827, %.lr.ph ], !dbg !55
  %2341 = phi float [ 0.000000e+00, %12 ], [ %1828, %.lr.ph ], !dbg !55
  %2342 = phi float [ 0.000000e+00, %12 ], [ %1829, %.lr.ph ], !dbg !55
  %2343 = phi float [ 0.000000e+00, %12 ], [ %1830, %.lr.ph ], !dbg !55
  %2344 = phi float [ 0.000000e+00, %12 ], [ %1833, %.lr.ph ], !dbg !55
  %2345 = phi float [ 0.000000e+00, %12 ], [ %1834, %.lr.ph ], !dbg !55
  %2346 = phi float [ 0.000000e+00, %12 ], [ %1835, %.lr.ph ], !dbg !55
  %2347 = phi float [ 0.000000e+00, %12 ], [ %1836, %.lr.ph ], !dbg !55
  %2348 = phi float [ 0.000000e+00, %12 ], [ %1839, %.lr.ph ], !dbg !55
  %2349 = phi float [ 0.000000e+00, %12 ], [ %1840, %.lr.ph ], !dbg !55
  %2350 = phi float [ 0.000000e+00, %12 ], [ %1841, %.lr.ph ], !dbg !55
  %2351 = phi float [ 0.000000e+00, %12 ], [ %1842, %.lr.ph ], !dbg !55
  %2352 = phi float [ 0.000000e+00, %12 ], [ %1857, %.lr.ph ], !dbg !55
  %2353 = phi float [ 0.000000e+00, %12 ], [ %1858, %.lr.ph ], !dbg !55
  %2354 = phi float [ 0.000000e+00, %12 ], [ %1859, %.lr.ph ], !dbg !55
  %2355 = phi float [ 0.000000e+00, %12 ], [ %1860, %.lr.ph ], !dbg !55
  %2356 = phi float [ 0.000000e+00, %12 ], [ %1863, %.lr.ph ], !dbg !55
  %2357 = phi float [ 0.000000e+00, %12 ], [ %1864, %.lr.ph ], !dbg !55
  %2358 = phi float [ 0.000000e+00, %12 ], [ %1865, %.lr.ph ], !dbg !55
  %2359 = phi float [ 0.000000e+00, %12 ], [ %1866, %.lr.ph ], !dbg !55
  %2360 = phi float [ 0.000000e+00, %12 ], [ %1881, %.lr.ph ], !dbg !55
  %2361 = phi float [ 0.000000e+00, %12 ], [ %1882, %.lr.ph ], !dbg !55
  %2362 = phi float [ 0.000000e+00, %12 ], [ %1883, %.lr.ph ], !dbg !55
  %2363 = phi float [ 0.000000e+00, %12 ], [ %1884, %.lr.ph ], !dbg !55
  %2364 = phi float [ 0.000000e+00, %12 ], [ %1887, %.lr.ph ], !dbg !55
  %2365 = phi float [ 0.000000e+00, %12 ], [ %1888, %.lr.ph ], !dbg !55
  %2366 = phi float [ 0.000000e+00, %12 ], [ %1889, %.lr.ph ], !dbg !55
  %2367 = phi float [ 0.000000e+00, %12 ], [ %1890, %.lr.ph ], !dbg !55
  %2368 = phi float [ 0.000000e+00, %12 ], [ %1905, %.lr.ph ], !dbg !55
  %2369 = phi float [ 0.000000e+00, %12 ], [ %1906, %.lr.ph ], !dbg !55
  %2370 = phi float [ 0.000000e+00, %12 ], [ %1907, %.lr.ph ], !dbg !55
  %2371 = phi float [ 0.000000e+00, %12 ], [ %1908, %.lr.ph ], !dbg !55
  %2372 = phi float [ 0.000000e+00, %12 ], [ %1911, %.lr.ph ], !dbg !55
  %2373 = phi float [ 0.000000e+00, %12 ], [ %1912, %.lr.ph ], !dbg !55
  %2374 = phi float [ 0.000000e+00, %12 ], [ %1913, %.lr.ph ], !dbg !55
  %2375 = phi float [ 0.000000e+00, %12 ], [ %1914, %.lr.ph ], !dbg !55
  %2376 = phi float [ 0.000000e+00, %12 ], [ %1845, %.lr.ph ], !dbg !55
  %2377 = phi float [ 0.000000e+00, %12 ], [ %1846, %.lr.ph ], !dbg !55
  %2378 = phi float [ 0.000000e+00, %12 ], [ %1847, %.lr.ph ], !dbg !55
  %2379 = phi float [ 0.000000e+00, %12 ], [ %1848, %.lr.ph ], !dbg !55
  %2380 = phi float [ 0.000000e+00, %12 ], [ %1851, %.lr.ph ], !dbg !55
  %2381 = phi float [ 0.000000e+00, %12 ], [ %1852, %.lr.ph ], !dbg !55
  %2382 = phi float [ 0.000000e+00, %12 ], [ %1853, %.lr.ph ], !dbg !55
  %2383 = phi float [ 0.000000e+00, %12 ], [ %1854, %.lr.ph ], !dbg !55
  %2384 = phi float [ 0.000000e+00, %12 ], [ %1869, %.lr.ph ], !dbg !55
  %2385 = phi float [ 0.000000e+00, %12 ], [ %1870, %.lr.ph ], !dbg !55
  %2386 = phi float [ 0.000000e+00, %12 ], [ %1871, %.lr.ph ], !dbg !55
  %2387 = phi float [ 0.000000e+00, %12 ], [ %1872, %.lr.ph ], !dbg !55
  %2388 = phi float [ 0.000000e+00, %12 ], [ %1875, %.lr.ph ], !dbg !55
  %2389 = phi float [ 0.000000e+00, %12 ], [ %1876, %.lr.ph ], !dbg !55
  %2390 = phi float [ 0.000000e+00, %12 ], [ %1877, %.lr.ph ], !dbg !55
  %2391 = phi float [ 0.000000e+00, %12 ], [ %1878, %.lr.ph ], !dbg !55
  %2392 = phi float [ 0.000000e+00, %12 ], [ %1893, %.lr.ph ], !dbg !55
  %2393 = phi float [ 0.000000e+00, %12 ], [ %1894, %.lr.ph ], !dbg !55
  %2394 = phi float [ 0.000000e+00, %12 ], [ %1895, %.lr.ph ], !dbg !55
  %2395 = phi float [ 0.000000e+00, %12 ], [ %1896, %.lr.ph ], !dbg !55
  %2396 = phi float [ 0.000000e+00, %12 ], [ %1899, %.lr.ph ], !dbg !55
  %2397 = phi float [ 0.000000e+00, %12 ], [ %1900, %.lr.ph ], !dbg !55
  %2398 = phi float [ 0.000000e+00, %12 ], [ %1901, %.lr.ph ], !dbg !55
  %2399 = phi float [ 0.000000e+00, %12 ], [ %1902, %.lr.ph ], !dbg !55
  %2400 = phi float [ 0.000000e+00, %12 ], [ %1917, %.lr.ph ], !dbg !55
  %2401 = phi float [ 0.000000e+00, %12 ], [ %1918, %.lr.ph ], !dbg !55
  %2402 = phi float [ 0.000000e+00, %12 ], [ %1919, %.lr.ph ], !dbg !55
  %2403 = phi float [ 0.000000e+00, %12 ], [ %1920, %.lr.ph ], !dbg !55
  %2404 = phi float [ 0.000000e+00, %12 ], [ %1923, %.lr.ph ], !dbg !55
  %2405 = phi float [ 0.000000e+00, %12 ], [ %1924, %.lr.ph ], !dbg !55
  %2406 = phi float [ 0.000000e+00, %12 ], [ %1925, %.lr.ph ], !dbg !55
  %2407 = phi float [ 0.000000e+00, %12 ], [ %1926, %.lr.ph ], !dbg !55
  %2408 = phi <2 x half> [ %334, %12 ], [ %1960, %.lr.ph ]
  %2409 = phi <2 x half> [ %335, %12 ], [ %1961, %.lr.ph ]
  %2410 = phi <2 x half> [ %336, %12 ], [ %1962, %.lr.ph ]
  %2411 = phi <2 x half> [ %337, %12 ], [ %1963, %.lr.ph ]
  %2412 = phi <2 x half> [ %338, %12 ], [ %1964, %.lr.ph ]
  %2413 = phi <2 x half> [ %339, %12 ], [ %1965, %.lr.ph ]
  %2414 = phi <2 x half> [ %340, %12 ], [ %1966, %.lr.ph ]
  %2415 = phi <2 x half> [ %341, %12 ], [ %1967, %.lr.ph ]
  %2416 = phi <2 x half> [ %342, %12 ], [ %1968, %.lr.ph ]
  %2417 = phi <2 x half> [ %343, %12 ], [ %1969, %.lr.ph ]
  %2418 = phi <2 x half> [ %344, %12 ], [ %1970, %.lr.ph ]
  %2419 = phi <2 x half> [ %345, %12 ], [ %1971, %.lr.ph ]
  %2420 = phi <2 x half> [ %346, %12 ], [ %1972, %.lr.ph ]
  %2421 = phi <2 x half> [ %347, %12 ], [ %1973, %.lr.ph ]
  %2422 = phi <2 x half> [ %348, %12 ], [ %1974, %.lr.ph ]
  %2423 = phi <2 x half> [ %349, %12 ], [ %1975, %.lr.ph ]
  %2424 = phi <2 x half> [ %350, %12 ], [ %1976, %.lr.ph ]
  %2425 = phi <2 x half> [ %351, %12 ], [ %1977, %.lr.ph ]
  %2426 = phi <2 x half> [ %352, %12 ], [ %1978, %.lr.ph ]
  %2427 = phi <2 x half> [ %353, %12 ], [ %1979, %.lr.ph ]
  %2428 = phi <2 x half> [ %354, %12 ], [ %1980, %.lr.ph ]
  %2429 = phi <2 x half> [ %355, %12 ], [ %1981, %.lr.ph ]
  %2430 = phi <2 x half> [ %356, %12 ], [ %1982, %.lr.ph ]
  %2431 = phi <2 x half> [ %357, %12 ], [ %1983, %.lr.ph ]
  %2432 = phi <2 x half> [ %358, %12 ], [ %1984, %.lr.ph ]
  %2433 = phi <2 x half> [ %359, %12 ], [ %1985, %.lr.ph ]
  %2434 = phi <2 x half> [ %360, %12 ], [ %1986, %.lr.ph ]
  %2435 = phi <2 x half> [ %361, %12 ], [ %1987, %.lr.ph ]
  %2436 = phi <2 x half> [ %362, %12 ], [ %1988, %.lr.ph ]
  %2437 = phi <2 x half> [ %363, %12 ], [ %1989, %.lr.ph ]
  %2438 = phi <2 x half> [ %364, %12 ], [ %1990, %.lr.ph ]
  %2439 = phi <2 x half> [ %365, %12 ], [ %1991, %.lr.ph ]
  %2440 = phi <2 x half> [ %366, %12 ], [ %1992, %.lr.ph ]
  %2441 = phi <2 x half> [ %367, %12 ], [ %1993, %.lr.ph ]
  %2442 = phi <2 x half> [ %368, %12 ], [ %1994, %.lr.ph ]
  %2443 = phi <2 x half> [ %369, %12 ], [ %1995, %.lr.ph ]
  %2444 = phi <2 x half> [ %370, %12 ], [ %1996, %.lr.ph ]
  %2445 = phi <2 x half> [ %371, %12 ], [ %1997, %.lr.ph ]
  %2446 = phi <2 x half> [ %372, %12 ], [ %1998, %.lr.ph ]
  %2447 = phi <2 x half> [ %373, %12 ], [ %1999, %.lr.ph ]
  %2448 = phi <2 x half> [ %374, %12 ], [ %2000, %.lr.ph ]
  %2449 = phi <2 x half> [ %375, %12 ], [ %2001, %.lr.ph ]
  %2450 = phi <2 x half> [ %376, %12 ], [ %2002, %.lr.ph ]
  %2451 = phi <2 x half> [ %377, %12 ], [ %2003, %.lr.ph ]
  %2452 = phi <2 x half> [ %378, %12 ], [ %2004, %.lr.ph ]
  %2453 = phi <2 x half> [ %379, %12 ], [ %2005, %.lr.ph ]
  %2454 = phi <2 x half> [ %380, %12 ], [ %2006, %.lr.ph ]
  %2455 = phi <2 x half> [ %381, %12 ], [ %2007, %.lr.ph ]
  %2456 = phi <2 x half> [ %382, %12 ], [ %2008, %.lr.ph ]
  %2457 = phi <2 x half> [ %383, %12 ], [ %2009, %.lr.ph ]
  %2458 = phi <2 x half> [ %384, %12 ], [ %2010, %.lr.ph ]
  %2459 = phi <2 x half> [ %385, %12 ], [ %2011, %.lr.ph ]
  %2460 = phi <2 x half> [ %386, %12 ], [ %2012, %.lr.ph ]
  %2461 = phi <2 x half> [ %387, %12 ], [ %2013, %.lr.ph ]
  %2462 = phi <2 x half> [ %388, %12 ], [ %2014, %.lr.ph ]
  %2463 = phi <2 x half> [ %389, %12 ], [ %2015, %.lr.ph ]
  %2464 = phi <2 x half> [ %390, %12 ], [ %2016, %.lr.ph ]
  %2465 = phi <2 x half> [ %391, %12 ], [ %2017, %.lr.ph ]
  %2466 = phi <2 x half> [ %392, %12 ], [ %2018, %.lr.ph ]
  %2467 = phi <2 x half> [ %393, %12 ], [ %2019, %.lr.ph ]
  %2468 = phi <2 x half> [ %394, %12 ], [ %2020, %.lr.ph ]
  %2469 = phi <2 x half> [ %395, %12 ], [ %2021, %.lr.ph ]
  %2470 = phi <2 x half> [ %396, %12 ], [ %2022, %.lr.ph ]
  %2471 = phi <2 x half> [ %397, %12 ], [ %2023, %.lr.ph ]
  %2472 = phi <2 x half> [ %398, %12 ], [ %2024, %.lr.ph ]
  %2473 = phi <2 x half> [ %399, %12 ], [ %2025, %.lr.ph ]
  %2474 = phi <2 x half> [ %400, %12 ], [ %2026, %.lr.ph ]
  %2475 = phi <2 x half> [ %401, %12 ], [ %2027, %.lr.ph ]
  %2476 = phi <2 x half> [ %402, %12 ], [ %2028, %.lr.ph ]
  %2477 = phi <2 x half> [ %403, %12 ], [ %2029, %.lr.ph ]
  %2478 = phi <2 x half> [ %404, %12 ], [ %2030, %.lr.ph ]
  %2479 = phi <2 x half> [ %405, %12 ], [ %2031, %.lr.ph ]
  %2480 = phi <2 x half> [ %406, %12 ], [ %2032, %.lr.ph ]
  %2481 = phi <2 x half> [ %407, %12 ], [ %2033, %.lr.ph ]
  %2482 = phi <2 x half> [ %408, %12 ], [ %2034, %.lr.ph ]
  %2483 = phi <2 x half> [ %409, %12 ], [ %2035, %.lr.ph ]
  %2484 = phi <2 x half> [ %410, %12 ], [ %2036, %.lr.ph ]
  %2485 = phi <2 x half> [ %411, %12 ], [ %2037, %.lr.ph ]
  %2486 = phi <2 x half> [ %412, %12 ], [ %2038, %.lr.ph ]
  %2487 = phi <2 x half> [ %413, %12 ], [ %2039, %.lr.ph ]
  %2488 = phi <2 x half> [ %414, %12 ], [ %2040, %.lr.ph ]
  %2489 = phi <2 x half> [ %415, %12 ], [ %2041, %.lr.ph ]
  %2490 = phi <2 x half> [ %416, %12 ], [ %2042, %.lr.ph ]
  %2491 = phi <2 x half> [ %417, %12 ], [ %2043, %.lr.ph ]
  %2492 = phi <2 x half> [ %418, %12 ], [ %2044, %.lr.ph ]
  %2493 = phi <2 x half> [ %419, %12 ], [ %2045, %.lr.ph ]
  %2494 = phi <2 x half> [ %420, %12 ], [ %2046, %.lr.ph ]
  %2495 = phi <2 x half> [ %421, %12 ], [ %2047, %.lr.ph ]
  %2496 = phi <2 x half> [ %422, %12 ], [ %2048, %.lr.ph ]
  %2497 = phi <2 x half> [ %423, %12 ], [ %2049, %.lr.ph ]
  %2498 = phi <2 x half> [ %424, %12 ], [ %2050, %.lr.ph ]
  %2499 = phi <2 x half> [ %425, %12 ], [ %2051, %.lr.ph ]
  %2500 = phi <2 x half> [ %426, %12 ], [ %2052, %.lr.ph ]
  %2501 = phi <2 x half> [ %427, %12 ], [ %2053, %.lr.ph ]
  %2502 = phi <2 x half> [ %428, %12 ], [ %2054, %.lr.ph ]
  %2503 = phi <2 x half> [ %429, %12 ], [ %2055, %.lr.ph ]
  %2504 = phi <2 x half> [ %430, %12 ], [ %2056, %.lr.ph ]
  %2505 = phi <2 x half> [ %431, %12 ], [ %2057, %.lr.ph ]
  %2506 = phi <2 x half> [ %432, %12 ], [ %2058, %.lr.ph ]
  %2507 = phi <2 x half> [ %433, %12 ], [ %2059, %.lr.ph ]
  %2508 = phi <2 x half> [ %434, %12 ], [ %2060, %.lr.ph ]
  %2509 = phi <2 x half> [ %435, %12 ], [ %2061, %.lr.ph ]
  %2510 = phi <2 x half> [ %436, %12 ], [ %2062, %.lr.ph ]
  %2511 = phi <2 x half> [ %437, %12 ], [ %2063, %.lr.ph ]
  %2512 = phi <2 x half> [ %438, %12 ], [ %2064, %.lr.ph ]
  %2513 = phi <2 x half> [ %439, %12 ], [ %2065, %.lr.ph ]
  %2514 = phi <2 x half> [ %440, %12 ], [ %2066, %.lr.ph ]
  %2515 = phi <2 x half> [ %441, %12 ], [ %2067, %.lr.ph ]
  %2516 = phi <2 x half> [ %442, %12 ], [ %2068, %.lr.ph ]
  %2517 = phi <2 x half> [ %443, %12 ], [ %2069, %.lr.ph ]
  %2518 = phi <2 x half> [ %444, %12 ], [ %2070, %.lr.ph ]
  %2519 = phi <2 x half> [ %445, %12 ], [ %2071, %.lr.ph ]
  %2520 = phi <2 x half> [ %446, %12 ], [ %2072, %.lr.ph ]
  %2521 = phi <2 x half> [ %447, %12 ], [ %2073, %.lr.ph ]
  %2522 = phi <2 x half> [ %448, %12 ], [ %2074, %.lr.ph ]
  %2523 = phi <2 x half> [ %449, %12 ], [ %2075, %.lr.ph ]
  %2524 = phi <2 x half> [ %450, %12 ], [ %2076, %.lr.ph ]
  %2525 = phi <2 x half> [ %451, %12 ], [ %2077, %.lr.ph ]
  %2526 = phi <2 x half> [ %452, %12 ], [ %2078, %.lr.ph ]
  %2527 = phi <2 x half> [ %453, %12 ], [ %2079, %.lr.ph ]
  %2528 = phi <2 x half> [ %454, %12 ], [ %2080, %.lr.ph ]
  %2529 = phi <2 x half> [ %455, %12 ], [ %2081, %.lr.ph ]
  %2530 = phi <2 x half> [ %456, %12 ], [ %2082, %.lr.ph ]
  %2531 = phi <2 x half> [ %457, %12 ], [ %2083, %.lr.ph ]
  %2532 = phi <2 x half> [ %458, %12 ], [ %2084, %.lr.ph ]
  %2533 = phi <2 x half> [ %459, %12 ], [ %2085, %.lr.ph ]
  %2534 = phi <2 x half> [ %460, %12 ], [ %2086, %.lr.ph ]
  %2535 = phi <2 x half> [ %461, %12 ], [ %2087, %.lr.ph ]
  %2536 = phi <2 x half> [ %462, %12 ], [ %2088, %.lr.ph ]
  %2537 = phi <2 x half> [ %463, %12 ], [ %2089, %.lr.ph ]
  %2538 = phi <2 x half> [ %464, %12 ], [ %2090, %.lr.ph ]
  %2539 = phi <2 x half> [ %465, %12 ], [ %2091, %.lr.ph ]
  %2540 = phi <2 x half> [ %466, %12 ], [ %2092, %.lr.ph ]
  %2541 = phi <2 x half> [ %467, %12 ], [ %2093, %.lr.ph ]
  %2542 = phi <2 x half> [ %468, %12 ], [ %2094, %.lr.ph ]
  %2543 = phi <2 x half> [ %469, %12 ], [ %2095, %.lr.ph ]
  %2544 = phi <2 x half> [ %470, %12 ], [ %2096, %.lr.ph ]
  %2545 = phi <2 x half> [ %471, %12 ], [ %2097, %.lr.ph ]
  %2546 = phi <2 x half> [ %472, %12 ], [ %2098, %.lr.ph ]
  %2547 = phi <2 x half> [ %473, %12 ], [ %2099, %.lr.ph ]
  %2548 = phi <2 x half> [ %474, %12 ], [ %2100, %.lr.ph ]
  %2549 = phi <2 x half> [ %475, %12 ], [ %2101, %.lr.ph ]
  %2550 = phi <2 x half> [ %476, %12 ], [ %2102, %.lr.ph ]
  %2551 = phi <2 x half> [ %477, %12 ], [ %2103, %.lr.ph ]
  %2552 = phi <2 x half> [ %478, %12 ], [ %2104, %.lr.ph ]
  %2553 = phi <2 x half> [ %479, %12 ], [ %2105, %.lr.ph ]
  %2554 = phi <2 x half> [ %480, %12 ], [ %2106, %.lr.ph ]
  %2555 = phi <2 x half> [ %481, %12 ], [ %2107, %.lr.ph ]
  %2556 = phi <2 x half> [ %482, %12 ], [ %2108, %.lr.ph ]
  %2557 = phi <2 x half> [ %483, %12 ], [ %2109, %.lr.ph ]
  %2558 = phi <2 x half> [ %484, %12 ], [ %2110, %.lr.ph ]
  %2559 = phi <2 x half> [ %485, %12 ], [ %2111, %.lr.ph ]
  %2560 = phi <2 x half> [ %486, %12 ], [ %2112, %.lr.ph ]
  %2561 = phi <2 x half> [ %487, %12 ], [ %2113, %.lr.ph ]
  %2562 = phi <2 x half> [ %488, %12 ], [ %2114, %.lr.ph ]
  %2563 = phi <2 x half> [ %489, %12 ], [ %2115, %.lr.ph ]
  %2564 = phi <2 x half> [ %490, %12 ], [ %2116, %.lr.ph ]
  %2565 = phi <2 x half> [ %491, %12 ], [ %2117, %.lr.ph ]
  %2566 = phi <2 x half> [ %492, %12 ], [ %2118, %.lr.ph ]
  %2567 = phi <2 x half> [ %493, %12 ], [ %2119, %.lr.ph ]
  %2568 = phi <2 x half> [ %494, %12 ], [ %2120, %.lr.ph ]
  %2569 = phi <2 x half> [ %495, %12 ], [ %2121, %.lr.ph ]
  %2570 = phi <2 x half> [ %496, %12 ], [ %2122, %.lr.ph ]
  %2571 = phi <2 x half> [ %497, %12 ], [ %2123, %.lr.ph ]
  %2572 = phi <2 x half> [ %498, %12 ], [ %2124, %.lr.ph ]
  %2573 = phi <2 x half> [ %499, %12 ], [ %2125, %.lr.ph ]
  %2574 = phi <2 x half> [ %500, %12 ], [ %2126, %.lr.ph ]
  %2575 = phi <2 x half> [ %501, %12 ], [ %2127, %.lr.ph ]
  %2576 = phi <2 x half> [ %502, %12 ], [ %2128, %.lr.ph ]
  %2577 = phi <2 x half> [ %503, %12 ], [ %2129, %.lr.ph ]
  %2578 = phi <2 x half> [ %504, %12 ], [ %2130, %.lr.ph ]
  %2579 = phi <2 x half> [ %505, %12 ], [ %2131, %.lr.ph ]
  %2580 = phi <2 x half> [ %506, %12 ], [ %2132, %.lr.ph ]
  %2581 = phi <2 x half> [ %507, %12 ], [ %2133, %.lr.ph ]
  %2582 = phi <2 x half> [ %508, %12 ], [ %2134, %.lr.ph ]
  %2583 = phi <2 x half> [ %509, %12 ], [ %2135, %.lr.ph ]
  %2584 = phi <2 x half> [ %510, %12 ], [ %2136, %.lr.ph ]
  %2585 = phi <2 x half> [ %511, %12 ], [ %2137, %.lr.ph ]
  %2586 = phi <2 x half> [ %512, %12 ], [ %2138, %.lr.ph ]
  %2587 = phi <2 x half> [ %513, %12 ], [ %2139, %.lr.ph ]
  %2588 = phi <2 x half> [ %514, %12 ], [ %2140, %.lr.ph ]
  %2589 = phi <2 x half> [ %515, %12 ], [ %2141, %.lr.ph ]
  %2590 = phi <2 x half> [ %516, %12 ], [ %2142, %.lr.ph ]
  %2591 = phi <2 x half> [ %517, %12 ], [ %2143, %.lr.ph ]
  %2592 = phi <2 x half> [ %518, %12 ], [ %2144, %.lr.ph ]
  %2593 = phi <2 x half> [ %519, %12 ], [ %2145, %.lr.ph ]
  %2594 = phi <2 x half> [ %520, %12 ], [ %2146, %.lr.ph ]
  %2595 = phi <2 x half> [ %521, %12 ], [ %2147, %.lr.ph ]
  %2596 = phi <2 x half> [ %522, %12 ], [ %2148, %.lr.ph ]
  %2597 = phi <2 x half> [ %523, %12 ], [ %2149, %.lr.ph ]
  %2598 = phi <2 x half> [ %524, %12 ], [ %2150, %.lr.ph ]
  %2599 = phi <2 x half> [ %525, %12 ], [ %2151, %.lr.ph ]
  fence syncscope("workgroup") release, !dbg !36
  tail call void @llvm.amdgcn.s.barrier(), !dbg !36
  fence syncscope("workgroup") acquire, !dbg !36
  %2600 = shufflevector <2 x half> %2536, <2 x half> %2568, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2601 = shufflevector <2 x half> %2569, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2602 = shufflevector <8 x half> %2600, <8 x half> %2601, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2603 = shufflevector <2 x half> %2537, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2604 = shufflevector <8 x half> %2602, <8 x half> %2603, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2604, ptr addrspace(3) %199, align 16, !dbg !36
  %2605 = shufflevector <2 x half> %2538, <2 x half> %2570, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2606 = shufflevector <2 x half> %2571, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2607 = shufflevector <8 x half> %2605, <8 x half> %2606, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2608 = shufflevector <2 x half> %2539, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2609 = shufflevector <8 x half> %2607, <8 x half> %2608, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2609, ptr addrspace(3) %201, align 16, !dbg !36
  %2610 = shufflevector <2 x half> %2540, <2 x half> %2572, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2611 = shufflevector <2 x half> %2573, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2612 = shufflevector <8 x half> %2610, <8 x half> %2611, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2613 = shufflevector <2 x half> %2541, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2614 = shufflevector <8 x half> %2612, <8 x half> %2613, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2614, ptr addrspace(3) %203, align 16, !dbg !36
  %2615 = shufflevector <2 x half> %2542, <2 x half> %2574, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2616 = shufflevector <2 x half> %2575, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2617 = shufflevector <8 x half> %2615, <8 x half> %2616, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2618 = shufflevector <2 x half> %2543, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2619 = shufflevector <8 x half> %2617, <8 x half> %2618, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2619, ptr addrspace(3) %205, align 16, !dbg !36
  %2620 = shufflevector <2 x half> %2544, <2 x half> %2576, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2621 = shufflevector <2 x half> %2577, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2622 = shufflevector <8 x half> %2620, <8 x half> %2621, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2623 = shufflevector <2 x half> %2545, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2624 = shufflevector <8 x half> %2622, <8 x half> %2623, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2624, ptr addrspace(3) %207, align 16, !dbg !36
  %2625 = shufflevector <2 x half> %2546, <2 x half> %2578, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2626 = shufflevector <2 x half> %2579, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2627 = shufflevector <8 x half> %2625, <8 x half> %2626, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2628 = shufflevector <2 x half> %2547, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2629 = shufflevector <8 x half> %2627, <8 x half> %2628, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2629, ptr addrspace(3) %209, align 16, !dbg !36
  %2630 = shufflevector <2 x half> %2548, <2 x half> %2580, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2631 = shufflevector <2 x half> %2581, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2632 = shufflevector <8 x half> %2630, <8 x half> %2631, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2633 = shufflevector <2 x half> %2549, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2634 = shufflevector <8 x half> %2632, <8 x half> %2633, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2634, ptr addrspace(3) %211, align 16, !dbg !36
  %2635 = shufflevector <2 x half> %2550, <2 x half> %2582, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2636 = shufflevector <2 x half> %2583, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2637 = shufflevector <8 x half> %2635, <8 x half> %2636, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %2638 = shufflevector <2 x half> %2551, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %2639 = shufflevector <8 x half> %2637, <8 x half> %2638, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x half> %2639, ptr addrspace(3) %213, align 16, !dbg !36
  %2640 = shufflevector <2 x half> %2552, <2 x half> %2584, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2641 = shufflevector <2 x half> %2585, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2642 = shufflevector <8 x half> %2640, <8 x half> %2641, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2643 = shufflevector <2 x half> %2553, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2644 = shufflevector <8 x half> %2642, <8 x half> %2643, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2644, ptr addrspace(3) %214, align 16, !dbg !40
  %2645 = shufflevector <2 x half> %2554, <2 x half> %2586, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2646 = shufflevector <2 x half> %2587, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2647 = shufflevector <8 x half> %2645, <8 x half> %2646, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2648 = shufflevector <2 x half> %2555, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2649 = shufflevector <8 x half> %2647, <8 x half> %2648, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2649, ptr addrspace(3) %215, align 16, !dbg !40
  %2650 = shufflevector <2 x half> %2556, <2 x half> %2588, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2651 = shufflevector <2 x half> %2589, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2652 = shufflevector <8 x half> %2650, <8 x half> %2651, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2653 = shufflevector <2 x half> %2557, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2654 = shufflevector <8 x half> %2652, <8 x half> %2653, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2654, ptr addrspace(3) %216, align 16, !dbg !40
  %2655 = shufflevector <2 x half> %2558, <2 x half> %2590, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2656 = shufflevector <2 x half> %2591, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2657 = shufflevector <8 x half> %2655, <8 x half> %2656, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2658 = shufflevector <2 x half> %2559, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2659 = shufflevector <8 x half> %2657, <8 x half> %2658, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2659, ptr addrspace(3) %217, align 16, !dbg !40
  %2660 = shufflevector <2 x half> %2560, <2 x half> %2592, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2661 = shufflevector <2 x half> %2593, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2662 = shufflevector <8 x half> %2660, <8 x half> %2661, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2663 = shufflevector <2 x half> %2561, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2664 = shufflevector <8 x half> %2662, <8 x half> %2663, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2664, ptr addrspace(3) %218, align 16, !dbg !40
  %2665 = shufflevector <2 x half> %2562, <2 x half> %2594, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2666 = shufflevector <2 x half> %2595, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2667 = shufflevector <8 x half> %2665, <8 x half> %2666, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2668 = shufflevector <2 x half> %2563, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2669 = shufflevector <8 x half> %2667, <8 x half> %2668, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2669, ptr addrspace(3) %219, align 16, !dbg !40
  %2670 = shufflevector <2 x half> %2564, <2 x half> %2596, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2671 = shufflevector <2 x half> %2597, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2672 = shufflevector <8 x half> %2670, <8 x half> %2671, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2673 = shufflevector <2 x half> %2565, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2674 = shufflevector <8 x half> %2672, <8 x half> %2673, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2674, ptr addrspace(3) %220, align 16, !dbg !40
  %2675 = shufflevector <2 x half> %2566, <2 x half> %2598, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2676 = shufflevector <2 x half> %2599, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2677 = shufflevector <8 x half> %2675, <8 x half> %2676, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !40
  %2678 = shufflevector <2 x half> %2567, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !40
  %2679 = shufflevector <8 x half> %2677, <8 x half> %2678, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !40
  store <8 x half> %2679, ptr addrspace(3) %221, align 16, !dbg !40
  br i1 %66, label %2680, label %._crit_edge._crit_edge, !dbg !54

2680:                                             ; preds = %._crit_edge
  %2681 = shufflevector <2 x half> %2534, <2 x half> %2535, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2682 = shufflevector <2 x half> %2532, <2 x half> %2533, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2683 = shufflevector <2 x half> %2530, <2 x half> %2531, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2684 = shufflevector <2 x half> %2528, <2 x half> %2529, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2685 = shufflevector <2 x half> %2526, <2 x half> %2527, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2686 = shufflevector <2 x half> %2524, <2 x half> %2525, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2687 = shufflevector <2 x half> %2522, <2 x half> %2523, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2688 = shufflevector <2 x half> %2520, <2 x half> %2521, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2689 = shufflevector <2 x half> %2518, <2 x half> %2519, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2690 = shufflevector <2 x half> %2516, <2 x half> %2517, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2691 = shufflevector <2 x half> %2514, <2 x half> %2515, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2692 = shufflevector <2 x half> %2512, <2 x half> %2513, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2693 = shufflevector <2 x half> %2510, <2 x half> %2511, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2694 = shufflevector <2 x half> %2508, <2 x half> %2509, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2695 = shufflevector <2 x half> %2506, <2 x half> %2507, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2696 = shufflevector <2 x half> %2504, <2 x half> %2505, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2697 = shufflevector <2 x half> %2502, <2 x half> %2503, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2698 = shufflevector <2 x half> %2500, <2 x half> %2501, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2699 = shufflevector <2 x half> %2498, <2 x half> %2499, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2700 = shufflevector <2 x half> %2496, <2 x half> %2497, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2701 = shufflevector <2 x half> %2494, <2 x half> %2495, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2702 = shufflevector <2 x half> %2492, <2 x half> %2493, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2703 = shufflevector <2 x half> %2490, <2 x half> %2491, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2704 = shufflevector <2 x half> %2488, <2 x half> %2489, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2705 = shufflevector <2 x half> %2486, <2 x half> %2487, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2706 = shufflevector <2 x half> %2484, <2 x half> %2485, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2707 = shufflevector <2 x half> %2482, <2 x half> %2483, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2708 = shufflevector <2 x half> %2480, <2 x half> %2481, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2709 = shufflevector <2 x half> %2478, <2 x half> %2479, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2710 = shufflevector <2 x half> %2476, <2 x half> %2477, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2711 = shufflevector <2 x half> %2474, <2 x half> %2475, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2712 = shufflevector <2 x half> %2472, <2 x half> %2473, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2713 = shufflevector <2 x half> %2470, <2 x half> %2471, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2714 = shufflevector <2 x half> %2468, <2 x half> %2469, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2715 = shufflevector <2 x half> %2466, <2 x half> %2467, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2716 = shufflevector <2 x half> %2464, <2 x half> %2465, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2717 = shufflevector <2 x half> %2462, <2 x half> %2463, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2718 = shufflevector <2 x half> %2460, <2 x half> %2461, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2719 = shufflevector <2 x half> %2458, <2 x half> %2459, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2720 = shufflevector <2 x half> %2456, <2 x half> %2457, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2721 = shufflevector <2 x half> %2454, <2 x half> %2455, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2722 = shufflevector <2 x half> %2452, <2 x half> %2453, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2723 = shufflevector <2 x half> %2450, <2 x half> %2451, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2724 = shufflevector <2 x half> %2448, <2 x half> %2449, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2725 = shufflevector <2 x half> %2446, <2 x half> %2447, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2726 = shufflevector <2 x half> %2444, <2 x half> %2445, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2727 = shufflevector <2 x half> %2442, <2 x half> %2443, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2728 = shufflevector <2 x half> %2440, <2 x half> %2441, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2729 = shufflevector <2 x half> %2438, <2 x half> %2439, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2730 = shufflevector <2 x half> %2436, <2 x half> %2437, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2731 = shufflevector <2 x half> %2434, <2 x half> %2435, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2732 = shufflevector <2 x half> %2432, <2 x half> %2433, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2733 = shufflevector <2 x half> %2430, <2 x half> %2431, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2734 = shufflevector <2 x half> %2428, <2 x half> %2429, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2735 = shufflevector <2 x half> %2426, <2 x half> %2427, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2736 = shufflevector <2 x half> %2424, <2 x half> %2425, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2737 = shufflevector <2 x half> %2422, <2 x half> %2423, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2738 = shufflevector <2 x half> %2420, <2 x half> %2421, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2739 = shufflevector <2 x half> %2418, <2 x half> %2419, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2740 = shufflevector <2 x half> %2416, <2 x half> %2417, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2741 = shufflevector <2 x half> %2414, <2 x half> %2415, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2742 = shufflevector <2 x half> %2412, <2 x half> %2413, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2743 = shufflevector <2 x half> %2410, <2 x half> %2411, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2744 = shufflevector <2 x half> %2408, <2 x half> %2409, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %2745 = insertelement <4 x float> poison, float %2152, i64 0, !dbg !54
  %2746 = insertelement <4 x float> %2745, float %2153, i64 1, !dbg !54
  %2747 = insertelement <4 x float> %2746, float %2154, i64 2, !dbg !54
  %2748 = insertelement <4 x float> %2747, float %2155, i64 3, !dbg !54
  %2749 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2681, <4 x float> %2748, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2750 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2682, <4 x float> %2749, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2751 = insertelement <4 x float> poison, float %2156, i64 0, !dbg !54
  %2752 = insertelement <4 x float> %2751, float %2157, i64 1, !dbg !54
  %2753 = insertelement <4 x float> %2752, float %2158, i64 2, !dbg !54
  %2754 = insertelement <4 x float> %2753, float %2159, i64 3, !dbg !54
  %2755 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2681, <4 x float> %2754, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2756 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2682, <4 x float> %2755, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2757 = insertelement <4 x float> poison, float %2184, i64 0, !dbg !54
  %2758 = insertelement <4 x float> %2757, float %2185, i64 1, !dbg !54
  %2759 = insertelement <4 x float> %2758, float %2186, i64 2, !dbg !54
  %2760 = insertelement <4 x float> %2759, float %2187, i64 3, !dbg !54
  %2761 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2685, <4 x float> %2760, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2762 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2686, <4 x float> %2761, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2763 = insertelement <4 x float> poison, float %2188, i64 0, !dbg !54
  %2764 = insertelement <4 x float> %2763, float %2189, i64 1, !dbg !54
  %2765 = insertelement <4 x float> %2764, float %2190, i64 2, !dbg !54
  %2766 = insertelement <4 x float> %2765, float %2191, i64 3, !dbg !54
  %2767 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2685, <4 x float> %2766, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2768 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2686, <4 x float> %2767, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2769 = insertelement <4 x float> poison, float %2160, i64 0, !dbg !54
  %2770 = insertelement <4 x float> %2769, float %2161, i64 1, !dbg !54
  %2771 = insertelement <4 x float> %2770, float %2162, i64 2, !dbg !54
  %2772 = insertelement <4 x float> %2771, float %2163, i64 3, !dbg !54
  %2773 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2681, <4 x float> %2772, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2774 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2682, <4 x float> %2773, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2775 = insertelement <4 x float> poison, float %2164, i64 0, !dbg !54
  %2776 = insertelement <4 x float> %2775, float %2165, i64 1, !dbg !54
  %2777 = insertelement <4 x float> %2776, float %2166, i64 2, !dbg !54
  %2778 = insertelement <4 x float> %2777, float %2167, i64 3, !dbg !54
  %2779 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2681, <4 x float> %2778, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2780 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2682, <4 x float> %2779, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2781 = insertelement <4 x float> poison, float %2192, i64 0, !dbg !54
  %2782 = insertelement <4 x float> %2781, float %2193, i64 1, !dbg !54
  %2783 = insertelement <4 x float> %2782, float %2194, i64 2, !dbg !54
  %2784 = insertelement <4 x float> %2783, float %2195, i64 3, !dbg !54
  %2785 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2685, <4 x float> %2784, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2786 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2686, <4 x float> %2785, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2787 = insertelement <4 x float> poison, float %2196, i64 0, !dbg !54
  %2788 = insertelement <4 x float> %2787, float %2197, i64 1, !dbg !54
  %2789 = insertelement <4 x float> %2788, float %2198, i64 2, !dbg !54
  %2790 = insertelement <4 x float> %2789, float %2199, i64 3, !dbg !54
  %2791 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2685, <4 x float> %2790, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2792 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2686, <4 x float> %2791, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2793 = insertelement <4 x float> poison, float %2168, i64 0, !dbg !54
  %2794 = insertelement <4 x float> %2793, float %2169, i64 1, !dbg !54
  %2795 = insertelement <4 x float> %2794, float %2170, i64 2, !dbg !54
  %2796 = insertelement <4 x float> %2795, float %2171, i64 3, !dbg !54
  %2797 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2681, <4 x float> %2796, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2798 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2682, <4 x float> %2797, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2799 = insertelement <4 x float> poison, float %2172, i64 0, !dbg !54
  %2800 = insertelement <4 x float> %2799, float %2173, i64 1, !dbg !54
  %2801 = insertelement <4 x float> %2800, float %2174, i64 2, !dbg !54
  %2802 = insertelement <4 x float> %2801, float %2175, i64 3, !dbg !54
  %2803 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2681, <4 x float> %2802, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2804 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2682, <4 x float> %2803, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2805 = insertelement <4 x float> poison, float %2200, i64 0, !dbg !54
  %2806 = insertelement <4 x float> %2805, float %2201, i64 1, !dbg !54
  %2807 = insertelement <4 x float> %2806, float %2202, i64 2, !dbg !54
  %2808 = insertelement <4 x float> %2807, float %2203, i64 3, !dbg !54
  %2809 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2685, <4 x float> %2808, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2810 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2686, <4 x float> %2809, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2811 = insertelement <4 x float> poison, float %2204, i64 0, !dbg !54
  %2812 = insertelement <4 x float> %2811, float %2205, i64 1, !dbg !54
  %2813 = insertelement <4 x float> %2812, float %2206, i64 2, !dbg !54
  %2814 = insertelement <4 x float> %2813, float %2207, i64 3, !dbg !54
  %2815 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2685, <4 x float> %2814, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2816 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2686, <4 x float> %2815, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2817 = insertelement <4 x float> poison, float %2176, i64 0, !dbg !54
  %2818 = insertelement <4 x float> %2817, float %2177, i64 1, !dbg !54
  %2819 = insertelement <4 x float> %2818, float %2178, i64 2, !dbg !54
  %2820 = insertelement <4 x float> %2819, float %2179, i64 3, !dbg !54
  %2821 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2681, <4 x float> %2820, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2822 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2682, <4 x float> %2821, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2823 = insertelement <4 x float> poison, float %2180, i64 0, !dbg !54
  %2824 = insertelement <4 x float> %2823, float %2181, i64 1, !dbg !54
  %2825 = insertelement <4 x float> %2824, float %2182, i64 2, !dbg !54
  %2826 = insertelement <4 x float> %2825, float %2183, i64 3, !dbg !54
  %2827 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2681, <4 x float> %2826, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2828 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2682, <4 x float> %2827, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2829 = insertelement <4 x float> poison, float %2208, i64 0, !dbg !54
  %2830 = insertelement <4 x float> %2829, float %2209, i64 1, !dbg !54
  %2831 = insertelement <4 x float> %2830, float %2210, i64 2, !dbg !54
  %2832 = insertelement <4 x float> %2831, float %2211, i64 3, !dbg !54
  %2833 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2685, <4 x float> %2832, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2834 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2686, <4 x float> %2833, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2835 = insertelement <4 x float> poison, float %2212, i64 0, !dbg !54
  %2836 = insertelement <4 x float> %2835, float %2213, i64 1, !dbg !54
  %2837 = insertelement <4 x float> %2836, float %2214, i64 2, !dbg !54
  %2838 = insertelement <4 x float> %2837, float %2215, i64 3, !dbg !54
  %2839 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2685, <4 x float> %2838, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2840 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2686, <4 x float> %2839, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2841 = insertelement <4 x float> poison, float %2216, i64 0, !dbg !54
  %2842 = insertelement <4 x float> %2841, float %2217, i64 1, !dbg !54
  %2843 = insertelement <4 x float> %2842, float %2218, i64 2, !dbg !54
  %2844 = insertelement <4 x float> %2843, float %2219, i64 3, !dbg !54
  %2845 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2689, <4 x float> %2844, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2846 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2690, <4 x float> %2845, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2847 = insertelement <4 x float> poison, float %2220, i64 0, !dbg !54
  %2848 = insertelement <4 x float> %2847, float %2221, i64 1, !dbg !54
  %2849 = insertelement <4 x float> %2848, float %2222, i64 2, !dbg !54
  %2850 = insertelement <4 x float> %2849, float %2223, i64 3, !dbg !54
  %2851 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2689, <4 x float> %2850, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2852 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2690, <4 x float> %2851, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2853 = insertelement <4 x float> poison, float %2248, i64 0, !dbg !54
  %2854 = insertelement <4 x float> %2853, float %2249, i64 1, !dbg !54
  %2855 = insertelement <4 x float> %2854, float %2250, i64 2, !dbg !54
  %2856 = insertelement <4 x float> %2855, float %2251, i64 3, !dbg !54
  %2857 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2693, <4 x float> %2856, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2858 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2694, <4 x float> %2857, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2859 = insertelement <4 x float> poison, float %2252, i64 0, !dbg !54
  %2860 = insertelement <4 x float> %2859, float %2253, i64 1, !dbg !54
  %2861 = insertelement <4 x float> %2860, float %2254, i64 2, !dbg !54
  %2862 = insertelement <4 x float> %2861, float %2255, i64 3, !dbg !54
  %2863 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2693, <4 x float> %2862, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2864 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2694, <4 x float> %2863, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2865 = insertelement <4 x float> poison, float %2224, i64 0, !dbg !54
  %2866 = insertelement <4 x float> %2865, float %2225, i64 1, !dbg !54
  %2867 = insertelement <4 x float> %2866, float %2226, i64 2, !dbg !54
  %2868 = insertelement <4 x float> %2867, float %2227, i64 3, !dbg !54
  %2869 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2689, <4 x float> %2868, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2870 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2690, <4 x float> %2869, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2871 = insertelement <4 x float> poison, float %2228, i64 0, !dbg !54
  %2872 = insertelement <4 x float> %2871, float %2229, i64 1, !dbg !54
  %2873 = insertelement <4 x float> %2872, float %2230, i64 2, !dbg !54
  %2874 = insertelement <4 x float> %2873, float %2231, i64 3, !dbg !54
  %2875 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2689, <4 x float> %2874, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2876 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2690, <4 x float> %2875, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2877 = insertelement <4 x float> poison, float %2256, i64 0, !dbg !54
  %2878 = insertelement <4 x float> %2877, float %2257, i64 1, !dbg !54
  %2879 = insertelement <4 x float> %2878, float %2258, i64 2, !dbg !54
  %2880 = insertelement <4 x float> %2879, float %2259, i64 3, !dbg !54
  %2881 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2693, <4 x float> %2880, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2882 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2694, <4 x float> %2881, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2883 = insertelement <4 x float> poison, float %2260, i64 0, !dbg !54
  %2884 = insertelement <4 x float> %2883, float %2261, i64 1, !dbg !54
  %2885 = insertelement <4 x float> %2884, float %2262, i64 2, !dbg !54
  %2886 = insertelement <4 x float> %2885, float %2263, i64 3, !dbg !54
  %2887 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2693, <4 x float> %2886, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2888 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2694, <4 x float> %2887, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2889 = insertelement <4 x float> poison, float %2232, i64 0, !dbg !54
  %2890 = insertelement <4 x float> %2889, float %2233, i64 1, !dbg !54
  %2891 = insertelement <4 x float> %2890, float %2234, i64 2, !dbg !54
  %2892 = insertelement <4 x float> %2891, float %2235, i64 3, !dbg !54
  %2893 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2689, <4 x float> %2892, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2894 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2690, <4 x float> %2893, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2895 = insertelement <4 x float> poison, float %2236, i64 0, !dbg !54
  %2896 = insertelement <4 x float> %2895, float %2237, i64 1, !dbg !54
  %2897 = insertelement <4 x float> %2896, float %2238, i64 2, !dbg !54
  %2898 = insertelement <4 x float> %2897, float %2239, i64 3, !dbg !54
  %2899 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2689, <4 x float> %2898, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2900 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2690, <4 x float> %2899, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2901 = insertelement <4 x float> poison, float %2264, i64 0, !dbg !54
  %2902 = insertelement <4 x float> %2901, float %2265, i64 1, !dbg !54
  %2903 = insertelement <4 x float> %2902, float %2266, i64 2, !dbg !54
  %2904 = insertelement <4 x float> %2903, float %2267, i64 3, !dbg !54
  %2905 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2693, <4 x float> %2904, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2906 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2694, <4 x float> %2905, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2907 = insertelement <4 x float> poison, float %2268, i64 0, !dbg !54
  %2908 = insertelement <4 x float> %2907, float %2269, i64 1, !dbg !54
  %2909 = insertelement <4 x float> %2908, float %2270, i64 2, !dbg !54
  %2910 = insertelement <4 x float> %2909, float %2271, i64 3, !dbg !54
  %2911 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2693, <4 x float> %2910, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2912 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2694, <4 x float> %2911, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2913 = insertelement <4 x float> poison, float %2240, i64 0, !dbg !54
  %2914 = insertelement <4 x float> %2913, float %2241, i64 1, !dbg !54
  %2915 = insertelement <4 x float> %2914, float %2242, i64 2, !dbg !54
  %2916 = insertelement <4 x float> %2915, float %2243, i64 3, !dbg !54
  %2917 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2689, <4 x float> %2916, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2918 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2690, <4 x float> %2917, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2919 = insertelement <4 x float> poison, float %2244, i64 0, !dbg !54
  %2920 = insertelement <4 x float> %2919, float %2245, i64 1, !dbg !54
  %2921 = insertelement <4 x float> %2920, float %2246, i64 2, !dbg !54
  %2922 = insertelement <4 x float> %2921, float %2247, i64 3, !dbg !54
  %2923 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2689, <4 x float> %2922, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2924 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2690, <4 x float> %2923, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2925 = insertelement <4 x float> poison, float %2272, i64 0, !dbg !54
  %2926 = insertelement <4 x float> %2925, float %2273, i64 1, !dbg !54
  %2927 = insertelement <4 x float> %2926, float %2274, i64 2, !dbg !54
  %2928 = insertelement <4 x float> %2927, float %2275, i64 3, !dbg !54
  %2929 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2693, <4 x float> %2928, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2930 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2694, <4 x float> %2929, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2931 = insertelement <4 x float> poison, float %2276, i64 0, !dbg !54
  %2932 = insertelement <4 x float> %2931, float %2277, i64 1, !dbg !54
  %2933 = insertelement <4 x float> %2932, float %2278, i64 2, !dbg !54
  %2934 = insertelement <4 x float> %2933, float %2279, i64 3, !dbg !54
  %2935 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2693, <4 x float> %2934, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2936 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2694, <4 x float> %2935, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2937 = insertelement <4 x float> poison, float %2280, i64 0, !dbg !54
  %2938 = insertelement <4 x float> %2937, float %2281, i64 1, !dbg !54
  %2939 = insertelement <4 x float> %2938, float %2282, i64 2, !dbg !54
  %2940 = insertelement <4 x float> %2939, float %2283, i64 3, !dbg !54
  %2941 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2697, <4 x float> %2940, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2942 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2698, <4 x float> %2941, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2943 = insertelement <4 x float> poison, float %2284, i64 0, !dbg !54
  %2944 = insertelement <4 x float> %2943, float %2285, i64 1, !dbg !54
  %2945 = insertelement <4 x float> %2944, float %2286, i64 2, !dbg !54
  %2946 = insertelement <4 x float> %2945, float %2287, i64 3, !dbg !54
  %2947 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2697, <4 x float> %2946, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2948 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2698, <4 x float> %2947, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2949 = insertelement <4 x float> poison, float %2312, i64 0, !dbg !54
  %2950 = insertelement <4 x float> %2949, float %2313, i64 1, !dbg !54
  %2951 = insertelement <4 x float> %2950, float %2314, i64 2, !dbg !54
  %2952 = insertelement <4 x float> %2951, float %2315, i64 3, !dbg !54
  %2953 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2701, <4 x float> %2952, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2954 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2702, <4 x float> %2953, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2955 = insertelement <4 x float> poison, float %2316, i64 0, !dbg !54
  %2956 = insertelement <4 x float> %2955, float %2317, i64 1, !dbg !54
  %2957 = insertelement <4 x float> %2956, float %2318, i64 2, !dbg !54
  %2958 = insertelement <4 x float> %2957, float %2319, i64 3, !dbg !54
  %2959 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2701, <4 x float> %2958, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2960 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2702, <4 x float> %2959, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2961 = insertelement <4 x float> poison, float %2288, i64 0, !dbg !54
  %2962 = insertelement <4 x float> %2961, float %2289, i64 1, !dbg !54
  %2963 = insertelement <4 x float> %2962, float %2290, i64 2, !dbg !54
  %2964 = insertelement <4 x float> %2963, float %2291, i64 3, !dbg !54
  %2965 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2697, <4 x float> %2964, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2966 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2698, <4 x float> %2965, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2967 = insertelement <4 x float> poison, float %2292, i64 0, !dbg !54
  %2968 = insertelement <4 x float> %2967, float %2293, i64 1, !dbg !54
  %2969 = insertelement <4 x float> %2968, float %2294, i64 2, !dbg !54
  %2970 = insertelement <4 x float> %2969, float %2295, i64 3, !dbg !54
  %2971 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2697, <4 x float> %2970, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2972 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2698, <4 x float> %2971, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2973 = insertelement <4 x float> poison, float %2320, i64 0, !dbg !54
  %2974 = insertelement <4 x float> %2973, float %2321, i64 1, !dbg !54
  %2975 = insertelement <4 x float> %2974, float %2322, i64 2, !dbg !54
  %2976 = insertelement <4 x float> %2975, float %2323, i64 3, !dbg !54
  %2977 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2701, <4 x float> %2976, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2978 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2702, <4 x float> %2977, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2979 = insertelement <4 x float> poison, float %2324, i64 0, !dbg !54
  %2980 = insertelement <4 x float> %2979, float %2325, i64 1, !dbg !54
  %2981 = insertelement <4 x float> %2980, float %2326, i64 2, !dbg !54
  %2982 = insertelement <4 x float> %2981, float %2327, i64 3, !dbg !54
  %2983 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2701, <4 x float> %2982, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2984 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2702, <4 x float> %2983, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2985 = insertelement <4 x float> poison, float %2296, i64 0, !dbg !54
  %2986 = insertelement <4 x float> %2985, float %2297, i64 1, !dbg !54
  %2987 = insertelement <4 x float> %2986, float %2298, i64 2, !dbg !54
  %2988 = insertelement <4 x float> %2987, float %2299, i64 3, !dbg !54
  %2989 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2697, <4 x float> %2988, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2990 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2698, <4 x float> %2989, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2991 = insertelement <4 x float> poison, float %2300, i64 0, !dbg !54
  %2992 = insertelement <4 x float> %2991, float %2301, i64 1, !dbg !54
  %2993 = insertelement <4 x float> %2992, float %2302, i64 2, !dbg !54
  %2994 = insertelement <4 x float> %2993, float %2303, i64 3, !dbg !54
  %2995 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2697, <4 x float> %2994, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2996 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2698, <4 x float> %2995, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %2997 = insertelement <4 x float> poison, float %2328, i64 0, !dbg !54
  %2998 = insertelement <4 x float> %2997, float %2329, i64 1, !dbg !54
  %2999 = insertelement <4 x float> %2998, float %2330, i64 2, !dbg !54
  %3000 = insertelement <4 x float> %2999, float %2331, i64 3, !dbg !54
  %3001 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2701, <4 x float> %3000, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3002 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2702, <4 x float> %3001, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3003 = insertelement <4 x float> poison, float %2332, i64 0, !dbg !54
  %3004 = insertelement <4 x float> %3003, float %2333, i64 1, !dbg !54
  %3005 = insertelement <4 x float> %3004, float %2334, i64 2, !dbg !54
  %3006 = insertelement <4 x float> %3005, float %2335, i64 3, !dbg !54
  %3007 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2701, <4 x float> %3006, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3008 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2702, <4 x float> %3007, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3009 = insertelement <4 x float> poison, float %2304, i64 0, !dbg !54
  %3010 = insertelement <4 x float> %3009, float %2305, i64 1, !dbg !54
  %3011 = insertelement <4 x float> %3010, float %2306, i64 2, !dbg !54
  %3012 = insertelement <4 x float> %3011, float %2307, i64 3, !dbg !54
  %3013 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2697, <4 x float> %3012, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3014 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2698, <4 x float> %3013, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3015 = insertelement <4 x float> poison, float %2308, i64 0, !dbg !54
  %3016 = insertelement <4 x float> %3015, float %2309, i64 1, !dbg !54
  %3017 = insertelement <4 x float> %3016, float %2310, i64 2, !dbg !54
  %3018 = insertelement <4 x float> %3017, float %2311, i64 3, !dbg !54
  %3019 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2697, <4 x float> %3018, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3020 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2698, <4 x float> %3019, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3021 = insertelement <4 x float> poison, float %2336, i64 0, !dbg !54
  %3022 = insertelement <4 x float> %3021, float %2337, i64 1, !dbg !54
  %3023 = insertelement <4 x float> %3022, float %2338, i64 2, !dbg !54
  %3024 = insertelement <4 x float> %3023, float %2339, i64 3, !dbg !54
  %3025 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2701, <4 x float> %3024, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3026 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2702, <4 x float> %3025, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3027 = insertelement <4 x float> poison, float %2340, i64 0, !dbg !54
  %3028 = insertelement <4 x float> %3027, float %2341, i64 1, !dbg !54
  %3029 = insertelement <4 x float> %3028, float %2342, i64 2, !dbg !54
  %3030 = insertelement <4 x float> %3029, float %2343, i64 3, !dbg !54
  %3031 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2701, <4 x float> %3030, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3032 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2702, <4 x float> %3031, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3033 = insertelement <4 x float> poison, float %2344, i64 0, !dbg !54
  %3034 = insertelement <4 x float> %3033, float %2345, i64 1, !dbg !54
  %3035 = insertelement <4 x float> %3034, float %2346, i64 2, !dbg !54
  %3036 = insertelement <4 x float> %3035, float %2347, i64 3, !dbg !54
  %3037 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2705, <4 x float> %3036, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3038 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2706, <4 x float> %3037, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3039 = insertelement <4 x float> poison, float %2348, i64 0, !dbg !54
  %3040 = insertelement <4 x float> %3039, float %2349, i64 1, !dbg !54
  %3041 = insertelement <4 x float> %3040, float %2350, i64 2, !dbg !54
  %3042 = insertelement <4 x float> %3041, float %2351, i64 3, !dbg !54
  %3043 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2705, <4 x float> %3042, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3044 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2706, <4 x float> %3043, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3045 = insertelement <4 x float> poison, float %2376, i64 0, !dbg !54
  %3046 = insertelement <4 x float> %3045, float %2377, i64 1, !dbg !54
  %3047 = insertelement <4 x float> %3046, float %2378, i64 2, !dbg !54
  %3048 = insertelement <4 x float> %3047, float %2379, i64 3, !dbg !54
  %3049 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2713, <4 x half> %2709, <4 x float> %3048, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3050 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2714, <4 x half> %2710, <4 x float> %3049, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3051 = insertelement <4 x float> poison, float %2380, i64 0, !dbg !54
  %3052 = insertelement <4 x float> %3051, float %2381, i64 1, !dbg !54
  %3053 = insertelement <4 x float> %3052, float %2382, i64 2, !dbg !54
  %3054 = insertelement <4 x float> %3053, float %2383, i64 3, !dbg !54
  %3055 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2717, <4 x half> %2709, <4 x float> %3054, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3056 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2718, <4 x half> %2710, <4 x float> %3055, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3057 = insertelement <4 x float> poison, float %2352, i64 0, !dbg !54
  %3058 = insertelement <4 x float> %3057, float %2353, i64 1, !dbg !54
  %3059 = insertelement <4 x float> %3058, float %2354, i64 2, !dbg !54
  %3060 = insertelement <4 x float> %3059, float %2355, i64 3, !dbg !54
  %3061 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2705, <4 x float> %3060, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3062 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2706, <4 x float> %3061, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3063 = insertelement <4 x float> poison, float %2356, i64 0, !dbg !54
  %3064 = insertelement <4 x float> %3063, float %2357, i64 1, !dbg !54
  %3065 = insertelement <4 x float> %3064, float %2358, i64 2, !dbg !54
  %3066 = insertelement <4 x float> %3065, float %2359, i64 3, !dbg !54
  %3067 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2705, <4 x float> %3066, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3068 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2706, <4 x float> %3067, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3069 = insertelement <4 x float> poison, float %2384, i64 0, !dbg !54
  %3070 = insertelement <4 x float> %3069, float %2385, i64 1, !dbg !54
  %3071 = insertelement <4 x float> %3070, float %2386, i64 2, !dbg !54
  %3072 = insertelement <4 x float> %3071, float %2387, i64 3, !dbg !54
  %3073 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2721, <4 x half> %2709, <4 x float> %3072, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3074 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2722, <4 x half> %2710, <4 x float> %3073, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3075 = insertelement <4 x float> poison, float %2388, i64 0, !dbg !54
  %3076 = insertelement <4 x float> %3075, float %2389, i64 1, !dbg !54
  %3077 = insertelement <4 x float> %3076, float %2390, i64 2, !dbg !54
  %3078 = insertelement <4 x float> %3077, float %2391, i64 3, !dbg !54
  %3079 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2725, <4 x half> %2709, <4 x float> %3078, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3080 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2726, <4 x half> %2710, <4 x float> %3079, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3081 = insertelement <4 x float> poison, float %2360, i64 0, !dbg !54
  %3082 = insertelement <4 x float> %3081, float %2361, i64 1, !dbg !54
  %3083 = insertelement <4 x float> %3082, float %2362, i64 2, !dbg !54
  %3084 = insertelement <4 x float> %3083, float %2363, i64 3, !dbg !54
  %3085 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2705, <4 x float> %3084, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3086 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2706, <4 x float> %3085, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3087 = insertelement <4 x float> poison, float %2364, i64 0, !dbg !54
  %3088 = insertelement <4 x float> %3087, float %2365, i64 1, !dbg !54
  %3089 = insertelement <4 x float> %3088, float %2366, i64 2, !dbg !54
  %3090 = insertelement <4 x float> %3089, float %2367, i64 3, !dbg !54
  %3091 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2705, <4 x float> %3090, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3092 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2706, <4 x float> %3091, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3093 = insertelement <4 x float> poison, float %2392, i64 0, !dbg !54
  %3094 = insertelement <4 x float> %3093, float %2393, i64 1, !dbg !54
  %3095 = insertelement <4 x float> %3094, float %2394, i64 2, !dbg !54
  %3096 = insertelement <4 x float> %3095, float %2395, i64 3, !dbg !54
  %3097 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2729, <4 x half> %2709, <4 x float> %3096, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3098 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2730, <4 x half> %2710, <4 x float> %3097, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3099 = insertelement <4 x float> poison, float %2396, i64 0, !dbg !54
  %3100 = insertelement <4 x float> %3099, float %2397, i64 1, !dbg !54
  %3101 = insertelement <4 x float> %3100, float %2398, i64 2, !dbg !54
  %3102 = insertelement <4 x float> %3101, float %2399, i64 3, !dbg !54
  %3103 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2733, <4 x half> %2709, <4 x float> %3102, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3104 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2734, <4 x half> %2710, <4 x float> %3103, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3105 = insertelement <4 x float> poison, float %2368, i64 0, !dbg !54
  %3106 = insertelement <4 x float> %3105, float %2369, i64 1, !dbg !54
  %3107 = insertelement <4 x float> %3106, float %2370, i64 2, !dbg !54
  %3108 = insertelement <4 x float> %3107, float %2371, i64 3, !dbg !54
  %3109 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2705, <4 x float> %3108, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3110 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2706, <4 x float> %3109, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3111 = insertelement <4 x float> poison, float %2372, i64 0, !dbg !54
  %3112 = insertelement <4 x float> %3111, float %2373, i64 1, !dbg !54
  %3113 = insertelement <4 x float> %3112, float %2374, i64 2, !dbg !54
  %3114 = insertelement <4 x float> %3113, float %2375, i64 3, !dbg !54
  %3115 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2705, <4 x float> %3114, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3116 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2706, <4 x float> %3115, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3117 = insertelement <4 x float> poison, float %2400, i64 0, !dbg !54
  %3118 = insertelement <4 x float> %3117, float %2401, i64 1, !dbg !54
  %3119 = insertelement <4 x float> %3118, float %2402, i64 2, !dbg !54
  %3120 = insertelement <4 x float> %3119, float %2403, i64 3, !dbg !54
  %3121 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2737, <4 x half> %2709, <4 x float> %3120, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3122 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2738, <4 x half> %2710, <4 x float> %3121, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3123 = insertelement <4 x float> poison, float %2404, i64 0, !dbg !54
  %3124 = insertelement <4 x float> %3123, float %2405, i64 1, !dbg !54
  %3125 = insertelement <4 x float> %3124, float %2406, i64 2, !dbg !54
  %3126 = insertelement <4 x float> %3125, float %2407, i64 3, !dbg !54
  %3127 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2741, <4 x half> %2709, <4 x float> %3126, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3128 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2742, <4 x half> %2710, <4 x float> %3127, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3129 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2683, <4 x float> %2750, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3130 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2684, <4 x float> %3129, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3131 = extractelement <4 x float> %3130, i64 0, !dbg !54
  %3132 = extractelement <4 x float> %3130, i64 1, !dbg !54
  %3133 = extractelement <4 x float> %3130, i64 2, !dbg !54
  %3134 = extractelement <4 x float> %3130, i64 3, !dbg !54
  %3135 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2683, <4 x float> %2756, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3136 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2684, <4 x float> %3135, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3137 = extractelement <4 x float> %3136, i64 0, !dbg !54
  %3138 = extractelement <4 x float> %3136, i64 1, !dbg !54
  %3139 = extractelement <4 x float> %3136, i64 2, !dbg !54
  %3140 = extractelement <4 x float> %3136, i64 3, !dbg !54
  %3141 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2687, <4 x float> %2762, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3142 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2688, <4 x float> %3141, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3143 = extractelement <4 x float> %3142, i64 0, !dbg !54
  %3144 = extractelement <4 x float> %3142, i64 1, !dbg !54
  %3145 = extractelement <4 x float> %3142, i64 2, !dbg !54
  %3146 = extractelement <4 x float> %3142, i64 3, !dbg !54
  %3147 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2687, <4 x float> %2768, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3148 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2688, <4 x float> %3147, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3149 = extractelement <4 x float> %3148, i64 0, !dbg !54
  %3150 = extractelement <4 x float> %3148, i64 1, !dbg !54
  %3151 = extractelement <4 x float> %3148, i64 2, !dbg !54
  %3152 = extractelement <4 x float> %3148, i64 3, !dbg !54
  %3153 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2683, <4 x float> %2774, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3154 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2684, <4 x float> %3153, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3155 = extractelement <4 x float> %3154, i64 0, !dbg !54
  %3156 = extractelement <4 x float> %3154, i64 1, !dbg !54
  %3157 = extractelement <4 x float> %3154, i64 2, !dbg !54
  %3158 = extractelement <4 x float> %3154, i64 3, !dbg !54
  %3159 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2683, <4 x float> %2780, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3160 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2684, <4 x float> %3159, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3161 = extractelement <4 x float> %3160, i64 0, !dbg !54
  %3162 = extractelement <4 x float> %3160, i64 1, !dbg !54
  %3163 = extractelement <4 x float> %3160, i64 2, !dbg !54
  %3164 = extractelement <4 x float> %3160, i64 3, !dbg !54
  %3165 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2687, <4 x float> %2786, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3166 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2688, <4 x float> %3165, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3167 = extractelement <4 x float> %3166, i64 0, !dbg !54
  %3168 = extractelement <4 x float> %3166, i64 1, !dbg !54
  %3169 = extractelement <4 x float> %3166, i64 2, !dbg !54
  %3170 = extractelement <4 x float> %3166, i64 3, !dbg !54
  %3171 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2687, <4 x float> %2792, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3172 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2688, <4 x float> %3171, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3173 = extractelement <4 x float> %3172, i64 0, !dbg !54
  %3174 = extractelement <4 x float> %3172, i64 1, !dbg !54
  %3175 = extractelement <4 x float> %3172, i64 2, !dbg !54
  %3176 = extractelement <4 x float> %3172, i64 3, !dbg !54
  %3177 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2683, <4 x float> %2798, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3178 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2684, <4 x float> %3177, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3179 = extractelement <4 x float> %3178, i64 0, !dbg !54
  %3180 = extractelement <4 x float> %3178, i64 1, !dbg !54
  %3181 = extractelement <4 x float> %3178, i64 2, !dbg !54
  %3182 = extractelement <4 x float> %3178, i64 3, !dbg !54
  %3183 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2683, <4 x float> %2804, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3184 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2684, <4 x float> %3183, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3185 = extractelement <4 x float> %3184, i64 0, !dbg !54
  %3186 = extractelement <4 x float> %3184, i64 1, !dbg !54
  %3187 = extractelement <4 x float> %3184, i64 2, !dbg !54
  %3188 = extractelement <4 x float> %3184, i64 3, !dbg !54
  %3189 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2687, <4 x float> %2810, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3190 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2688, <4 x float> %3189, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3191 = extractelement <4 x float> %3190, i64 0, !dbg !54
  %3192 = extractelement <4 x float> %3190, i64 1, !dbg !54
  %3193 = extractelement <4 x float> %3190, i64 2, !dbg !54
  %3194 = extractelement <4 x float> %3190, i64 3, !dbg !54
  %3195 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2687, <4 x float> %2816, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3196 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2688, <4 x float> %3195, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3197 = extractelement <4 x float> %3196, i64 0, !dbg !54
  %3198 = extractelement <4 x float> %3196, i64 1, !dbg !54
  %3199 = extractelement <4 x float> %3196, i64 2, !dbg !54
  %3200 = extractelement <4 x float> %3196, i64 3, !dbg !54
  %3201 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2683, <4 x float> %2822, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3202 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2684, <4 x float> %3201, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3203 = extractelement <4 x float> %3202, i64 0, !dbg !54
  %3204 = extractelement <4 x float> %3202, i64 1, !dbg !54
  %3205 = extractelement <4 x float> %3202, i64 2, !dbg !54
  %3206 = extractelement <4 x float> %3202, i64 3, !dbg !54
  %3207 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2683, <4 x float> %2828, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3208 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2684, <4 x float> %3207, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3209 = extractelement <4 x float> %3208, i64 0, !dbg !54
  %3210 = extractelement <4 x float> %3208, i64 1, !dbg !54
  %3211 = extractelement <4 x float> %3208, i64 2, !dbg !54
  %3212 = extractelement <4 x float> %3208, i64 3, !dbg !54
  %3213 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2687, <4 x float> %2834, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3214 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2688, <4 x float> %3213, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3215 = extractelement <4 x float> %3214, i64 0, !dbg !54
  %3216 = extractelement <4 x float> %3214, i64 1, !dbg !54
  %3217 = extractelement <4 x float> %3214, i64 2, !dbg !54
  %3218 = extractelement <4 x float> %3214, i64 3, !dbg !54
  %3219 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2687, <4 x float> %2840, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3220 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2688, <4 x float> %3219, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3221 = extractelement <4 x float> %3220, i64 0, !dbg !54
  %3222 = extractelement <4 x float> %3220, i64 1, !dbg !54
  %3223 = extractelement <4 x float> %3220, i64 2, !dbg !54
  %3224 = extractelement <4 x float> %3220, i64 3, !dbg !54
  %3225 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2691, <4 x float> %2846, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3226 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2692, <4 x float> %3225, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3227 = extractelement <4 x float> %3226, i64 0, !dbg !54
  %3228 = extractelement <4 x float> %3226, i64 1, !dbg !54
  %3229 = extractelement <4 x float> %3226, i64 2, !dbg !54
  %3230 = extractelement <4 x float> %3226, i64 3, !dbg !54
  %3231 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2691, <4 x float> %2852, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3232 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2692, <4 x float> %3231, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3233 = extractelement <4 x float> %3232, i64 0, !dbg !54
  %3234 = extractelement <4 x float> %3232, i64 1, !dbg !54
  %3235 = extractelement <4 x float> %3232, i64 2, !dbg !54
  %3236 = extractelement <4 x float> %3232, i64 3, !dbg !54
  %3237 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2695, <4 x float> %2858, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3238 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2696, <4 x float> %3237, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3239 = extractelement <4 x float> %3238, i64 0, !dbg !54
  %3240 = extractelement <4 x float> %3238, i64 1, !dbg !54
  %3241 = extractelement <4 x float> %3238, i64 2, !dbg !54
  %3242 = extractelement <4 x float> %3238, i64 3, !dbg !54
  %3243 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2695, <4 x float> %2864, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3244 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2696, <4 x float> %3243, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3245 = extractelement <4 x float> %3244, i64 0, !dbg !54
  %3246 = extractelement <4 x float> %3244, i64 1, !dbg !54
  %3247 = extractelement <4 x float> %3244, i64 2, !dbg !54
  %3248 = extractelement <4 x float> %3244, i64 3, !dbg !54
  %3249 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2691, <4 x float> %2870, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3250 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2692, <4 x float> %3249, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3251 = extractelement <4 x float> %3250, i64 0, !dbg !54
  %3252 = extractelement <4 x float> %3250, i64 1, !dbg !54
  %3253 = extractelement <4 x float> %3250, i64 2, !dbg !54
  %3254 = extractelement <4 x float> %3250, i64 3, !dbg !54
  %3255 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2691, <4 x float> %2876, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3256 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2692, <4 x float> %3255, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3257 = extractelement <4 x float> %3256, i64 0, !dbg !54
  %3258 = extractelement <4 x float> %3256, i64 1, !dbg !54
  %3259 = extractelement <4 x float> %3256, i64 2, !dbg !54
  %3260 = extractelement <4 x float> %3256, i64 3, !dbg !54
  %3261 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2695, <4 x float> %2882, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3262 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2696, <4 x float> %3261, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3263 = extractelement <4 x float> %3262, i64 0, !dbg !54
  %3264 = extractelement <4 x float> %3262, i64 1, !dbg !54
  %3265 = extractelement <4 x float> %3262, i64 2, !dbg !54
  %3266 = extractelement <4 x float> %3262, i64 3, !dbg !54
  %3267 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2695, <4 x float> %2888, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3268 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2696, <4 x float> %3267, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3269 = extractelement <4 x float> %3268, i64 0, !dbg !54
  %3270 = extractelement <4 x float> %3268, i64 1, !dbg !54
  %3271 = extractelement <4 x float> %3268, i64 2, !dbg !54
  %3272 = extractelement <4 x float> %3268, i64 3, !dbg !54
  %3273 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2691, <4 x float> %2894, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3274 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2692, <4 x float> %3273, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3275 = extractelement <4 x float> %3274, i64 0, !dbg !54
  %3276 = extractelement <4 x float> %3274, i64 1, !dbg !54
  %3277 = extractelement <4 x float> %3274, i64 2, !dbg !54
  %3278 = extractelement <4 x float> %3274, i64 3, !dbg !54
  %3279 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2691, <4 x float> %2900, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3280 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2692, <4 x float> %3279, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3281 = extractelement <4 x float> %3280, i64 0, !dbg !54
  %3282 = extractelement <4 x float> %3280, i64 1, !dbg !54
  %3283 = extractelement <4 x float> %3280, i64 2, !dbg !54
  %3284 = extractelement <4 x float> %3280, i64 3, !dbg !54
  %3285 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2695, <4 x float> %2906, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3286 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2696, <4 x float> %3285, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3287 = extractelement <4 x float> %3286, i64 0, !dbg !54
  %3288 = extractelement <4 x float> %3286, i64 1, !dbg !54
  %3289 = extractelement <4 x float> %3286, i64 2, !dbg !54
  %3290 = extractelement <4 x float> %3286, i64 3, !dbg !54
  %3291 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2695, <4 x float> %2912, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3292 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2696, <4 x float> %3291, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3293 = extractelement <4 x float> %3292, i64 0, !dbg !54
  %3294 = extractelement <4 x float> %3292, i64 1, !dbg !54
  %3295 = extractelement <4 x float> %3292, i64 2, !dbg !54
  %3296 = extractelement <4 x float> %3292, i64 3, !dbg !54
  %3297 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2691, <4 x float> %2918, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3298 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2692, <4 x float> %3297, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3299 = extractelement <4 x float> %3298, i64 0, !dbg !54
  %3300 = extractelement <4 x float> %3298, i64 1, !dbg !54
  %3301 = extractelement <4 x float> %3298, i64 2, !dbg !54
  %3302 = extractelement <4 x float> %3298, i64 3, !dbg !54
  %3303 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2691, <4 x float> %2924, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3304 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2692, <4 x float> %3303, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3305 = extractelement <4 x float> %3304, i64 0, !dbg !54
  %3306 = extractelement <4 x float> %3304, i64 1, !dbg !54
  %3307 = extractelement <4 x float> %3304, i64 2, !dbg !54
  %3308 = extractelement <4 x float> %3304, i64 3, !dbg !54
  %3309 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2695, <4 x float> %2930, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3310 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2696, <4 x float> %3309, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3311 = extractelement <4 x float> %3310, i64 0, !dbg !54
  %3312 = extractelement <4 x float> %3310, i64 1, !dbg !54
  %3313 = extractelement <4 x float> %3310, i64 2, !dbg !54
  %3314 = extractelement <4 x float> %3310, i64 3, !dbg !54
  %3315 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2695, <4 x float> %2936, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3316 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2696, <4 x float> %3315, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3317 = extractelement <4 x float> %3316, i64 0, !dbg !54
  %3318 = extractelement <4 x float> %3316, i64 1, !dbg !54
  %3319 = extractelement <4 x float> %3316, i64 2, !dbg !54
  %3320 = extractelement <4 x float> %3316, i64 3, !dbg !54
  %3321 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2699, <4 x float> %2942, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3322 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2700, <4 x float> %3321, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3323 = extractelement <4 x float> %3322, i64 0, !dbg !54
  %3324 = extractelement <4 x float> %3322, i64 1, !dbg !54
  %3325 = extractelement <4 x float> %3322, i64 2, !dbg !54
  %3326 = extractelement <4 x float> %3322, i64 3, !dbg !54
  %3327 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2699, <4 x float> %2948, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3328 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2700, <4 x float> %3327, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3329 = extractelement <4 x float> %3328, i64 0, !dbg !54
  %3330 = extractelement <4 x float> %3328, i64 1, !dbg !54
  %3331 = extractelement <4 x float> %3328, i64 2, !dbg !54
  %3332 = extractelement <4 x float> %3328, i64 3, !dbg !54
  %3333 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2703, <4 x float> %2954, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3334 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2704, <4 x float> %3333, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3335 = extractelement <4 x float> %3334, i64 0, !dbg !54
  %3336 = extractelement <4 x float> %3334, i64 1, !dbg !54
  %3337 = extractelement <4 x float> %3334, i64 2, !dbg !54
  %3338 = extractelement <4 x float> %3334, i64 3, !dbg !54
  %3339 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2703, <4 x float> %2960, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3340 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2704, <4 x float> %3339, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3341 = extractelement <4 x float> %3340, i64 0, !dbg !54
  %3342 = extractelement <4 x float> %3340, i64 1, !dbg !54
  %3343 = extractelement <4 x float> %3340, i64 2, !dbg !54
  %3344 = extractelement <4 x float> %3340, i64 3, !dbg !54
  %3345 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2699, <4 x float> %2966, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3346 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2700, <4 x float> %3345, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3347 = extractelement <4 x float> %3346, i64 0, !dbg !54
  %3348 = extractelement <4 x float> %3346, i64 1, !dbg !54
  %3349 = extractelement <4 x float> %3346, i64 2, !dbg !54
  %3350 = extractelement <4 x float> %3346, i64 3, !dbg !54
  %3351 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2699, <4 x float> %2972, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3352 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2700, <4 x float> %3351, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3353 = extractelement <4 x float> %3352, i64 0, !dbg !54
  %3354 = extractelement <4 x float> %3352, i64 1, !dbg !54
  %3355 = extractelement <4 x float> %3352, i64 2, !dbg !54
  %3356 = extractelement <4 x float> %3352, i64 3, !dbg !54
  %3357 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2703, <4 x float> %2978, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3358 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2704, <4 x float> %3357, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3359 = extractelement <4 x float> %3358, i64 0, !dbg !54
  %3360 = extractelement <4 x float> %3358, i64 1, !dbg !54
  %3361 = extractelement <4 x float> %3358, i64 2, !dbg !54
  %3362 = extractelement <4 x float> %3358, i64 3, !dbg !54
  %3363 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2703, <4 x float> %2984, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3364 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2704, <4 x float> %3363, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3365 = extractelement <4 x float> %3364, i64 0, !dbg !54
  %3366 = extractelement <4 x float> %3364, i64 1, !dbg !54
  %3367 = extractelement <4 x float> %3364, i64 2, !dbg !54
  %3368 = extractelement <4 x float> %3364, i64 3, !dbg !54
  %3369 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2699, <4 x float> %2990, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3370 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2700, <4 x float> %3369, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3371 = extractelement <4 x float> %3370, i64 0, !dbg !54
  %3372 = extractelement <4 x float> %3370, i64 1, !dbg !54
  %3373 = extractelement <4 x float> %3370, i64 2, !dbg !54
  %3374 = extractelement <4 x float> %3370, i64 3, !dbg !54
  %3375 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2699, <4 x float> %2996, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3376 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2700, <4 x float> %3375, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3377 = extractelement <4 x float> %3376, i64 0, !dbg !54
  %3378 = extractelement <4 x float> %3376, i64 1, !dbg !54
  %3379 = extractelement <4 x float> %3376, i64 2, !dbg !54
  %3380 = extractelement <4 x float> %3376, i64 3, !dbg !54
  %3381 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2703, <4 x float> %3002, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3382 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2704, <4 x float> %3381, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3383 = extractelement <4 x float> %3382, i64 0, !dbg !54
  %3384 = extractelement <4 x float> %3382, i64 1, !dbg !54
  %3385 = extractelement <4 x float> %3382, i64 2, !dbg !54
  %3386 = extractelement <4 x float> %3382, i64 3, !dbg !54
  %3387 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2703, <4 x float> %3008, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3388 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2704, <4 x float> %3387, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3389 = extractelement <4 x float> %3388, i64 0, !dbg !54
  %3390 = extractelement <4 x float> %3388, i64 1, !dbg !54
  %3391 = extractelement <4 x float> %3388, i64 2, !dbg !54
  %3392 = extractelement <4 x float> %3388, i64 3, !dbg !54
  %3393 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2699, <4 x float> %3014, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3394 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2700, <4 x float> %3393, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3395 = extractelement <4 x float> %3394, i64 0, !dbg !54
  %3396 = extractelement <4 x float> %3394, i64 1, !dbg !54
  %3397 = extractelement <4 x float> %3394, i64 2, !dbg !54
  %3398 = extractelement <4 x float> %3394, i64 3, !dbg !54
  %3399 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2699, <4 x float> %3020, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3400 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2700, <4 x float> %3399, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3401 = extractelement <4 x float> %3400, i64 0, !dbg !54
  %3402 = extractelement <4 x float> %3400, i64 1, !dbg !54
  %3403 = extractelement <4 x float> %3400, i64 2, !dbg !54
  %3404 = extractelement <4 x float> %3400, i64 3, !dbg !54
  %3405 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2703, <4 x float> %3026, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3406 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2704, <4 x float> %3405, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3407 = extractelement <4 x float> %3406, i64 0, !dbg !54
  %3408 = extractelement <4 x float> %3406, i64 1, !dbg !54
  %3409 = extractelement <4 x float> %3406, i64 2, !dbg !54
  %3410 = extractelement <4 x float> %3406, i64 3, !dbg !54
  %3411 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2703, <4 x float> %3032, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3412 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2704, <4 x float> %3411, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3413 = extractelement <4 x float> %3412, i64 0, !dbg !54
  %3414 = extractelement <4 x float> %3412, i64 1, !dbg !54
  %3415 = extractelement <4 x float> %3412, i64 2, !dbg !54
  %3416 = extractelement <4 x float> %3412, i64 3, !dbg !54
  %3417 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2707, <4 x float> %3038, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3418 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2708, <4 x float> %3417, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3419 = extractelement <4 x float> %3418, i64 0, !dbg !54
  %3420 = extractelement <4 x float> %3418, i64 1, !dbg !54
  %3421 = extractelement <4 x float> %3418, i64 2, !dbg !54
  %3422 = extractelement <4 x float> %3418, i64 3, !dbg !54
  %3423 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2707, <4 x float> %3044, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3424 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2708, <4 x float> %3423, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3425 = extractelement <4 x float> %3424, i64 0, !dbg !54
  %3426 = extractelement <4 x float> %3424, i64 1, !dbg !54
  %3427 = extractelement <4 x float> %3424, i64 2, !dbg !54
  %3428 = extractelement <4 x float> %3424, i64 3, !dbg !54
  %3429 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2715, <4 x half> %2711, <4 x float> %3050, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3430 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2716, <4 x half> %2712, <4 x float> %3429, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3431 = extractelement <4 x float> %3430, i64 0, !dbg !54
  %3432 = extractelement <4 x float> %3430, i64 1, !dbg !54
  %3433 = extractelement <4 x float> %3430, i64 2, !dbg !54
  %3434 = extractelement <4 x float> %3430, i64 3, !dbg !54
  %3435 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2719, <4 x half> %2711, <4 x float> %3056, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3436 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2720, <4 x half> %2712, <4 x float> %3435, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3437 = extractelement <4 x float> %3436, i64 0, !dbg !54
  %3438 = extractelement <4 x float> %3436, i64 1, !dbg !54
  %3439 = extractelement <4 x float> %3436, i64 2, !dbg !54
  %3440 = extractelement <4 x float> %3436, i64 3, !dbg !54
  %3441 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2707, <4 x float> %3062, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3442 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2708, <4 x float> %3441, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3443 = extractelement <4 x float> %3442, i64 0, !dbg !54
  %3444 = extractelement <4 x float> %3442, i64 1, !dbg !54
  %3445 = extractelement <4 x float> %3442, i64 2, !dbg !54
  %3446 = extractelement <4 x float> %3442, i64 3, !dbg !54
  %3447 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2707, <4 x float> %3068, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3448 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2708, <4 x float> %3447, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3449 = extractelement <4 x float> %3448, i64 0, !dbg !54
  %3450 = extractelement <4 x float> %3448, i64 1, !dbg !54
  %3451 = extractelement <4 x float> %3448, i64 2, !dbg !54
  %3452 = extractelement <4 x float> %3448, i64 3, !dbg !54
  %3453 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2723, <4 x half> %2711, <4 x float> %3074, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3454 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2724, <4 x half> %2712, <4 x float> %3453, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3455 = extractelement <4 x float> %3454, i64 0, !dbg !54
  %3456 = extractelement <4 x float> %3454, i64 1, !dbg !54
  %3457 = extractelement <4 x float> %3454, i64 2, !dbg !54
  %3458 = extractelement <4 x float> %3454, i64 3, !dbg !54
  %3459 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2727, <4 x half> %2711, <4 x float> %3080, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3460 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2728, <4 x half> %2712, <4 x float> %3459, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3461 = extractelement <4 x float> %3460, i64 0, !dbg !54
  %3462 = extractelement <4 x float> %3460, i64 1, !dbg !54
  %3463 = extractelement <4 x float> %3460, i64 2, !dbg !54
  %3464 = extractelement <4 x float> %3460, i64 3, !dbg !54
  %3465 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2707, <4 x float> %3086, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3466 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2708, <4 x float> %3465, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3467 = extractelement <4 x float> %3466, i64 0, !dbg !54
  %3468 = extractelement <4 x float> %3466, i64 1, !dbg !54
  %3469 = extractelement <4 x float> %3466, i64 2, !dbg !54
  %3470 = extractelement <4 x float> %3466, i64 3, !dbg !54
  %3471 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2707, <4 x float> %3092, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3472 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2708, <4 x float> %3471, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3473 = extractelement <4 x float> %3472, i64 0, !dbg !54
  %3474 = extractelement <4 x float> %3472, i64 1, !dbg !54
  %3475 = extractelement <4 x float> %3472, i64 2, !dbg !54
  %3476 = extractelement <4 x float> %3472, i64 3, !dbg !54
  %3477 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2731, <4 x half> %2711, <4 x float> %3098, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3478 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2732, <4 x half> %2712, <4 x float> %3477, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3479 = extractelement <4 x float> %3478, i64 0, !dbg !54
  %3480 = extractelement <4 x float> %3478, i64 1, !dbg !54
  %3481 = extractelement <4 x float> %3478, i64 2, !dbg !54
  %3482 = extractelement <4 x float> %3478, i64 3, !dbg !54
  %3483 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2735, <4 x half> %2711, <4 x float> %3104, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3484 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2736, <4 x half> %2712, <4 x float> %3483, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3485 = extractelement <4 x float> %3484, i64 0, !dbg !54
  %3486 = extractelement <4 x float> %3484, i64 1, !dbg !54
  %3487 = extractelement <4 x float> %3484, i64 2, !dbg !54
  %3488 = extractelement <4 x float> %3484, i64 3, !dbg !54
  %3489 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2707, <4 x float> %3110, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3490 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2708, <4 x float> %3489, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3491 = extractelement <4 x float> %3490, i64 0, !dbg !54
  %3492 = extractelement <4 x float> %3490, i64 1, !dbg !54
  %3493 = extractelement <4 x float> %3490, i64 2, !dbg !54
  %3494 = extractelement <4 x float> %3490, i64 3, !dbg !54
  %3495 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2707, <4 x float> %3116, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3496 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2708, <4 x float> %3495, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3497 = extractelement <4 x float> %3496, i64 0, !dbg !54
  %3498 = extractelement <4 x float> %3496, i64 1, !dbg !54
  %3499 = extractelement <4 x float> %3496, i64 2, !dbg !54
  %3500 = extractelement <4 x float> %3496, i64 3, !dbg !54
  %3501 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2739, <4 x half> %2711, <4 x float> %3122, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3502 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2740, <4 x half> %2712, <4 x float> %3501, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3503 = extractelement <4 x float> %3502, i64 0, !dbg !54
  %3504 = extractelement <4 x float> %3502, i64 1, !dbg !54
  %3505 = extractelement <4 x float> %3502, i64 2, !dbg !54
  %3506 = extractelement <4 x float> %3502, i64 3, !dbg !54
  %3507 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2743, <4 x half> %2711, <4 x float> %3128, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3508 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %2744, <4 x half> %2712, <4 x float> %3507, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3509 = extractelement <4 x float> %3508, i64 0, !dbg !54
  %3510 = extractelement <4 x float> %3508, i64 1, !dbg !54
  %3511 = extractelement <4 x float> %3508, i64 2, !dbg !54
  %3512 = extractelement <4 x float> %3508, i64 3, !dbg !54
  br label %._crit_edge._crit_edge, !dbg !54

._crit_edge._crit_edge:                           ; preds = %._crit_edge, %2680
  %.pre-phi3455 = phi float [ %3512, %2680 ], [ %2407, %._crit_edge ], !dbg !35
  %.pre-phi3453 = phi float [ %3511, %2680 ], [ %2406, %._crit_edge ], !dbg !35
  %.pre-phi3451 = phi float [ %3510, %2680 ], [ %2405, %._crit_edge ], !dbg !35
  %.pre-phi3449 = phi float [ %3509, %2680 ], [ %2404, %._crit_edge ], !dbg !35
  %.pre-phi3447 = phi float [ %3506, %2680 ], [ %2403, %._crit_edge ], !dbg !35
  %.pre-phi3445 = phi float [ %3505, %2680 ], [ %2402, %._crit_edge ], !dbg !35
  %.pre-phi3443 = phi float [ %3504, %2680 ], [ %2401, %._crit_edge ], !dbg !35
  %.pre-phi3441 = phi float [ %3503, %2680 ], [ %2400, %._crit_edge ], !dbg !35
  %.pre-phi3439 = phi float [ %3488, %2680 ], [ %2399, %._crit_edge ], !dbg !35
  %.pre-phi3437 = phi float [ %3487, %2680 ], [ %2398, %._crit_edge ], !dbg !35
  %.pre-phi3435 = phi float [ %3486, %2680 ], [ %2397, %._crit_edge ], !dbg !35
  %.pre-phi3433 = phi float [ %3485, %2680 ], [ %2396, %._crit_edge ], !dbg !35
  %.pre-phi3431 = phi float [ %3482, %2680 ], [ %2395, %._crit_edge ], !dbg !35
  %.pre-phi3429 = phi float [ %3481, %2680 ], [ %2394, %._crit_edge ], !dbg !35
  %.pre-phi3427 = phi float [ %3480, %2680 ], [ %2393, %._crit_edge ], !dbg !35
  %.pre-phi3425 = phi float [ %3479, %2680 ], [ %2392, %._crit_edge ], !dbg !35
  %.pre-phi3423 = phi float [ %3464, %2680 ], [ %2391, %._crit_edge ], !dbg !35
  %.pre-phi3421 = phi float [ %3463, %2680 ], [ %2390, %._crit_edge ], !dbg !35
  %.pre-phi3419 = phi float [ %3462, %2680 ], [ %2389, %._crit_edge ], !dbg !35
  %.pre-phi3417 = phi float [ %3461, %2680 ], [ %2388, %._crit_edge ], !dbg !35
  %.pre-phi3415 = phi float [ %3458, %2680 ], [ %2387, %._crit_edge ], !dbg !35
  %.pre-phi3413 = phi float [ %3457, %2680 ], [ %2386, %._crit_edge ], !dbg !35
  %.pre-phi3411 = phi float [ %3456, %2680 ], [ %2385, %._crit_edge ], !dbg !35
  %.pre-phi3409 = phi float [ %3455, %2680 ], [ %2384, %._crit_edge ], !dbg !35
  %.pre-phi3407 = phi float [ %3440, %2680 ], [ %2383, %._crit_edge ], !dbg !35
  %.pre-phi3405 = phi float [ %3439, %2680 ], [ %2382, %._crit_edge ], !dbg !35
  %.pre-phi3403 = phi float [ %3438, %2680 ], [ %2381, %._crit_edge ], !dbg !35
  %.pre-phi3401 = phi float [ %3437, %2680 ], [ %2380, %._crit_edge ], !dbg !35
  %.pre-phi3399 = phi float [ %3434, %2680 ], [ %2379, %._crit_edge ], !dbg !35
  %.pre-phi3397 = phi float [ %3433, %2680 ], [ %2378, %._crit_edge ], !dbg !35
  %.pre-phi3395 = phi float [ %3432, %2680 ], [ %2377, %._crit_edge ], !dbg !35
  %.pre-phi3393 = phi float [ %3431, %2680 ], [ %2376, %._crit_edge ], !dbg !35
  %.pre-phi3391 = phi float [ %3500, %2680 ], [ %2375, %._crit_edge ], !dbg !35
  %.pre-phi3389 = phi float [ %3499, %2680 ], [ %2374, %._crit_edge ], !dbg !35
  %.pre-phi3387 = phi float [ %3498, %2680 ], [ %2373, %._crit_edge ], !dbg !35
  %.pre-phi3385 = phi float [ %3497, %2680 ], [ %2372, %._crit_edge ], !dbg !35
  %.pre-phi3383 = phi float [ %3494, %2680 ], [ %2371, %._crit_edge ], !dbg !35
  %.pre-phi3381 = phi float [ %3493, %2680 ], [ %2370, %._crit_edge ], !dbg !35
  %.pre-phi3379 = phi float [ %3492, %2680 ], [ %2369, %._crit_edge ], !dbg !35
  %.pre-phi3377 = phi float [ %3491, %2680 ], [ %2368, %._crit_edge ], !dbg !35
  %.pre-phi3375 = phi float [ %3476, %2680 ], [ %2367, %._crit_edge ], !dbg !35
  %.pre-phi3373 = phi float [ %3475, %2680 ], [ %2366, %._crit_edge ], !dbg !35
  %.pre-phi3371 = phi float [ %3474, %2680 ], [ %2365, %._crit_edge ], !dbg !35
  %.pre-phi3369 = phi float [ %3473, %2680 ], [ %2364, %._crit_edge ], !dbg !35
  %.pre-phi3367 = phi float [ %3470, %2680 ], [ %2363, %._crit_edge ], !dbg !35
  %.pre-phi3365 = phi float [ %3469, %2680 ], [ %2362, %._crit_edge ], !dbg !35
  %.pre-phi3363 = phi float [ %3468, %2680 ], [ %2361, %._crit_edge ], !dbg !35
  %.pre-phi3361 = phi float [ %3467, %2680 ], [ %2360, %._crit_edge ], !dbg !35
  %.pre-phi3359 = phi float [ %3452, %2680 ], [ %2359, %._crit_edge ], !dbg !35
  %.pre-phi3357 = phi float [ %3451, %2680 ], [ %2358, %._crit_edge ], !dbg !35
  %.pre-phi3355 = phi float [ %3450, %2680 ], [ %2357, %._crit_edge ], !dbg !35
  %.pre-phi3353 = phi float [ %3449, %2680 ], [ %2356, %._crit_edge ], !dbg !35
  %.pre-phi3351 = phi float [ %3446, %2680 ], [ %2355, %._crit_edge ], !dbg !35
  %.pre-phi3349 = phi float [ %3445, %2680 ], [ %2354, %._crit_edge ], !dbg !35
  %.pre-phi3347 = phi float [ %3444, %2680 ], [ %2353, %._crit_edge ], !dbg !35
  %.pre-phi3345 = phi float [ %3443, %2680 ], [ %2352, %._crit_edge ], !dbg !35
  %.pre-phi3343 = phi float [ %3428, %2680 ], [ %2351, %._crit_edge ], !dbg !35
  %.pre-phi3341 = phi float [ %3427, %2680 ], [ %2350, %._crit_edge ], !dbg !35
  %.pre-phi3339 = phi float [ %3426, %2680 ], [ %2349, %._crit_edge ], !dbg !35
  %.pre-phi3337 = phi float [ %3425, %2680 ], [ %2348, %._crit_edge ], !dbg !35
  %.pre-phi3335 = phi float [ %3422, %2680 ], [ %2347, %._crit_edge ], !dbg !35
  %.pre-phi3333 = phi float [ %3421, %2680 ], [ %2346, %._crit_edge ], !dbg !35
  %.pre-phi3331 = phi float [ %3420, %2680 ], [ %2345, %._crit_edge ], !dbg !35
  %.pre-phi3329 = phi float [ %3419, %2680 ], [ %2344, %._crit_edge ], !dbg !35
  %.pre-phi3327 = phi float [ %3416, %2680 ], [ %2343, %._crit_edge ], !dbg !35
  %.pre-phi3325 = phi float [ %3415, %2680 ], [ %2342, %._crit_edge ], !dbg !35
  %.pre-phi3323 = phi float [ %3414, %2680 ], [ %2341, %._crit_edge ], !dbg !35
  %.pre-phi3321 = phi float [ %3413, %2680 ], [ %2340, %._crit_edge ], !dbg !35
  %.pre-phi3319 = phi float [ %3410, %2680 ], [ %2339, %._crit_edge ], !dbg !35
  %.pre-phi3317 = phi float [ %3409, %2680 ], [ %2338, %._crit_edge ], !dbg !35
  %.pre-phi3315 = phi float [ %3408, %2680 ], [ %2337, %._crit_edge ], !dbg !35
  %.pre-phi3313 = phi float [ %3407, %2680 ], [ %2336, %._crit_edge ], !dbg !35
  %.pre-phi3311 = phi float [ %3392, %2680 ], [ %2335, %._crit_edge ], !dbg !35
  %.pre-phi3309 = phi float [ %3391, %2680 ], [ %2334, %._crit_edge ], !dbg !35
  %.pre-phi3307 = phi float [ %3390, %2680 ], [ %2333, %._crit_edge ], !dbg !35
  %.pre-phi3305 = phi float [ %3389, %2680 ], [ %2332, %._crit_edge ], !dbg !35
  %.pre-phi3303 = phi float [ %3386, %2680 ], [ %2331, %._crit_edge ], !dbg !35
  %.pre-phi3301 = phi float [ %3385, %2680 ], [ %2330, %._crit_edge ], !dbg !35
  %.pre-phi3299 = phi float [ %3384, %2680 ], [ %2329, %._crit_edge ], !dbg !35
  %.pre-phi3297 = phi float [ %3383, %2680 ], [ %2328, %._crit_edge ], !dbg !35
  %.pre-phi3295 = phi float [ %3368, %2680 ], [ %2327, %._crit_edge ], !dbg !35
  %.pre-phi3293 = phi float [ %3367, %2680 ], [ %2326, %._crit_edge ], !dbg !35
  %.pre-phi3291 = phi float [ %3366, %2680 ], [ %2325, %._crit_edge ], !dbg !35
  %.pre-phi3289 = phi float [ %3365, %2680 ], [ %2324, %._crit_edge ], !dbg !35
  %.pre-phi3287 = phi float [ %3362, %2680 ], [ %2323, %._crit_edge ], !dbg !35
  %.pre-phi3285 = phi float [ %3361, %2680 ], [ %2322, %._crit_edge ], !dbg !35
  %.pre-phi3283 = phi float [ %3360, %2680 ], [ %2321, %._crit_edge ], !dbg !35
  %.pre-phi3281 = phi float [ %3359, %2680 ], [ %2320, %._crit_edge ], !dbg !35
  %.pre-phi3279 = phi float [ %3344, %2680 ], [ %2319, %._crit_edge ], !dbg !35
  %.pre-phi3277 = phi float [ %3343, %2680 ], [ %2318, %._crit_edge ], !dbg !35
  %.pre-phi3275 = phi float [ %3342, %2680 ], [ %2317, %._crit_edge ], !dbg !35
  %.pre-phi3273 = phi float [ %3341, %2680 ], [ %2316, %._crit_edge ], !dbg !35
  %.pre-phi3271 = phi float [ %3338, %2680 ], [ %2315, %._crit_edge ], !dbg !35
  %.pre-phi3269 = phi float [ %3337, %2680 ], [ %2314, %._crit_edge ], !dbg !35
  %.pre-phi3267 = phi float [ %3336, %2680 ], [ %2313, %._crit_edge ], !dbg !35
  %.pre-phi3265 = phi float [ %3335, %2680 ], [ %2312, %._crit_edge ], !dbg !35
  %.pre-phi3263 = phi float [ %3404, %2680 ], [ %2311, %._crit_edge ], !dbg !35
  %.pre-phi3261 = phi float [ %3403, %2680 ], [ %2310, %._crit_edge ], !dbg !35
  %.pre-phi3259 = phi float [ %3402, %2680 ], [ %2309, %._crit_edge ], !dbg !35
  %.pre-phi3257 = phi float [ %3401, %2680 ], [ %2308, %._crit_edge ], !dbg !35
  %.pre-phi3255 = phi float [ %3398, %2680 ], [ %2307, %._crit_edge ], !dbg !35
  %.pre-phi3253 = phi float [ %3397, %2680 ], [ %2306, %._crit_edge ], !dbg !35
  %.pre-phi3251 = phi float [ %3396, %2680 ], [ %2305, %._crit_edge ], !dbg !35
  %.pre-phi3249 = phi float [ %3395, %2680 ], [ %2304, %._crit_edge ], !dbg !35
  %.pre-phi3247 = phi float [ %3380, %2680 ], [ %2303, %._crit_edge ], !dbg !35
  %.pre-phi3245 = phi float [ %3379, %2680 ], [ %2302, %._crit_edge ], !dbg !35
  %.pre-phi3243 = phi float [ %3378, %2680 ], [ %2301, %._crit_edge ], !dbg !35
  %.pre-phi3241 = phi float [ %3377, %2680 ], [ %2300, %._crit_edge ], !dbg !35
  %.pre-phi3239 = phi float [ %3374, %2680 ], [ %2299, %._crit_edge ], !dbg !35
  %.pre-phi3237 = phi float [ %3373, %2680 ], [ %2298, %._crit_edge ], !dbg !35
  %.pre-phi3235 = phi float [ %3372, %2680 ], [ %2297, %._crit_edge ], !dbg !35
  %.pre-phi3233 = phi float [ %3371, %2680 ], [ %2296, %._crit_edge ], !dbg !35
  %.pre-phi3231 = phi float [ %3356, %2680 ], [ %2295, %._crit_edge ], !dbg !35
  %.pre-phi3229 = phi float [ %3355, %2680 ], [ %2294, %._crit_edge ], !dbg !35
  %.pre-phi3227 = phi float [ %3354, %2680 ], [ %2293, %._crit_edge ], !dbg !35
  %.pre-phi3225 = phi float [ %3353, %2680 ], [ %2292, %._crit_edge ], !dbg !35
  %.pre-phi3223 = phi float [ %3350, %2680 ], [ %2291, %._crit_edge ], !dbg !35
  %.pre-phi3221 = phi float [ %3349, %2680 ], [ %2290, %._crit_edge ], !dbg !35
  %.pre-phi3219 = phi float [ %3348, %2680 ], [ %2289, %._crit_edge ], !dbg !35
  %.pre-phi3217 = phi float [ %3347, %2680 ], [ %2288, %._crit_edge ], !dbg !35
  %.pre-phi3215 = phi float [ %3332, %2680 ], [ %2287, %._crit_edge ], !dbg !35
  %.pre-phi3213 = phi float [ %3331, %2680 ], [ %2286, %._crit_edge ], !dbg !35
  %.pre-phi3211 = phi float [ %3330, %2680 ], [ %2285, %._crit_edge ], !dbg !35
  %.pre-phi3209 = phi float [ %3329, %2680 ], [ %2284, %._crit_edge ], !dbg !35
  %.pre-phi3207 = phi float [ %3326, %2680 ], [ %2283, %._crit_edge ], !dbg !35
  %.pre-phi3205 = phi float [ %3325, %2680 ], [ %2282, %._crit_edge ], !dbg !35
  %.pre-phi3203 = phi float [ %3324, %2680 ], [ %2281, %._crit_edge ], !dbg !35
  %.pre-phi3201 = phi float [ %3323, %2680 ], [ %2280, %._crit_edge ], !dbg !35
  %.pre-phi3199 = phi float [ %3320, %2680 ], [ %2279, %._crit_edge ], !dbg !35
  %.pre-phi3197 = phi float [ %3319, %2680 ], [ %2278, %._crit_edge ], !dbg !35
  %.pre-phi3195 = phi float [ %3318, %2680 ], [ %2277, %._crit_edge ], !dbg !35
  %.pre-phi3193 = phi float [ %3317, %2680 ], [ %2276, %._crit_edge ], !dbg !35
  %.pre-phi3191 = phi float [ %3314, %2680 ], [ %2275, %._crit_edge ], !dbg !35
  %.pre-phi3189 = phi float [ %3313, %2680 ], [ %2274, %._crit_edge ], !dbg !35
  %.pre-phi3187 = phi float [ %3312, %2680 ], [ %2273, %._crit_edge ], !dbg !35
  %.pre-phi3185 = phi float [ %3311, %2680 ], [ %2272, %._crit_edge ], !dbg !35
  %.pre-phi3183 = phi float [ %3296, %2680 ], [ %2271, %._crit_edge ], !dbg !35
  %.pre-phi3181 = phi float [ %3295, %2680 ], [ %2270, %._crit_edge ], !dbg !35
  %.pre-phi3179 = phi float [ %3294, %2680 ], [ %2269, %._crit_edge ], !dbg !35
  %.pre-phi3177 = phi float [ %3293, %2680 ], [ %2268, %._crit_edge ], !dbg !35
  %.pre-phi3175 = phi float [ %3290, %2680 ], [ %2267, %._crit_edge ], !dbg !35
  %.pre-phi3173 = phi float [ %3289, %2680 ], [ %2266, %._crit_edge ], !dbg !35
  %.pre-phi3171 = phi float [ %3288, %2680 ], [ %2265, %._crit_edge ], !dbg !35
  %.pre-phi3169 = phi float [ %3287, %2680 ], [ %2264, %._crit_edge ], !dbg !35
  %.pre-phi3167 = phi float [ %3272, %2680 ], [ %2263, %._crit_edge ], !dbg !35
  %.pre-phi3165 = phi float [ %3271, %2680 ], [ %2262, %._crit_edge ], !dbg !35
  %.pre-phi3163 = phi float [ %3270, %2680 ], [ %2261, %._crit_edge ], !dbg !35
  %.pre-phi3161 = phi float [ %3269, %2680 ], [ %2260, %._crit_edge ], !dbg !35
  %.pre-phi3159 = phi float [ %3266, %2680 ], [ %2259, %._crit_edge ], !dbg !35
  %.pre-phi3157 = phi float [ %3265, %2680 ], [ %2258, %._crit_edge ], !dbg !35
  %.pre-phi3155 = phi float [ %3264, %2680 ], [ %2257, %._crit_edge ], !dbg !35
  %.pre-phi3153 = phi float [ %3263, %2680 ], [ %2256, %._crit_edge ], !dbg !35
  %.pre-phi3151 = phi float [ %3248, %2680 ], [ %2255, %._crit_edge ], !dbg !35
  %.pre-phi3149 = phi float [ %3247, %2680 ], [ %2254, %._crit_edge ], !dbg !35
  %.pre-phi3147 = phi float [ %3246, %2680 ], [ %2253, %._crit_edge ], !dbg !35
  %.pre-phi3145 = phi float [ %3245, %2680 ], [ %2252, %._crit_edge ], !dbg !35
  %.pre-phi3143 = phi float [ %3242, %2680 ], [ %2251, %._crit_edge ], !dbg !35
  %.pre-phi3141 = phi float [ %3241, %2680 ], [ %2250, %._crit_edge ], !dbg !35
  %.pre-phi3139 = phi float [ %3240, %2680 ], [ %2249, %._crit_edge ], !dbg !35
  %.pre-phi3137 = phi float [ %3239, %2680 ], [ %2248, %._crit_edge ], !dbg !35
  %.pre-phi3135 = phi float [ %3308, %2680 ], [ %2247, %._crit_edge ], !dbg !35
  %.pre-phi3133 = phi float [ %3307, %2680 ], [ %2246, %._crit_edge ], !dbg !35
  %.pre-phi3131 = phi float [ %3306, %2680 ], [ %2245, %._crit_edge ], !dbg !35
  %.pre-phi3129 = phi float [ %3305, %2680 ], [ %2244, %._crit_edge ], !dbg !35
  %.pre-phi3127 = phi float [ %3302, %2680 ], [ %2243, %._crit_edge ], !dbg !35
  %.pre-phi3125 = phi float [ %3301, %2680 ], [ %2242, %._crit_edge ], !dbg !35
  %.pre-phi3123 = phi float [ %3300, %2680 ], [ %2241, %._crit_edge ], !dbg !35
  %.pre-phi3121 = phi float [ %3299, %2680 ], [ %2240, %._crit_edge ], !dbg !35
  %.pre-phi3119 = phi float [ %3284, %2680 ], [ %2239, %._crit_edge ], !dbg !35
  %.pre-phi3117 = phi float [ %3283, %2680 ], [ %2238, %._crit_edge ], !dbg !35
  %.pre-phi3115 = phi float [ %3282, %2680 ], [ %2237, %._crit_edge ], !dbg !35
  %.pre-phi3113 = phi float [ %3281, %2680 ], [ %2236, %._crit_edge ], !dbg !35
  %.pre-phi3111 = phi float [ %3278, %2680 ], [ %2235, %._crit_edge ], !dbg !35
  %.pre-phi3109 = phi float [ %3277, %2680 ], [ %2234, %._crit_edge ], !dbg !35
  %.pre-phi3107 = phi float [ %3276, %2680 ], [ %2233, %._crit_edge ], !dbg !35
  %.pre-phi3105 = phi float [ %3275, %2680 ], [ %2232, %._crit_edge ], !dbg !35
  %.pre-phi3103 = phi float [ %3260, %2680 ], [ %2231, %._crit_edge ], !dbg !35
  %.pre-phi3101 = phi float [ %3259, %2680 ], [ %2230, %._crit_edge ], !dbg !35
  %.pre-phi3099 = phi float [ %3258, %2680 ], [ %2229, %._crit_edge ], !dbg !35
  %.pre-phi3097 = phi float [ %3257, %2680 ], [ %2228, %._crit_edge ], !dbg !35
  %.pre-phi3095 = phi float [ %3254, %2680 ], [ %2227, %._crit_edge ], !dbg !35
  %.pre-phi3093 = phi float [ %3253, %2680 ], [ %2226, %._crit_edge ], !dbg !35
  %.pre-phi3091 = phi float [ %3252, %2680 ], [ %2225, %._crit_edge ], !dbg !35
  %.pre-phi3089 = phi float [ %3251, %2680 ], [ %2224, %._crit_edge ], !dbg !35
  %.pre-phi3087 = phi float [ %3236, %2680 ], [ %2223, %._crit_edge ], !dbg !35
  %.pre-phi3085 = phi float [ %3235, %2680 ], [ %2222, %._crit_edge ], !dbg !35
  %.pre-phi3083 = phi float [ %3234, %2680 ], [ %2221, %._crit_edge ], !dbg !35
  %.pre-phi3081 = phi float [ %3233, %2680 ], [ %2220, %._crit_edge ], !dbg !35
  %.pre-phi3079 = phi float [ %3230, %2680 ], [ %2219, %._crit_edge ], !dbg !35
  %.pre-phi3077 = phi float [ %3229, %2680 ], [ %2218, %._crit_edge ], !dbg !35
  %.pre-phi3075 = phi float [ %3228, %2680 ], [ %2217, %._crit_edge ], !dbg !35
  %.pre-phi3073 = phi float [ %3227, %2680 ], [ %2216, %._crit_edge ], !dbg !35
  %.pre-phi3071 = phi float [ %3224, %2680 ], [ %2215, %._crit_edge ], !dbg !35
  %.pre-phi3069 = phi float [ %3223, %2680 ], [ %2214, %._crit_edge ], !dbg !35
  %.pre-phi3067 = phi float [ %3222, %2680 ], [ %2213, %._crit_edge ], !dbg !35
  %.pre-phi3065 = phi float [ %3221, %2680 ], [ %2212, %._crit_edge ], !dbg !35
  %.pre-phi3063 = phi float [ %3218, %2680 ], [ %2211, %._crit_edge ], !dbg !35
  %.pre-phi3061 = phi float [ %3217, %2680 ], [ %2210, %._crit_edge ], !dbg !35
  %.pre-phi3059 = phi float [ %3216, %2680 ], [ %2209, %._crit_edge ], !dbg !35
  %.pre-phi3057 = phi float [ %3215, %2680 ], [ %2208, %._crit_edge ], !dbg !35
  %.pre-phi3055 = phi float [ %3200, %2680 ], [ %2207, %._crit_edge ], !dbg !35
  %.pre-phi3053 = phi float [ %3199, %2680 ], [ %2206, %._crit_edge ], !dbg !35
  %.pre-phi3051 = phi float [ %3198, %2680 ], [ %2205, %._crit_edge ], !dbg !35
  %.pre-phi3049 = phi float [ %3197, %2680 ], [ %2204, %._crit_edge ], !dbg !35
  %.pre-phi3047 = phi float [ %3194, %2680 ], [ %2203, %._crit_edge ], !dbg !35
  %.pre-phi3045 = phi float [ %3193, %2680 ], [ %2202, %._crit_edge ], !dbg !35
  %.pre-phi3043 = phi float [ %3192, %2680 ], [ %2201, %._crit_edge ], !dbg !35
  %.pre-phi3041 = phi float [ %3191, %2680 ], [ %2200, %._crit_edge ], !dbg !35
  %.pre-phi3039 = phi float [ %3176, %2680 ], [ %2199, %._crit_edge ], !dbg !35
  %.pre-phi3037 = phi float [ %3175, %2680 ], [ %2198, %._crit_edge ], !dbg !35
  %.pre-phi3035 = phi float [ %3174, %2680 ], [ %2197, %._crit_edge ], !dbg !35
  %.pre-phi3033 = phi float [ %3173, %2680 ], [ %2196, %._crit_edge ], !dbg !35
  %.pre-phi3031 = phi float [ %3170, %2680 ], [ %2195, %._crit_edge ], !dbg !35
  %.pre-phi3029 = phi float [ %3169, %2680 ], [ %2194, %._crit_edge ], !dbg !35
  %.pre-phi3027 = phi float [ %3168, %2680 ], [ %2193, %._crit_edge ], !dbg !35
  %.pre-phi3025 = phi float [ %3167, %2680 ], [ %2192, %._crit_edge ], !dbg !35
  %.pre-phi3023 = phi float [ %3152, %2680 ], [ %2191, %._crit_edge ], !dbg !35
  %.pre-phi3021 = phi float [ %3151, %2680 ], [ %2190, %._crit_edge ], !dbg !35
  %.pre-phi3019 = phi float [ %3150, %2680 ], [ %2189, %._crit_edge ], !dbg !35
  %.pre-phi3017 = phi float [ %3149, %2680 ], [ %2188, %._crit_edge ], !dbg !35
  %.pre-phi3015 = phi float [ %3146, %2680 ], [ %2187, %._crit_edge ], !dbg !35
  %.pre-phi3013 = phi float [ %3145, %2680 ], [ %2186, %._crit_edge ], !dbg !35
  %.pre-phi3011 = phi float [ %3144, %2680 ], [ %2185, %._crit_edge ], !dbg !35
  %.pre-phi3009 = phi float [ %3143, %2680 ], [ %2184, %._crit_edge ], !dbg !35
  %.pre-phi3007 = phi float [ %3212, %2680 ], [ %2183, %._crit_edge ], !dbg !35
  %.pre-phi3005 = phi float [ %3211, %2680 ], [ %2182, %._crit_edge ], !dbg !35
  %.pre-phi3003 = phi float [ %3210, %2680 ], [ %2181, %._crit_edge ], !dbg !35
  %.pre-phi3001 = phi float [ %3209, %2680 ], [ %2180, %._crit_edge ], !dbg !35
  %.pre-phi2999 = phi float [ %3206, %2680 ], [ %2179, %._crit_edge ], !dbg !35
  %.pre-phi2997 = phi float [ %3205, %2680 ], [ %2178, %._crit_edge ], !dbg !35
  %.pre-phi2995 = phi float [ %3204, %2680 ], [ %2177, %._crit_edge ], !dbg !35
  %.pre-phi2993 = phi float [ %3203, %2680 ], [ %2176, %._crit_edge ], !dbg !35
  %.pre-phi2991 = phi float [ %3188, %2680 ], [ %2175, %._crit_edge ], !dbg !35
  %.pre-phi2989 = phi float [ %3187, %2680 ], [ %2174, %._crit_edge ], !dbg !35
  %.pre-phi2987 = phi float [ %3186, %2680 ], [ %2173, %._crit_edge ], !dbg !35
  %.pre-phi2985 = phi float [ %3185, %2680 ], [ %2172, %._crit_edge ], !dbg !35
  %.pre-phi2983 = phi float [ %3182, %2680 ], [ %2171, %._crit_edge ], !dbg !35
  %.pre-phi2981 = phi float [ %3181, %2680 ], [ %2170, %._crit_edge ], !dbg !35
  %.pre-phi2979 = phi float [ %3180, %2680 ], [ %2169, %._crit_edge ], !dbg !35
  %.pre-phi2977 = phi float [ %3179, %2680 ], [ %2168, %._crit_edge ], !dbg !35
  %.pre-phi2975 = phi float [ %3164, %2680 ], [ %2167, %._crit_edge ], !dbg !35
  %.pre-phi2973 = phi float [ %3163, %2680 ], [ %2166, %._crit_edge ], !dbg !35
  %.pre-phi2971 = phi float [ %3162, %2680 ], [ %2165, %._crit_edge ], !dbg !35
  %.pre-phi2969 = phi float [ %3161, %2680 ], [ %2164, %._crit_edge ], !dbg !35
  %.pre-phi2967 = phi float [ %3158, %2680 ], [ %2163, %._crit_edge ], !dbg !35
  %.pre-phi2965 = phi float [ %3157, %2680 ], [ %2162, %._crit_edge ], !dbg !35
  %.pre-phi2963 = phi float [ %3156, %2680 ], [ %2161, %._crit_edge ], !dbg !35
  %.pre-phi2961 = phi float [ %3155, %2680 ], [ %2160, %._crit_edge ], !dbg !35
  %.pre-phi2959 = phi float [ %3140, %2680 ], [ %2159, %._crit_edge ], !dbg !35
  %.pre-phi2957 = phi float [ %3139, %2680 ], [ %2158, %._crit_edge ], !dbg !35
  %.pre-phi2955 = phi float [ %3138, %2680 ], [ %2157, %._crit_edge ], !dbg !35
  %.pre-phi2953 = phi float [ %3137, %2680 ], [ %2156, %._crit_edge ], !dbg !35
  %.pre-phi2951 = phi float [ %3134, %2680 ], [ %2155, %._crit_edge ], !dbg !35
  %.pre-phi2949 = phi float [ %3133, %2680 ], [ %2154, %._crit_edge ], !dbg !35
  %.pre-phi2947 = phi float [ %3132, %2680 ], [ %2153, %._crit_edge ], !dbg !35
  %.pre-phi2945 = phi float [ %3131, %2680 ], [ %2152, %._crit_edge ], !dbg !35
  fence syncscope("workgroup") release, !dbg !36
  tail call void @llvm.amdgcn.s.barrier(), !dbg !36
  fence syncscope("workgroup") acquire, !dbg !36
  br i1 %92, label %3513, label %4378, !dbg !54

3513:                                             ; preds = %._crit_edge._crit_edge
  %3514 = load <8 x half>, ptr addrspace(3) %331, align 16, !dbg !40
  %3515 = load <8 x half>, ptr addrspace(3) %329, align 16, !dbg !40
  %3516 = load <8 x half>, ptr addrspace(3) %327, align 16, !dbg !40
  %3517 = load <8 x half>, ptr addrspace(3) %325, align 16, !dbg !40
  %3518 = load <8 x half>, ptr addrspace(3) %323, align 16, !dbg !40
  %3519 = load <8 x half>, ptr addrspace(3) %321, align 16, !dbg !40
  %3520 = load <8 x half>, ptr addrspace(3) %319, align 16, !dbg !40
  %3521 = load <8 x half>, ptr addrspace(3) %317, align 16, !dbg !40
  %3522 = load <8 x half>, ptr addrspace(3) %315, align 16, !dbg !40
  %3523 = load <8 x half>, ptr addrspace(3) %313, align 16, !dbg !40
  %3524 = load <8 x half>, ptr addrspace(3) %311, align 16, !dbg !40
  %3525 = load <8 x half>, ptr addrspace(3) %309, align 16, !dbg !40
  %3526 = load <8 x half>, ptr addrspace(3) %307, align 16, !dbg !40
  %3527 = load <8 x half>, ptr addrspace(3) %305, align 16, !dbg !40
  %3528 = load <8 x half>, ptr addrspace(3) %303, align 16, !dbg !40
  %3529 = load <8 x half>, ptr addrspace(3) %301, align 16, !dbg !40
  %3530 = load <8 x half>, ptr addrspace(3) %279, align 16, !dbg !36
  %3531 = load <8 x half>, ptr addrspace(3) %277, align 16, !dbg !36
  %3532 = load <8 x half>, ptr addrspace(3) %275, align 16, !dbg !36
  %3533 = load <8 x half>, ptr addrspace(3) %273, align 16, !dbg !36
  %3534 = load <8 x half>, ptr addrspace(3) %271, align 16, !dbg !36
  %3535 = load <8 x half>, ptr addrspace(3) %269, align 16, !dbg !36
  %3536 = load <8 x half>, ptr addrspace(3) %267, align 16, !dbg !36
  %3537 = load <8 x half>, ptr addrspace(3) %265, align 16, !dbg !36
  %3538 = load <8 x half>, ptr addrspace(3) %263, align 16, !dbg !36
  %3539 = load <8 x half>, ptr addrspace(3) %261, align 16, !dbg !36
  %3540 = load <8 x half>, ptr addrspace(3) %259, align 16, !dbg !36
  %3541 = load <8 x half>, ptr addrspace(3) %257, align 16, !dbg !36
  %3542 = load <8 x half>, ptr addrspace(3) %255, align 16, !dbg !36
  %3543 = load <8 x half>, ptr addrspace(3) %253, align 16, !dbg !36
  %3544 = load <8 x half>, ptr addrspace(3) %251, align 16, !dbg !36
  %3545 = load <8 x half>, ptr addrspace(3) %249, align 16, !dbg !36
  %3546 = shufflevector <8 x half> %3545, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3547 = shufflevector <8 x half> %3545, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3548 = shufflevector <8 x half> %3544, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3549 = shufflevector <8 x half> %3544, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3550 = shufflevector <8 x half> %3543, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3551 = shufflevector <8 x half> %3543, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3552 = shufflevector <8 x half> %3542, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3553 = shufflevector <8 x half> %3542, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3554 = shufflevector <8 x half> %3541, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3555 = shufflevector <8 x half> %3541, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3556 = shufflevector <8 x half> %3540, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3557 = shufflevector <8 x half> %3540, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3558 = shufflevector <8 x half> %3539, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3559 = shufflevector <8 x half> %3539, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3560 = shufflevector <8 x half> %3538, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3561 = shufflevector <8 x half> %3538, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3562 = shufflevector <8 x half> %3537, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3563 = shufflevector <8 x half> %3537, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3564 = shufflevector <8 x half> %3536, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3565 = shufflevector <8 x half> %3536, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3566 = shufflevector <8 x half> %3535, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3567 = shufflevector <8 x half> %3535, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3568 = shufflevector <8 x half> %3534, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3569 = shufflevector <8 x half> %3534, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3570 = shufflevector <8 x half> %3533, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3571 = shufflevector <8 x half> %3533, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3572 = shufflevector <8 x half> %3532, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3573 = shufflevector <8 x half> %3532, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3574 = shufflevector <8 x half> %3531, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3575 = shufflevector <8 x half> %3531, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3576 = shufflevector <8 x half> %3530, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3577 = shufflevector <8 x half> %3530, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3578 = shufflevector <8 x half> %3529, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3579 = shufflevector <8 x half> %3529, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3580 = shufflevector <8 x half> %3528, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3581 = shufflevector <8 x half> %3528, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3582 = shufflevector <8 x half> %3527, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3583 = shufflevector <8 x half> %3527, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3584 = shufflevector <8 x half> %3526, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3585 = shufflevector <8 x half> %3526, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3586 = shufflevector <8 x half> %3525, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3587 = shufflevector <8 x half> %3525, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3588 = shufflevector <8 x half> %3524, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3589 = shufflevector <8 x half> %3524, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3590 = shufflevector <8 x half> %3523, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3591 = shufflevector <8 x half> %3523, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3592 = shufflevector <8 x half> %3522, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3593 = shufflevector <8 x half> %3522, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3594 = shufflevector <8 x half> %3521, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3595 = shufflevector <8 x half> %3521, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3596 = shufflevector <8 x half> %3520, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3597 = shufflevector <8 x half> %3520, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3598 = shufflevector <8 x half> %3519, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3599 = shufflevector <8 x half> %3519, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3600 = shufflevector <8 x half> %3518, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3601 = shufflevector <8 x half> %3518, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3602 = shufflevector <8 x half> %3517, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3603 = shufflevector <8 x half> %3517, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3604 = shufflevector <8 x half> %3516, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3605 = shufflevector <8 x half> %3516, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3606 = shufflevector <8 x half> %3515, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3607 = shufflevector <8 x half> %3515, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3608 = shufflevector <8 x half> %3514, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %3609 = shufflevector <8 x half> %3514, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !54
  %3610 = insertelement <4 x float> poison, float %.pre-phi2945, i64 0, !dbg !54
  %3611 = insertelement <4 x float> %3610, float %.pre-phi2947, i64 1, !dbg !54
  %3612 = insertelement <4 x float> %3611, float %.pre-phi2949, i64 2, !dbg !54
  %3613 = insertelement <4 x float> %3612, float %.pre-phi2951, i64 3, !dbg !54
  %3614 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3546, <4 x float> %3613, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3615 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3547, <4 x float> %3614, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3616 = insertelement <4 x float> poison, float %.pre-phi2953, i64 0, !dbg !54
  %3617 = insertelement <4 x float> %3616, float %.pre-phi2955, i64 1, !dbg !54
  %3618 = insertelement <4 x float> %3617, float %.pre-phi2957, i64 2, !dbg !54
  %3619 = insertelement <4 x float> %3618, float %.pre-phi2959, i64 3, !dbg !54
  %3620 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3546, <4 x float> %3619, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3621 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3547, <4 x float> %3620, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3622 = insertelement <4 x float> poison, float %.pre-phi3009, i64 0, !dbg !54
  %3623 = insertelement <4 x float> %3622, float %.pre-phi3011, i64 1, !dbg !54
  %3624 = insertelement <4 x float> %3623, float %.pre-phi3013, i64 2, !dbg !54
  %3625 = insertelement <4 x float> %3624, float %.pre-phi3015, i64 3, !dbg !54
  %3626 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3550, <4 x float> %3625, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3627 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3551, <4 x float> %3626, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3628 = insertelement <4 x float> poison, float %.pre-phi3017, i64 0, !dbg !54
  %3629 = insertelement <4 x float> %3628, float %.pre-phi3019, i64 1, !dbg !54
  %3630 = insertelement <4 x float> %3629, float %.pre-phi3021, i64 2, !dbg !54
  %3631 = insertelement <4 x float> %3630, float %.pre-phi3023, i64 3, !dbg !54
  %3632 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3550, <4 x float> %3631, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3633 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3551, <4 x float> %3632, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3634 = insertelement <4 x float> poison, float %.pre-phi2961, i64 0, !dbg !54
  %3635 = insertelement <4 x float> %3634, float %.pre-phi2963, i64 1, !dbg !54
  %3636 = insertelement <4 x float> %3635, float %.pre-phi2965, i64 2, !dbg !54
  %3637 = insertelement <4 x float> %3636, float %.pre-phi2967, i64 3, !dbg !54
  %3638 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3546, <4 x float> %3637, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3639 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3547, <4 x float> %3638, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3640 = insertelement <4 x float> poison, float %.pre-phi2969, i64 0, !dbg !54
  %3641 = insertelement <4 x float> %3640, float %.pre-phi2971, i64 1, !dbg !54
  %3642 = insertelement <4 x float> %3641, float %.pre-phi2973, i64 2, !dbg !54
  %3643 = insertelement <4 x float> %3642, float %.pre-phi2975, i64 3, !dbg !54
  %3644 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3546, <4 x float> %3643, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3645 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3547, <4 x float> %3644, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3646 = insertelement <4 x float> poison, float %.pre-phi3025, i64 0, !dbg !54
  %3647 = insertelement <4 x float> %3646, float %.pre-phi3027, i64 1, !dbg !54
  %3648 = insertelement <4 x float> %3647, float %.pre-phi3029, i64 2, !dbg !54
  %3649 = insertelement <4 x float> %3648, float %.pre-phi3031, i64 3, !dbg !54
  %3650 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3550, <4 x float> %3649, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3651 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3551, <4 x float> %3650, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3652 = insertelement <4 x float> poison, float %.pre-phi3033, i64 0, !dbg !54
  %3653 = insertelement <4 x float> %3652, float %.pre-phi3035, i64 1, !dbg !54
  %3654 = insertelement <4 x float> %3653, float %.pre-phi3037, i64 2, !dbg !54
  %3655 = insertelement <4 x float> %3654, float %.pre-phi3039, i64 3, !dbg !54
  %3656 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3550, <4 x float> %3655, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3657 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3551, <4 x float> %3656, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3658 = insertelement <4 x float> poison, float %.pre-phi2977, i64 0, !dbg !54
  %3659 = insertelement <4 x float> %3658, float %.pre-phi2979, i64 1, !dbg !54
  %3660 = insertelement <4 x float> %3659, float %.pre-phi2981, i64 2, !dbg !54
  %3661 = insertelement <4 x float> %3660, float %.pre-phi2983, i64 3, !dbg !54
  %3662 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3546, <4 x float> %3661, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3663 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3547, <4 x float> %3662, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3664 = insertelement <4 x float> poison, float %.pre-phi2985, i64 0, !dbg !54
  %3665 = insertelement <4 x float> %3664, float %.pre-phi2987, i64 1, !dbg !54
  %3666 = insertelement <4 x float> %3665, float %.pre-phi2989, i64 2, !dbg !54
  %3667 = insertelement <4 x float> %3666, float %.pre-phi2991, i64 3, !dbg !54
  %3668 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3546, <4 x float> %3667, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3669 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3547, <4 x float> %3668, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3670 = insertelement <4 x float> poison, float %.pre-phi3041, i64 0, !dbg !54
  %3671 = insertelement <4 x float> %3670, float %.pre-phi3043, i64 1, !dbg !54
  %3672 = insertelement <4 x float> %3671, float %.pre-phi3045, i64 2, !dbg !54
  %3673 = insertelement <4 x float> %3672, float %.pre-phi3047, i64 3, !dbg !54
  %3674 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3550, <4 x float> %3673, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3675 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3551, <4 x float> %3674, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3676 = insertelement <4 x float> poison, float %.pre-phi3049, i64 0, !dbg !54
  %3677 = insertelement <4 x float> %3676, float %.pre-phi3051, i64 1, !dbg !54
  %3678 = insertelement <4 x float> %3677, float %.pre-phi3053, i64 2, !dbg !54
  %3679 = insertelement <4 x float> %3678, float %.pre-phi3055, i64 3, !dbg !54
  %3680 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3550, <4 x float> %3679, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3681 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3551, <4 x float> %3680, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3682 = insertelement <4 x float> poison, float %.pre-phi2993, i64 0, !dbg !54
  %3683 = insertelement <4 x float> %3682, float %.pre-phi2995, i64 1, !dbg !54
  %3684 = insertelement <4 x float> %3683, float %.pre-phi2997, i64 2, !dbg !54
  %3685 = insertelement <4 x float> %3684, float %.pre-phi2999, i64 3, !dbg !54
  %3686 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3546, <4 x float> %3685, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3687 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3547, <4 x float> %3686, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3688 = insertelement <4 x float> poison, float %.pre-phi3001, i64 0, !dbg !54
  %3689 = insertelement <4 x float> %3688, float %.pre-phi3003, i64 1, !dbg !54
  %3690 = insertelement <4 x float> %3689, float %.pre-phi3005, i64 2, !dbg !54
  %3691 = insertelement <4 x float> %3690, float %.pre-phi3007, i64 3, !dbg !54
  %3692 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3546, <4 x float> %3691, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3693 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3547, <4 x float> %3692, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3694 = insertelement <4 x float> poison, float %.pre-phi3057, i64 0, !dbg !54
  %3695 = insertelement <4 x float> %3694, float %.pre-phi3059, i64 1, !dbg !54
  %3696 = insertelement <4 x float> %3695, float %.pre-phi3061, i64 2, !dbg !54
  %3697 = insertelement <4 x float> %3696, float %.pre-phi3063, i64 3, !dbg !54
  %3698 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3550, <4 x float> %3697, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3699 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3551, <4 x float> %3698, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3700 = insertelement <4 x float> poison, float %.pre-phi3065, i64 0, !dbg !54
  %3701 = insertelement <4 x float> %3700, float %.pre-phi3067, i64 1, !dbg !54
  %3702 = insertelement <4 x float> %3701, float %.pre-phi3069, i64 2, !dbg !54
  %3703 = insertelement <4 x float> %3702, float %.pre-phi3071, i64 3, !dbg !54
  %3704 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3550, <4 x float> %3703, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3705 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3551, <4 x float> %3704, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3706 = insertelement <4 x float> poison, float %.pre-phi3073, i64 0, !dbg !54
  %3707 = insertelement <4 x float> %3706, float %.pre-phi3075, i64 1, !dbg !54
  %3708 = insertelement <4 x float> %3707, float %.pre-phi3077, i64 2, !dbg !54
  %3709 = insertelement <4 x float> %3708, float %.pre-phi3079, i64 3, !dbg !54
  %3710 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3554, <4 x float> %3709, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3711 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3555, <4 x float> %3710, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3712 = insertelement <4 x float> poison, float %.pre-phi3081, i64 0, !dbg !54
  %3713 = insertelement <4 x float> %3712, float %.pre-phi3083, i64 1, !dbg !54
  %3714 = insertelement <4 x float> %3713, float %.pre-phi3085, i64 2, !dbg !54
  %3715 = insertelement <4 x float> %3714, float %.pre-phi3087, i64 3, !dbg !54
  %3716 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3554, <4 x float> %3715, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3717 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3555, <4 x float> %3716, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3718 = insertelement <4 x float> poison, float %.pre-phi3137, i64 0, !dbg !54
  %3719 = insertelement <4 x float> %3718, float %.pre-phi3139, i64 1, !dbg !54
  %3720 = insertelement <4 x float> %3719, float %.pre-phi3141, i64 2, !dbg !54
  %3721 = insertelement <4 x float> %3720, float %.pre-phi3143, i64 3, !dbg !54
  %3722 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3558, <4 x float> %3721, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3723 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3559, <4 x float> %3722, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3724 = insertelement <4 x float> poison, float %.pre-phi3145, i64 0, !dbg !54
  %3725 = insertelement <4 x float> %3724, float %.pre-phi3147, i64 1, !dbg !54
  %3726 = insertelement <4 x float> %3725, float %.pre-phi3149, i64 2, !dbg !54
  %3727 = insertelement <4 x float> %3726, float %.pre-phi3151, i64 3, !dbg !54
  %3728 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3558, <4 x float> %3727, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3729 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3559, <4 x float> %3728, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3730 = insertelement <4 x float> poison, float %.pre-phi3089, i64 0, !dbg !54
  %3731 = insertelement <4 x float> %3730, float %.pre-phi3091, i64 1, !dbg !54
  %3732 = insertelement <4 x float> %3731, float %.pre-phi3093, i64 2, !dbg !54
  %3733 = insertelement <4 x float> %3732, float %.pre-phi3095, i64 3, !dbg !54
  %3734 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3554, <4 x float> %3733, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3735 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3555, <4 x float> %3734, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3736 = insertelement <4 x float> poison, float %.pre-phi3097, i64 0, !dbg !54
  %3737 = insertelement <4 x float> %3736, float %.pre-phi3099, i64 1, !dbg !54
  %3738 = insertelement <4 x float> %3737, float %.pre-phi3101, i64 2, !dbg !54
  %3739 = insertelement <4 x float> %3738, float %.pre-phi3103, i64 3, !dbg !54
  %3740 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3554, <4 x float> %3739, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3741 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3555, <4 x float> %3740, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3742 = insertelement <4 x float> poison, float %.pre-phi3153, i64 0, !dbg !54
  %3743 = insertelement <4 x float> %3742, float %.pre-phi3155, i64 1, !dbg !54
  %3744 = insertelement <4 x float> %3743, float %.pre-phi3157, i64 2, !dbg !54
  %3745 = insertelement <4 x float> %3744, float %.pre-phi3159, i64 3, !dbg !54
  %3746 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3558, <4 x float> %3745, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3747 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3559, <4 x float> %3746, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3748 = insertelement <4 x float> poison, float %.pre-phi3161, i64 0, !dbg !54
  %3749 = insertelement <4 x float> %3748, float %.pre-phi3163, i64 1, !dbg !54
  %3750 = insertelement <4 x float> %3749, float %.pre-phi3165, i64 2, !dbg !54
  %3751 = insertelement <4 x float> %3750, float %.pre-phi3167, i64 3, !dbg !54
  %3752 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3558, <4 x float> %3751, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3753 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3559, <4 x float> %3752, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3754 = insertelement <4 x float> poison, float %.pre-phi3105, i64 0, !dbg !54
  %3755 = insertelement <4 x float> %3754, float %.pre-phi3107, i64 1, !dbg !54
  %3756 = insertelement <4 x float> %3755, float %.pre-phi3109, i64 2, !dbg !54
  %3757 = insertelement <4 x float> %3756, float %.pre-phi3111, i64 3, !dbg !54
  %3758 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3554, <4 x float> %3757, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3759 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3555, <4 x float> %3758, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3760 = insertelement <4 x float> poison, float %.pre-phi3113, i64 0, !dbg !54
  %3761 = insertelement <4 x float> %3760, float %.pre-phi3115, i64 1, !dbg !54
  %3762 = insertelement <4 x float> %3761, float %.pre-phi3117, i64 2, !dbg !54
  %3763 = insertelement <4 x float> %3762, float %.pre-phi3119, i64 3, !dbg !54
  %3764 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3554, <4 x float> %3763, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3555, <4 x float> %3764, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3766 = insertelement <4 x float> poison, float %.pre-phi3169, i64 0, !dbg !54
  %3767 = insertelement <4 x float> %3766, float %.pre-phi3171, i64 1, !dbg !54
  %3768 = insertelement <4 x float> %3767, float %.pre-phi3173, i64 2, !dbg !54
  %3769 = insertelement <4 x float> %3768, float %.pre-phi3175, i64 3, !dbg !54
  %3770 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3558, <4 x float> %3769, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3771 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3559, <4 x float> %3770, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3772 = insertelement <4 x float> poison, float %.pre-phi3177, i64 0, !dbg !54
  %3773 = insertelement <4 x float> %3772, float %.pre-phi3179, i64 1, !dbg !54
  %3774 = insertelement <4 x float> %3773, float %.pre-phi3181, i64 2, !dbg !54
  %3775 = insertelement <4 x float> %3774, float %.pre-phi3183, i64 3, !dbg !54
  %3776 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3558, <4 x float> %3775, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3777 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3559, <4 x float> %3776, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3778 = insertelement <4 x float> poison, float %.pre-phi3121, i64 0, !dbg !54
  %3779 = insertelement <4 x float> %3778, float %.pre-phi3123, i64 1, !dbg !54
  %3780 = insertelement <4 x float> %3779, float %.pre-phi3125, i64 2, !dbg !54
  %3781 = insertelement <4 x float> %3780, float %.pre-phi3127, i64 3, !dbg !54
  %3782 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3554, <4 x float> %3781, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3783 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3555, <4 x float> %3782, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3784 = insertelement <4 x float> poison, float %.pre-phi3129, i64 0, !dbg !54
  %3785 = insertelement <4 x float> %3784, float %.pre-phi3131, i64 1, !dbg !54
  %3786 = insertelement <4 x float> %3785, float %.pre-phi3133, i64 2, !dbg !54
  %3787 = insertelement <4 x float> %3786, float %.pre-phi3135, i64 3, !dbg !54
  %3788 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3554, <4 x float> %3787, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3789 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3555, <4 x float> %3788, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3790 = insertelement <4 x float> poison, float %.pre-phi3185, i64 0, !dbg !54
  %3791 = insertelement <4 x float> %3790, float %.pre-phi3187, i64 1, !dbg !54
  %3792 = insertelement <4 x float> %3791, float %.pre-phi3189, i64 2, !dbg !54
  %3793 = insertelement <4 x float> %3792, float %.pre-phi3191, i64 3, !dbg !54
  %3794 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3558, <4 x float> %3793, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3795 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3559, <4 x float> %3794, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3796 = insertelement <4 x float> poison, float %.pre-phi3193, i64 0, !dbg !54
  %3797 = insertelement <4 x float> %3796, float %.pre-phi3195, i64 1, !dbg !54
  %3798 = insertelement <4 x float> %3797, float %.pre-phi3197, i64 2, !dbg !54
  %3799 = insertelement <4 x float> %3798, float %.pre-phi3199, i64 3, !dbg !54
  %3800 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3558, <4 x float> %3799, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3801 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3559, <4 x float> %3800, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3802 = insertelement <4 x float> poison, float %.pre-phi3201, i64 0, !dbg !54
  %3803 = insertelement <4 x float> %3802, float %.pre-phi3203, i64 1, !dbg !54
  %3804 = insertelement <4 x float> %3803, float %.pre-phi3205, i64 2, !dbg !54
  %3805 = insertelement <4 x float> %3804, float %.pre-phi3207, i64 3, !dbg !54
  %3806 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3562, <4 x float> %3805, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3807 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3563, <4 x float> %3806, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3808 = insertelement <4 x float> poison, float %.pre-phi3209, i64 0, !dbg !54
  %3809 = insertelement <4 x float> %3808, float %.pre-phi3211, i64 1, !dbg !54
  %3810 = insertelement <4 x float> %3809, float %.pre-phi3213, i64 2, !dbg !54
  %3811 = insertelement <4 x float> %3810, float %.pre-phi3215, i64 3, !dbg !54
  %3812 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3562, <4 x float> %3811, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3813 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3563, <4 x float> %3812, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3814 = insertelement <4 x float> poison, float %.pre-phi3265, i64 0, !dbg !54
  %3815 = insertelement <4 x float> %3814, float %.pre-phi3267, i64 1, !dbg !54
  %3816 = insertelement <4 x float> %3815, float %.pre-phi3269, i64 2, !dbg !54
  %3817 = insertelement <4 x float> %3816, float %.pre-phi3271, i64 3, !dbg !54
  %3818 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3566, <4 x float> %3817, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3819 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3567, <4 x float> %3818, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3820 = insertelement <4 x float> poison, float %.pre-phi3273, i64 0, !dbg !54
  %3821 = insertelement <4 x float> %3820, float %.pre-phi3275, i64 1, !dbg !54
  %3822 = insertelement <4 x float> %3821, float %.pre-phi3277, i64 2, !dbg !54
  %3823 = insertelement <4 x float> %3822, float %.pre-phi3279, i64 3, !dbg !54
  %3824 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3566, <4 x float> %3823, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3567, <4 x float> %3824, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3826 = insertelement <4 x float> poison, float %.pre-phi3217, i64 0, !dbg !54
  %3827 = insertelement <4 x float> %3826, float %.pre-phi3219, i64 1, !dbg !54
  %3828 = insertelement <4 x float> %3827, float %.pre-phi3221, i64 2, !dbg !54
  %3829 = insertelement <4 x float> %3828, float %.pre-phi3223, i64 3, !dbg !54
  %3830 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3562, <4 x float> %3829, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3831 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3563, <4 x float> %3830, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3832 = insertelement <4 x float> poison, float %.pre-phi3225, i64 0, !dbg !54
  %3833 = insertelement <4 x float> %3832, float %.pre-phi3227, i64 1, !dbg !54
  %3834 = insertelement <4 x float> %3833, float %.pre-phi3229, i64 2, !dbg !54
  %3835 = insertelement <4 x float> %3834, float %.pre-phi3231, i64 3, !dbg !54
  %3836 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3562, <4 x float> %3835, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3837 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3563, <4 x float> %3836, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3838 = insertelement <4 x float> poison, float %.pre-phi3281, i64 0, !dbg !54
  %3839 = insertelement <4 x float> %3838, float %.pre-phi3283, i64 1, !dbg !54
  %3840 = insertelement <4 x float> %3839, float %.pre-phi3285, i64 2, !dbg !54
  %3841 = insertelement <4 x float> %3840, float %.pre-phi3287, i64 3, !dbg !54
  %3842 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3566, <4 x float> %3841, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3843 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3567, <4 x float> %3842, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3844 = insertelement <4 x float> poison, float %.pre-phi3289, i64 0, !dbg !54
  %3845 = insertelement <4 x float> %3844, float %.pre-phi3291, i64 1, !dbg !54
  %3846 = insertelement <4 x float> %3845, float %.pre-phi3293, i64 2, !dbg !54
  %3847 = insertelement <4 x float> %3846, float %.pre-phi3295, i64 3, !dbg !54
  %3848 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3566, <4 x float> %3847, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3849 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3567, <4 x float> %3848, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3850 = insertelement <4 x float> poison, float %.pre-phi3233, i64 0, !dbg !54
  %3851 = insertelement <4 x float> %3850, float %.pre-phi3235, i64 1, !dbg !54
  %3852 = insertelement <4 x float> %3851, float %.pre-phi3237, i64 2, !dbg !54
  %3853 = insertelement <4 x float> %3852, float %.pre-phi3239, i64 3, !dbg !54
  %3854 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3562, <4 x float> %3853, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3855 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3563, <4 x float> %3854, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3856 = insertelement <4 x float> poison, float %.pre-phi3241, i64 0, !dbg !54
  %3857 = insertelement <4 x float> %3856, float %.pre-phi3243, i64 1, !dbg !54
  %3858 = insertelement <4 x float> %3857, float %.pre-phi3245, i64 2, !dbg !54
  %3859 = insertelement <4 x float> %3858, float %.pre-phi3247, i64 3, !dbg !54
  %3860 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3562, <4 x float> %3859, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3861 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3563, <4 x float> %3860, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3862 = insertelement <4 x float> poison, float %.pre-phi3297, i64 0, !dbg !54
  %3863 = insertelement <4 x float> %3862, float %.pre-phi3299, i64 1, !dbg !54
  %3864 = insertelement <4 x float> %3863, float %.pre-phi3301, i64 2, !dbg !54
  %3865 = insertelement <4 x float> %3864, float %.pre-phi3303, i64 3, !dbg !54
  %3866 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3566, <4 x float> %3865, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3867 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3567, <4 x float> %3866, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3868 = insertelement <4 x float> poison, float %.pre-phi3305, i64 0, !dbg !54
  %3869 = insertelement <4 x float> %3868, float %.pre-phi3307, i64 1, !dbg !54
  %3870 = insertelement <4 x float> %3869, float %.pre-phi3309, i64 2, !dbg !54
  %3871 = insertelement <4 x float> %3870, float %.pre-phi3311, i64 3, !dbg !54
  %3872 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3566, <4 x float> %3871, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3567, <4 x float> %3872, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3874 = insertelement <4 x float> poison, float %.pre-phi3249, i64 0, !dbg !54
  %3875 = insertelement <4 x float> %3874, float %.pre-phi3251, i64 1, !dbg !54
  %3876 = insertelement <4 x float> %3875, float %.pre-phi3253, i64 2, !dbg !54
  %3877 = insertelement <4 x float> %3876, float %.pre-phi3255, i64 3, !dbg !54
  %3878 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3562, <4 x float> %3877, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3879 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3563, <4 x float> %3878, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3880 = insertelement <4 x float> poison, float %.pre-phi3257, i64 0, !dbg !54
  %3881 = insertelement <4 x float> %3880, float %.pre-phi3259, i64 1, !dbg !54
  %3882 = insertelement <4 x float> %3881, float %.pre-phi3261, i64 2, !dbg !54
  %3883 = insertelement <4 x float> %3882, float %.pre-phi3263, i64 3, !dbg !54
  %3884 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3562, <4 x float> %3883, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3563, <4 x float> %3884, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3886 = insertelement <4 x float> poison, float %.pre-phi3313, i64 0, !dbg !54
  %3887 = insertelement <4 x float> %3886, float %.pre-phi3315, i64 1, !dbg !54
  %3888 = insertelement <4 x float> %3887, float %.pre-phi3317, i64 2, !dbg !54
  %3889 = insertelement <4 x float> %3888, float %.pre-phi3319, i64 3, !dbg !54
  %3890 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3566, <4 x float> %3889, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3891 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3567, <4 x float> %3890, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3892 = insertelement <4 x float> poison, float %.pre-phi3321, i64 0, !dbg !54
  %3893 = insertelement <4 x float> %3892, float %.pre-phi3323, i64 1, !dbg !54
  %3894 = insertelement <4 x float> %3893, float %.pre-phi3325, i64 2, !dbg !54
  %3895 = insertelement <4 x float> %3894, float %.pre-phi3327, i64 3, !dbg !54
  %3896 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3566, <4 x float> %3895, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3567, <4 x float> %3896, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3898 = insertelement <4 x float> poison, float %.pre-phi3329, i64 0, !dbg !54
  %3899 = insertelement <4 x float> %3898, float %.pre-phi3331, i64 1, !dbg !54
  %3900 = insertelement <4 x float> %3899, float %.pre-phi3333, i64 2, !dbg !54
  %3901 = insertelement <4 x float> %3900, float %.pre-phi3335, i64 3, !dbg !54
  %3902 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3570, <4 x float> %3901, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3903 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3571, <4 x float> %3902, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3904 = insertelement <4 x float> poison, float %.pre-phi3337, i64 0, !dbg !54
  %3905 = insertelement <4 x float> %3904, float %.pre-phi3339, i64 1, !dbg !54
  %3906 = insertelement <4 x float> %3905, float %.pre-phi3341, i64 2, !dbg !54
  %3907 = insertelement <4 x float> %3906, float %.pre-phi3343, i64 3, !dbg !54
  %3908 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3570, <4 x float> %3907, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3909 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3571, <4 x float> %3908, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3910 = insertelement <4 x float> poison, float %.pre-phi3393, i64 0, !dbg !54
  %3911 = insertelement <4 x float> %3910, float %.pre-phi3395, i64 1, !dbg !54
  %3912 = insertelement <4 x float> %3911, float %.pre-phi3397, i64 2, !dbg !54
  %3913 = insertelement <4 x float> %3912, float %.pre-phi3399, i64 3, !dbg !54
  %3914 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3578, <4 x half> %3574, <4 x float> %3913, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3915 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3579, <4 x half> %3575, <4 x float> %3914, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3916 = insertelement <4 x float> poison, float %.pre-phi3401, i64 0, !dbg !54
  %3917 = insertelement <4 x float> %3916, float %.pre-phi3403, i64 1, !dbg !54
  %3918 = insertelement <4 x float> %3917, float %.pre-phi3405, i64 2, !dbg !54
  %3919 = insertelement <4 x float> %3918, float %.pre-phi3407, i64 3, !dbg !54
  %3920 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3582, <4 x half> %3574, <4 x float> %3919, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3921 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3583, <4 x half> %3575, <4 x float> %3920, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3922 = insertelement <4 x float> poison, float %.pre-phi3345, i64 0, !dbg !54
  %3923 = insertelement <4 x float> %3922, float %.pre-phi3347, i64 1, !dbg !54
  %3924 = insertelement <4 x float> %3923, float %.pre-phi3349, i64 2, !dbg !54
  %3925 = insertelement <4 x float> %3924, float %.pre-phi3351, i64 3, !dbg !54
  %3926 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3570, <4 x float> %3925, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3927 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3571, <4 x float> %3926, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3928 = insertelement <4 x float> poison, float %.pre-phi3353, i64 0, !dbg !54
  %3929 = insertelement <4 x float> %3928, float %.pre-phi3355, i64 1, !dbg !54
  %3930 = insertelement <4 x float> %3929, float %.pre-phi3357, i64 2, !dbg !54
  %3931 = insertelement <4 x float> %3930, float %.pre-phi3359, i64 3, !dbg !54
  %3932 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3570, <4 x float> %3931, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3571, <4 x float> %3932, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3934 = insertelement <4 x float> poison, float %.pre-phi3409, i64 0, !dbg !54
  %3935 = insertelement <4 x float> %3934, float %.pre-phi3411, i64 1, !dbg !54
  %3936 = insertelement <4 x float> %3935, float %.pre-phi3413, i64 2, !dbg !54
  %3937 = insertelement <4 x float> %3936, float %.pre-phi3415, i64 3, !dbg !54
  %3938 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3586, <4 x half> %3574, <4 x float> %3937, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3939 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3587, <4 x half> %3575, <4 x float> %3938, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3940 = insertelement <4 x float> poison, float %.pre-phi3417, i64 0, !dbg !54
  %3941 = insertelement <4 x float> %3940, float %.pre-phi3419, i64 1, !dbg !54
  %3942 = insertelement <4 x float> %3941, float %.pre-phi3421, i64 2, !dbg !54
  %3943 = insertelement <4 x float> %3942, float %.pre-phi3423, i64 3, !dbg !54
  %3944 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3590, <4 x half> %3574, <4 x float> %3943, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3945 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3591, <4 x half> %3575, <4 x float> %3944, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3946 = insertelement <4 x float> poison, float %.pre-phi3361, i64 0, !dbg !54
  %3947 = insertelement <4 x float> %3946, float %.pre-phi3363, i64 1, !dbg !54
  %3948 = insertelement <4 x float> %3947, float %.pre-phi3365, i64 2, !dbg !54
  %3949 = insertelement <4 x float> %3948, float %.pre-phi3367, i64 3, !dbg !54
  %3950 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3570, <4 x float> %3949, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3951 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3571, <4 x float> %3950, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3952 = insertelement <4 x float> poison, float %.pre-phi3369, i64 0, !dbg !54
  %3953 = insertelement <4 x float> %3952, float %.pre-phi3371, i64 1, !dbg !54
  %3954 = insertelement <4 x float> %3953, float %.pre-phi3373, i64 2, !dbg !54
  %3955 = insertelement <4 x float> %3954, float %.pre-phi3375, i64 3, !dbg !54
  %3956 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3570, <4 x float> %3955, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3957 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3571, <4 x float> %3956, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3958 = insertelement <4 x float> poison, float %.pre-phi3425, i64 0, !dbg !54
  %3959 = insertelement <4 x float> %3958, float %.pre-phi3427, i64 1, !dbg !54
  %3960 = insertelement <4 x float> %3959, float %.pre-phi3429, i64 2, !dbg !54
  %3961 = insertelement <4 x float> %3960, float %.pre-phi3431, i64 3, !dbg !54
  %3962 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3594, <4 x half> %3574, <4 x float> %3961, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3963 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3595, <4 x half> %3575, <4 x float> %3962, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3964 = insertelement <4 x float> poison, float %.pre-phi3433, i64 0, !dbg !54
  %3965 = insertelement <4 x float> %3964, float %.pre-phi3435, i64 1, !dbg !54
  %3966 = insertelement <4 x float> %3965, float %.pre-phi3437, i64 2, !dbg !54
  %3967 = insertelement <4 x float> %3966, float %.pre-phi3439, i64 3, !dbg !54
  %3968 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3598, <4 x half> %3574, <4 x float> %3967, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3969 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3599, <4 x half> %3575, <4 x float> %3968, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3970 = insertelement <4 x float> poison, float %.pre-phi3377, i64 0, !dbg !54
  %3971 = insertelement <4 x float> %3970, float %.pre-phi3379, i64 1, !dbg !54
  %3972 = insertelement <4 x float> %3971, float %.pre-phi3381, i64 2, !dbg !54
  %3973 = insertelement <4 x float> %3972, float %.pre-phi3383, i64 3, !dbg !54
  %3974 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3570, <4 x float> %3973, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3975 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3571, <4 x float> %3974, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3976 = insertelement <4 x float> poison, float %.pre-phi3385, i64 0, !dbg !54
  %3977 = insertelement <4 x float> %3976, float %.pre-phi3387, i64 1, !dbg !54
  %3978 = insertelement <4 x float> %3977, float %.pre-phi3389, i64 2, !dbg !54
  %3979 = insertelement <4 x float> %3978, float %.pre-phi3391, i64 3, !dbg !54
  %3980 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3570, <4 x float> %3979, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3981 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3571, <4 x float> %3980, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3982 = insertelement <4 x float> poison, float %.pre-phi3441, i64 0, !dbg !54
  %3983 = insertelement <4 x float> %3982, float %.pre-phi3443, i64 1, !dbg !54
  %3984 = insertelement <4 x float> %3983, float %.pre-phi3445, i64 2, !dbg !54
  %3985 = insertelement <4 x float> %3984, float %.pre-phi3447, i64 3, !dbg !54
  %3986 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3602, <4 x half> %3574, <4 x float> %3985, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3987 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3603, <4 x half> %3575, <4 x float> %3986, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3988 = insertelement <4 x float> poison, float %.pre-phi3449, i64 0, !dbg !54
  %3989 = insertelement <4 x float> %3988, float %.pre-phi3451, i64 1, !dbg !54
  %3990 = insertelement <4 x float> %3989, float %.pre-phi3453, i64 2, !dbg !54
  %3991 = insertelement <4 x float> %3990, float %.pre-phi3455, i64 3, !dbg !54
  %3992 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3606, <4 x half> %3574, <4 x float> %3991, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3993 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3607, <4 x half> %3575, <4 x float> %3992, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3994 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3548, <4 x float> %3615, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3995 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3549, <4 x float> %3994, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %3996 = extractelement <4 x float> %3995, i64 0, !dbg !54
  %3997 = extractelement <4 x float> %3995, i64 1, !dbg !54
  %3998 = extractelement <4 x float> %3995, i64 2, !dbg !54
  %3999 = extractelement <4 x float> %3995, i64 3, !dbg !54
  %4000 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3548, <4 x float> %3621, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4001 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3549, <4 x float> %4000, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4002 = extractelement <4 x float> %4001, i64 0, !dbg !54
  %4003 = extractelement <4 x float> %4001, i64 1, !dbg !54
  %4004 = extractelement <4 x float> %4001, i64 2, !dbg !54
  %4005 = extractelement <4 x float> %4001, i64 3, !dbg !54
  %4006 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3552, <4 x float> %3627, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4007 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3553, <4 x float> %4006, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4008 = extractelement <4 x float> %4007, i64 0, !dbg !54
  %4009 = extractelement <4 x float> %4007, i64 1, !dbg !54
  %4010 = extractelement <4 x float> %4007, i64 2, !dbg !54
  %4011 = extractelement <4 x float> %4007, i64 3, !dbg !54
  %4012 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3552, <4 x float> %3633, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4013 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3553, <4 x float> %4012, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4014 = extractelement <4 x float> %4013, i64 0, !dbg !54
  %4015 = extractelement <4 x float> %4013, i64 1, !dbg !54
  %4016 = extractelement <4 x float> %4013, i64 2, !dbg !54
  %4017 = extractelement <4 x float> %4013, i64 3, !dbg !54
  %4018 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3548, <4 x float> %3639, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4019 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3549, <4 x float> %4018, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4020 = extractelement <4 x float> %4019, i64 0, !dbg !54
  %4021 = extractelement <4 x float> %4019, i64 1, !dbg !54
  %4022 = extractelement <4 x float> %4019, i64 2, !dbg !54
  %4023 = extractelement <4 x float> %4019, i64 3, !dbg !54
  %4024 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3548, <4 x float> %3645, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4025 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3549, <4 x float> %4024, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4026 = extractelement <4 x float> %4025, i64 0, !dbg !54
  %4027 = extractelement <4 x float> %4025, i64 1, !dbg !54
  %4028 = extractelement <4 x float> %4025, i64 2, !dbg !54
  %4029 = extractelement <4 x float> %4025, i64 3, !dbg !54
  %4030 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3552, <4 x float> %3651, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4031 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3553, <4 x float> %4030, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4032 = extractelement <4 x float> %4031, i64 0, !dbg !54
  %4033 = extractelement <4 x float> %4031, i64 1, !dbg !54
  %4034 = extractelement <4 x float> %4031, i64 2, !dbg !54
  %4035 = extractelement <4 x float> %4031, i64 3, !dbg !54
  %4036 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3552, <4 x float> %3657, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4037 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3553, <4 x float> %4036, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4038 = extractelement <4 x float> %4037, i64 0, !dbg !54
  %4039 = extractelement <4 x float> %4037, i64 1, !dbg !54
  %4040 = extractelement <4 x float> %4037, i64 2, !dbg !54
  %4041 = extractelement <4 x float> %4037, i64 3, !dbg !54
  %4042 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3548, <4 x float> %3663, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4043 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3549, <4 x float> %4042, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4044 = extractelement <4 x float> %4043, i64 0, !dbg !54
  %4045 = extractelement <4 x float> %4043, i64 1, !dbg !54
  %4046 = extractelement <4 x float> %4043, i64 2, !dbg !54
  %4047 = extractelement <4 x float> %4043, i64 3, !dbg !54
  %4048 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3548, <4 x float> %3669, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4049 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3549, <4 x float> %4048, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4050 = extractelement <4 x float> %4049, i64 0, !dbg !54
  %4051 = extractelement <4 x float> %4049, i64 1, !dbg !54
  %4052 = extractelement <4 x float> %4049, i64 2, !dbg !54
  %4053 = extractelement <4 x float> %4049, i64 3, !dbg !54
  %4054 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3552, <4 x float> %3675, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4055 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3553, <4 x float> %4054, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4056 = extractelement <4 x float> %4055, i64 0, !dbg !54
  %4057 = extractelement <4 x float> %4055, i64 1, !dbg !54
  %4058 = extractelement <4 x float> %4055, i64 2, !dbg !54
  %4059 = extractelement <4 x float> %4055, i64 3, !dbg !54
  %4060 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3552, <4 x float> %3681, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4061 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3553, <4 x float> %4060, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4062 = extractelement <4 x float> %4061, i64 0, !dbg !54
  %4063 = extractelement <4 x float> %4061, i64 1, !dbg !54
  %4064 = extractelement <4 x float> %4061, i64 2, !dbg !54
  %4065 = extractelement <4 x float> %4061, i64 3, !dbg !54
  %4066 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3548, <4 x float> %3687, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4067 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3549, <4 x float> %4066, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4068 = extractelement <4 x float> %4067, i64 0, !dbg !54
  %4069 = extractelement <4 x float> %4067, i64 1, !dbg !54
  %4070 = extractelement <4 x float> %4067, i64 2, !dbg !54
  %4071 = extractelement <4 x float> %4067, i64 3, !dbg !54
  %4072 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3548, <4 x float> %3693, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4073 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3549, <4 x float> %4072, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4074 = extractelement <4 x float> %4073, i64 0, !dbg !54
  %4075 = extractelement <4 x float> %4073, i64 1, !dbg !54
  %4076 = extractelement <4 x float> %4073, i64 2, !dbg !54
  %4077 = extractelement <4 x float> %4073, i64 3, !dbg !54
  %4078 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3552, <4 x float> %3699, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4079 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3553, <4 x float> %4078, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4080 = extractelement <4 x float> %4079, i64 0, !dbg !54
  %4081 = extractelement <4 x float> %4079, i64 1, !dbg !54
  %4082 = extractelement <4 x float> %4079, i64 2, !dbg !54
  %4083 = extractelement <4 x float> %4079, i64 3, !dbg !54
  %4084 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3552, <4 x float> %3705, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4085 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3553, <4 x float> %4084, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4086 = extractelement <4 x float> %4085, i64 0, !dbg !54
  %4087 = extractelement <4 x float> %4085, i64 1, !dbg !54
  %4088 = extractelement <4 x float> %4085, i64 2, !dbg !54
  %4089 = extractelement <4 x float> %4085, i64 3, !dbg !54
  %4090 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3556, <4 x float> %3711, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4091 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3557, <4 x float> %4090, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4092 = extractelement <4 x float> %4091, i64 0, !dbg !54
  %4093 = extractelement <4 x float> %4091, i64 1, !dbg !54
  %4094 = extractelement <4 x float> %4091, i64 2, !dbg !54
  %4095 = extractelement <4 x float> %4091, i64 3, !dbg !54
  %4096 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3556, <4 x float> %3717, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4097 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3557, <4 x float> %4096, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4098 = extractelement <4 x float> %4097, i64 0, !dbg !54
  %4099 = extractelement <4 x float> %4097, i64 1, !dbg !54
  %4100 = extractelement <4 x float> %4097, i64 2, !dbg !54
  %4101 = extractelement <4 x float> %4097, i64 3, !dbg !54
  %4102 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3560, <4 x float> %3723, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4103 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3561, <4 x float> %4102, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4104 = extractelement <4 x float> %4103, i64 0, !dbg !54
  %4105 = extractelement <4 x float> %4103, i64 1, !dbg !54
  %4106 = extractelement <4 x float> %4103, i64 2, !dbg !54
  %4107 = extractelement <4 x float> %4103, i64 3, !dbg !54
  %4108 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3560, <4 x float> %3729, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4109 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3561, <4 x float> %4108, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4110 = extractelement <4 x float> %4109, i64 0, !dbg !54
  %4111 = extractelement <4 x float> %4109, i64 1, !dbg !54
  %4112 = extractelement <4 x float> %4109, i64 2, !dbg !54
  %4113 = extractelement <4 x float> %4109, i64 3, !dbg !54
  %4114 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3556, <4 x float> %3735, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4115 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3557, <4 x float> %4114, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4116 = extractelement <4 x float> %4115, i64 0, !dbg !54
  %4117 = extractelement <4 x float> %4115, i64 1, !dbg !54
  %4118 = extractelement <4 x float> %4115, i64 2, !dbg !54
  %4119 = extractelement <4 x float> %4115, i64 3, !dbg !54
  %4120 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3556, <4 x float> %3741, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4121 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3557, <4 x float> %4120, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4122 = extractelement <4 x float> %4121, i64 0, !dbg !54
  %4123 = extractelement <4 x float> %4121, i64 1, !dbg !54
  %4124 = extractelement <4 x float> %4121, i64 2, !dbg !54
  %4125 = extractelement <4 x float> %4121, i64 3, !dbg !54
  %4126 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3560, <4 x float> %3747, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4127 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3561, <4 x float> %4126, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4128 = extractelement <4 x float> %4127, i64 0, !dbg !54
  %4129 = extractelement <4 x float> %4127, i64 1, !dbg !54
  %4130 = extractelement <4 x float> %4127, i64 2, !dbg !54
  %4131 = extractelement <4 x float> %4127, i64 3, !dbg !54
  %4132 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3560, <4 x float> %3753, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4133 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3561, <4 x float> %4132, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4134 = extractelement <4 x float> %4133, i64 0, !dbg !54
  %4135 = extractelement <4 x float> %4133, i64 1, !dbg !54
  %4136 = extractelement <4 x float> %4133, i64 2, !dbg !54
  %4137 = extractelement <4 x float> %4133, i64 3, !dbg !54
  %4138 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3556, <4 x float> %3759, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4139 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3557, <4 x float> %4138, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4140 = extractelement <4 x float> %4139, i64 0, !dbg !54
  %4141 = extractelement <4 x float> %4139, i64 1, !dbg !54
  %4142 = extractelement <4 x float> %4139, i64 2, !dbg !54
  %4143 = extractelement <4 x float> %4139, i64 3, !dbg !54
  %4144 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3556, <4 x float> %3765, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4145 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3557, <4 x float> %4144, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4146 = extractelement <4 x float> %4145, i64 0, !dbg !54
  %4147 = extractelement <4 x float> %4145, i64 1, !dbg !54
  %4148 = extractelement <4 x float> %4145, i64 2, !dbg !54
  %4149 = extractelement <4 x float> %4145, i64 3, !dbg !54
  %4150 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3560, <4 x float> %3771, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4151 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3561, <4 x float> %4150, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4152 = extractelement <4 x float> %4151, i64 0, !dbg !54
  %4153 = extractelement <4 x float> %4151, i64 1, !dbg !54
  %4154 = extractelement <4 x float> %4151, i64 2, !dbg !54
  %4155 = extractelement <4 x float> %4151, i64 3, !dbg !54
  %4156 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3560, <4 x float> %3777, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4157 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3561, <4 x float> %4156, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4158 = extractelement <4 x float> %4157, i64 0, !dbg !54
  %4159 = extractelement <4 x float> %4157, i64 1, !dbg !54
  %4160 = extractelement <4 x float> %4157, i64 2, !dbg !54
  %4161 = extractelement <4 x float> %4157, i64 3, !dbg !54
  %4162 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3556, <4 x float> %3783, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4163 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3557, <4 x float> %4162, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4164 = extractelement <4 x float> %4163, i64 0, !dbg !54
  %4165 = extractelement <4 x float> %4163, i64 1, !dbg !54
  %4166 = extractelement <4 x float> %4163, i64 2, !dbg !54
  %4167 = extractelement <4 x float> %4163, i64 3, !dbg !54
  %4168 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3556, <4 x float> %3789, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4169 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3557, <4 x float> %4168, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4170 = extractelement <4 x float> %4169, i64 0, !dbg !54
  %4171 = extractelement <4 x float> %4169, i64 1, !dbg !54
  %4172 = extractelement <4 x float> %4169, i64 2, !dbg !54
  %4173 = extractelement <4 x float> %4169, i64 3, !dbg !54
  %4174 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3560, <4 x float> %3795, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4175 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3561, <4 x float> %4174, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4176 = extractelement <4 x float> %4175, i64 0, !dbg !54
  %4177 = extractelement <4 x float> %4175, i64 1, !dbg !54
  %4178 = extractelement <4 x float> %4175, i64 2, !dbg !54
  %4179 = extractelement <4 x float> %4175, i64 3, !dbg !54
  %4180 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3560, <4 x float> %3801, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4181 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3561, <4 x float> %4180, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4182 = extractelement <4 x float> %4181, i64 0, !dbg !54
  %4183 = extractelement <4 x float> %4181, i64 1, !dbg !54
  %4184 = extractelement <4 x float> %4181, i64 2, !dbg !54
  %4185 = extractelement <4 x float> %4181, i64 3, !dbg !54
  %4186 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3564, <4 x float> %3807, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4187 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3565, <4 x float> %4186, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4188 = extractelement <4 x float> %4187, i64 0, !dbg !54
  %4189 = extractelement <4 x float> %4187, i64 1, !dbg !54
  %4190 = extractelement <4 x float> %4187, i64 2, !dbg !54
  %4191 = extractelement <4 x float> %4187, i64 3, !dbg !54
  %4192 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3564, <4 x float> %3813, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4193 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3565, <4 x float> %4192, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4194 = extractelement <4 x float> %4193, i64 0, !dbg !54
  %4195 = extractelement <4 x float> %4193, i64 1, !dbg !54
  %4196 = extractelement <4 x float> %4193, i64 2, !dbg !54
  %4197 = extractelement <4 x float> %4193, i64 3, !dbg !54
  %4198 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3568, <4 x float> %3819, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4199 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3569, <4 x float> %4198, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4200 = extractelement <4 x float> %4199, i64 0, !dbg !54
  %4201 = extractelement <4 x float> %4199, i64 1, !dbg !54
  %4202 = extractelement <4 x float> %4199, i64 2, !dbg !54
  %4203 = extractelement <4 x float> %4199, i64 3, !dbg !54
  %4204 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3568, <4 x float> %3825, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4205 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3569, <4 x float> %4204, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4206 = extractelement <4 x float> %4205, i64 0, !dbg !54
  %4207 = extractelement <4 x float> %4205, i64 1, !dbg !54
  %4208 = extractelement <4 x float> %4205, i64 2, !dbg !54
  %4209 = extractelement <4 x float> %4205, i64 3, !dbg !54
  %4210 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3564, <4 x float> %3831, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4211 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3565, <4 x float> %4210, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4212 = extractelement <4 x float> %4211, i64 0, !dbg !54
  %4213 = extractelement <4 x float> %4211, i64 1, !dbg !54
  %4214 = extractelement <4 x float> %4211, i64 2, !dbg !54
  %4215 = extractelement <4 x float> %4211, i64 3, !dbg !54
  %4216 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3564, <4 x float> %3837, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4217 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3565, <4 x float> %4216, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4218 = extractelement <4 x float> %4217, i64 0, !dbg !54
  %4219 = extractelement <4 x float> %4217, i64 1, !dbg !54
  %4220 = extractelement <4 x float> %4217, i64 2, !dbg !54
  %4221 = extractelement <4 x float> %4217, i64 3, !dbg !54
  %4222 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3568, <4 x float> %3843, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4223 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3569, <4 x float> %4222, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4224 = extractelement <4 x float> %4223, i64 0, !dbg !54
  %4225 = extractelement <4 x float> %4223, i64 1, !dbg !54
  %4226 = extractelement <4 x float> %4223, i64 2, !dbg !54
  %4227 = extractelement <4 x float> %4223, i64 3, !dbg !54
  %4228 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3568, <4 x float> %3849, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4229 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3569, <4 x float> %4228, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4230 = extractelement <4 x float> %4229, i64 0, !dbg !54
  %4231 = extractelement <4 x float> %4229, i64 1, !dbg !54
  %4232 = extractelement <4 x float> %4229, i64 2, !dbg !54
  %4233 = extractelement <4 x float> %4229, i64 3, !dbg !54
  %4234 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3564, <4 x float> %3855, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4235 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3565, <4 x float> %4234, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4236 = extractelement <4 x float> %4235, i64 0, !dbg !54
  %4237 = extractelement <4 x float> %4235, i64 1, !dbg !54
  %4238 = extractelement <4 x float> %4235, i64 2, !dbg !54
  %4239 = extractelement <4 x float> %4235, i64 3, !dbg !54
  %4240 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3564, <4 x float> %3861, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4241 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3565, <4 x float> %4240, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4242 = extractelement <4 x float> %4241, i64 0, !dbg !54
  %4243 = extractelement <4 x float> %4241, i64 1, !dbg !54
  %4244 = extractelement <4 x float> %4241, i64 2, !dbg !54
  %4245 = extractelement <4 x float> %4241, i64 3, !dbg !54
  %4246 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3568, <4 x float> %3867, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4247 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3569, <4 x float> %4246, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4248 = extractelement <4 x float> %4247, i64 0, !dbg !54
  %4249 = extractelement <4 x float> %4247, i64 1, !dbg !54
  %4250 = extractelement <4 x float> %4247, i64 2, !dbg !54
  %4251 = extractelement <4 x float> %4247, i64 3, !dbg !54
  %4252 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3568, <4 x float> %3873, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4253 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3569, <4 x float> %4252, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4254 = extractelement <4 x float> %4253, i64 0, !dbg !54
  %4255 = extractelement <4 x float> %4253, i64 1, !dbg !54
  %4256 = extractelement <4 x float> %4253, i64 2, !dbg !54
  %4257 = extractelement <4 x float> %4253, i64 3, !dbg !54
  %4258 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3564, <4 x float> %3879, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4259 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3565, <4 x float> %4258, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4260 = extractelement <4 x float> %4259, i64 0, !dbg !54
  %4261 = extractelement <4 x float> %4259, i64 1, !dbg !54
  %4262 = extractelement <4 x float> %4259, i64 2, !dbg !54
  %4263 = extractelement <4 x float> %4259, i64 3, !dbg !54
  %4264 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3564, <4 x float> %3885, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4265 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3565, <4 x float> %4264, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4266 = extractelement <4 x float> %4265, i64 0, !dbg !54
  %4267 = extractelement <4 x float> %4265, i64 1, !dbg !54
  %4268 = extractelement <4 x float> %4265, i64 2, !dbg !54
  %4269 = extractelement <4 x float> %4265, i64 3, !dbg !54
  %4270 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3568, <4 x float> %3891, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4271 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3569, <4 x float> %4270, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4272 = extractelement <4 x float> %4271, i64 0, !dbg !54
  %4273 = extractelement <4 x float> %4271, i64 1, !dbg !54
  %4274 = extractelement <4 x float> %4271, i64 2, !dbg !54
  %4275 = extractelement <4 x float> %4271, i64 3, !dbg !54
  %4276 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3568, <4 x float> %3897, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4277 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3569, <4 x float> %4276, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4278 = extractelement <4 x float> %4277, i64 0, !dbg !54
  %4279 = extractelement <4 x float> %4277, i64 1, !dbg !54
  %4280 = extractelement <4 x float> %4277, i64 2, !dbg !54
  %4281 = extractelement <4 x float> %4277, i64 3, !dbg !54
  %4282 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3572, <4 x float> %3903, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4283 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3573, <4 x float> %4282, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4284 = extractelement <4 x float> %4283, i64 0, !dbg !54
  %4285 = extractelement <4 x float> %4283, i64 1, !dbg !54
  %4286 = extractelement <4 x float> %4283, i64 2, !dbg !54
  %4287 = extractelement <4 x float> %4283, i64 3, !dbg !54
  %4288 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3572, <4 x float> %3909, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4289 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3573, <4 x float> %4288, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4290 = extractelement <4 x float> %4289, i64 0, !dbg !54
  %4291 = extractelement <4 x float> %4289, i64 1, !dbg !54
  %4292 = extractelement <4 x float> %4289, i64 2, !dbg !54
  %4293 = extractelement <4 x float> %4289, i64 3, !dbg !54
  %4294 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3580, <4 x half> %3576, <4 x float> %3915, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4295 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3581, <4 x half> %3577, <4 x float> %4294, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4296 = extractelement <4 x float> %4295, i64 0, !dbg !54
  %4297 = extractelement <4 x float> %4295, i64 1, !dbg !54
  %4298 = extractelement <4 x float> %4295, i64 2, !dbg !54
  %4299 = extractelement <4 x float> %4295, i64 3, !dbg !54
  %4300 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3584, <4 x half> %3576, <4 x float> %3921, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4301 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3585, <4 x half> %3577, <4 x float> %4300, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4302 = extractelement <4 x float> %4301, i64 0, !dbg !54
  %4303 = extractelement <4 x float> %4301, i64 1, !dbg !54
  %4304 = extractelement <4 x float> %4301, i64 2, !dbg !54
  %4305 = extractelement <4 x float> %4301, i64 3, !dbg !54
  %4306 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3572, <4 x float> %3927, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4307 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3573, <4 x float> %4306, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4308 = extractelement <4 x float> %4307, i64 0, !dbg !54
  %4309 = extractelement <4 x float> %4307, i64 1, !dbg !54
  %4310 = extractelement <4 x float> %4307, i64 2, !dbg !54
  %4311 = extractelement <4 x float> %4307, i64 3, !dbg !54
  %4312 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3572, <4 x float> %3933, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4313 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3573, <4 x float> %4312, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4314 = extractelement <4 x float> %4313, i64 0, !dbg !54
  %4315 = extractelement <4 x float> %4313, i64 1, !dbg !54
  %4316 = extractelement <4 x float> %4313, i64 2, !dbg !54
  %4317 = extractelement <4 x float> %4313, i64 3, !dbg !54
  %4318 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3588, <4 x half> %3576, <4 x float> %3939, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4319 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3589, <4 x half> %3577, <4 x float> %4318, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4320 = extractelement <4 x float> %4319, i64 0, !dbg !54
  %4321 = extractelement <4 x float> %4319, i64 1, !dbg !54
  %4322 = extractelement <4 x float> %4319, i64 2, !dbg !54
  %4323 = extractelement <4 x float> %4319, i64 3, !dbg !54
  %4324 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3592, <4 x half> %3576, <4 x float> %3945, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4325 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3593, <4 x half> %3577, <4 x float> %4324, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4326 = extractelement <4 x float> %4325, i64 0, !dbg !54
  %4327 = extractelement <4 x float> %4325, i64 1, !dbg !54
  %4328 = extractelement <4 x float> %4325, i64 2, !dbg !54
  %4329 = extractelement <4 x float> %4325, i64 3, !dbg !54
  %4330 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3572, <4 x float> %3951, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4331 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3573, <4 x float> %4330, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4332 = extractelement <4 x float> %4331, i64 0, !dbg !54
  %4333 = extractelement <4 x float> %4331, i64 1, !dbg !54
  %4334 = extractelement <4 x float> %4331, i64 2, !dbg !54
  %4335 = extractelement <4 x float> %4331, i64 3, !dbg !54
  %4336 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3572, <4 x float> %3957, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4337 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3573, <4 x float> %4336, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4338 = extractelement <4 x float> %4337, i64 0, !dbg !54
  %4339 = extractelement <4 x float> %4337, i64 1, !dbg !54
  %4340 = extractelement <4 x float> %4337, i64 2, !dbg !54
  %4341 = extractelement <4 x float> %4337, i64 3, !dbg !54
  %4342 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3596, <4 x half> %3576, <4 x float> %3963, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4343 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3597, <4 x half> %3577, <4 x float> %4342, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4344 = extractelement <4 x float> %4343, i64 0, !dbg !54
  %4345 = extractelement <4 x float> %4343, i64 1, !dbg !54
  %4346 = extractelement <4 x float> %4343, i64 2, !dbg !54
  %4347 = extractelement <4 x float> %4343, i64 3, !dbg !54
  %4348 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3600, <4 x half> %3576, <4 x float> %3969, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4349 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3601, <4 x half> %3577, <4 x float> %4348, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4350 = extractelement <4 x float> %4349, i64 0, !dbg !54
  %4351 = extractelement <4 x float> %4349, i64 1, !dbg !54
  %4352 = extractelement <4 x float> %4349, i64 2, !dbg !54
  %4353 = extractelement <4 x float> %4349, i64 3, !dbg !54
  %4354 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3572, <4 x float> %3975, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4355 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3573, <4 x float> %4354, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4356 = extractelement <4 x float> %4355, i64 0, !dbg !54
  %4357 = extractelement <4 x float> %4355, i64 1, !dbg !54
  %4358 = extractelement <4 x float> %4355, i64 2, !dbg !54
  %4359 = extractelement <4 x float> %4355, i64 3, !dbg !54
  %4360 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3572, <4 x float> %3981, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4361 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3573, <4 x float> %4360, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4362 = extractelement <4 x float> %4361, i64 0, !dbg !54
  %4363 = extractelement <4 x float> %4361, i64 1, !dbg !54
  %4364 = extractelement <4 x float> %4361, i64 2, !dbg !54
  %4365 = extractelement <4 x float> %4361, i64 3, !dbg !54
  %4366 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3604, <4 x half> %3576, <4 x float> %3987, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4367 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3605, <4 x half> %3577, <4 x float> %4366, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4368 = extractelement <4 x float> %4367, i64 0, !dbg !54
  %4369 = extractelement <4 x float> %4367, i64 1, !dbg !54
  %4370 = extractelement <4 x float> %4367, i64 2, !dbg !54
  %4371 = extractelement <4 x float> %4367, i64 3, !dbg !54
  %4372 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3608, <4 x half> %3576, <4 x float> %3993, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4373 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %3609, <4 x half> %3577, <4 x float> %4372, i32 0, i32 0, i32 0), !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 2038), !dbg !54
  %4374 = extractelement <4 x float> %4373, i64 0, !dbg !54
  %4375 = extractelement <4 x float> %4373, i64 1, !dbg !54
  %4376 = extractelement <4 x float> %4373, i64 2, !dbg !54
  %4377 = extractelement <4 x float> %4373, i64 3, !dbg !54
  br label %4378, !dbg !54

4378:                                             ; preds = %3513, %._crit_edge._crit_edge
  %4379 = phi float [ %4377, %3513 ], [ %.pre-phi3455, %._crit_edge._crit_edge ]
  %4380 = phi float [ %4376, %3513 ], [ %.pre-phi3453, %._crit_edge._crit_edge ]
  %4381 = phi float [ %4375, %3513 ], [ %.pre-phi3451, %._crit_edge._crit_edge ]
  %4382 = phi float [ %4374, %3513 ], [ %.pre-phi3449, %._crit_edge._crit_edge ]
  %4383 = phi float [ %4371, %3513 ], [ %.pre-phi3447, %._crit_edge._crit_edge ]
  %4384 = phi float [ %4370, %3513 ], [ %.pre-phi3445, %._crit_edge._crit_edge ]
  %4385 = phi float [ %4369, %3513 ], [ %.pre-phi3443, %._crit_edge._crit_edge ]
  %4386 = phi float [ %4368, %3513 ], [ %.pre-phi3441, %._crit_edge._crit_edge ]
  %4387 = phi float [ %4353, %3513 ], [ %.pre-phi3439, %._crit_edge._crit_edge ]
  %4388 = phi float [ %4352, %3513 ], [ %.pre-phi3437, %._crit_edge._crit_edge ]
  %4389 = phi float [ %4351, %3513 ], [ %.pre-phi3435, %._crit_edge._crit_edge ]
  %4390 = phi float [ %4350, %3513 ], [ %.pre-phi3433, %._crit_edge._crit_edge ]
  %4391 = phi float [ %4347, %3513 ], [ %.pre-phi3431, %._crit_edge._crit_edge ]
  %4392 = phi float [ %4346, %3513 ], [ %.pre-phi3429, %._crit_edge._crit_edge ]
  %4393 = phi float [ %4345, %3513 ], [ %.pre-phi3427, %._crit_edge._crit_edge ]
  %4394 = phi float [ %4344, %3513 ], [ %.pre-phi3425, %._crit_edge._crit_edge ]
  %4395 = phi float [ %4329, %3513 ], [ %.pre-phi3423, %._crit_edge._crit_edge ]
  %4396 = phi float [ %4328, %3513 ], [ %.pre-phi3421, %._crit_edge._crit_edge ]
  %4397 = phi float [ %4327, %3513 ], [ %.pre-phi3419, %._crit_edge._crit_edge ]
  %4398 = phi float [ %4326, %3513 ], [ %.pre-phi3417, %._crit_edge._crit_edge ]
  %4399 = phi float [ %4323, %3513 ], [ %.pre-phi3415, %._crit_edge._crit_edge ]
  %4400 = phi float [ %4322, %3513 ], [ %.pre-phi3413, %._crit_edge._crit_edge ]
  %4401 = phi float [ %4321, %3513 ], [ %.pre-phi3411, %._crit_edge._crit_edge ]
  %4402 = phi float [ %4320, %3513 ], [ %.pre-phi3409, %._crit_edge._crit_edge ]
  %4403 = phi float [ %4305, %3513 ], [ %.pre-phi3407, %._crit_edge._crit_edge ]
  %4404 = phi float [ %4304, %3513 ], [ %.pre-phi3405, %._crit_edge._crit_edge ]
  %4405 = phi float [ %4303, %3513 ], [ %.pre-phi3403, %._crit_edge._crit_edge ]
  %4406 = phi float [ %4302, %3513 ], [ %.pre-phi3401, %._crit_edge._crit_edge ]
  %4407 = phi float [ %4299, %3513 ], [ %.pre-phi3399, %._crit_edge._crit_edge ]
  %4408 = phi float [ %4298, %3513 ], [ %.pre-phi3397, %._crit_edge._crit_edge ]
  %4409 = phi float [ %4297, %3513 ], [ %.pre-phi3395, %._crit_edge._crit_edge ]
  %4410 = phi float [ %4296, %3513 ], [ %.pre-phi3393, %._crit_edge._crit_edge ]
  %4411 = phi float [ %4365, %3513 ], [ %.pre-phi3391, %._crit_edge._crit_edge ]
  %4412 = phi float [ %4364, %3513 ], [ %.pre-phi3389, %._crit_edge._crit_edge ]
  %4413 = phi float [ %4363, %3513 ], [ %.pre-phi3387, %._crit_edge._crit_edge ]
  %4414 = phi float [ %4362, %3513 ], [ %.pre-phi3385, %._crit_edge._crit_edge ]
  %4415 = phi float [ %4359, %3513 ], [ %.pre-phi3383, %._crit_edge._crit_edge ]
  %4416 = phi float [ %4358, %3513 ], [ %.pre-phi3381, %._crit_edge._crit_edge ]
  %4417 = phi float [ %4357, %3513 ], [ %.pre-phi3379, %._crit_edge._crit_edge ]
  %4418 = phi float [ %4356, %3513 ], [ %.pre-phi3377, %._crit_edge._crit_edge ]
  %4419 = phi float [ %4341, %3513 ], [ %.pre-phi3375, %._crit_edge._crit_edge ]
  %4420 = phi float [ %4340, %3513 ], [ %.pre-phi3373, %._crit_edge._crit_edge ]
  %4421 = phi float [ %4339, %3513 ], [ %.pre-phi3371, %._crit_edge._crit_edge ]
  %4422 = phi float [ %4338, %3513 ], [ %.pre-phi3369, %._crit_edge._crit_edge ]
  %4423 = phi float [ %4335, %3513 ], [ %.pre-phi3367, %._crit_edge._crit_edge ]
  %4424 = phi float [ %4334, %3513 ], [ %.pre-phi3365, %._crit_edge._crit_edge ]
  %4425 = phi float [ %4333, %3513 ], [ %.pre-phi3363, %._crit_edge._crit_edge ]
  %4426 = phi float [ %4332, %3513 ], [ %.pre-phi3361, %._crit_edge._crit_edge ]
  %4427 = phi float [ %4317, %3513 ], [ %.pre-phi3359, %._crit_edge._crit_edge ]
  %4428 = phi float [ %4316, %3513 ], [ %.pre-phi3357, %._crit_edge._crit_edge ]
  %4429 = phi float [ %4315, %3513 ], [ %.pre-phi3355, %._crit_edge._crit_edge ]
  %4430 = phi float [ %4314, %3513 ], [ %.pre-phi3353, %._crit_edge._crit_edge ]
  %4431 = phi float [ %4311, %3513 ], [ %.pre-phi3351, %._crit_edge._crit_edge ]
  %4432 = phi float [ %4310, %3513 ], [ %.pre-phi3349, %._crit_edge._crit_edge ]
  %4433 = phi float [ %4309, %3513 ], [ %.pre-phi3347, %._crit_edge._crit_edge ]
  %4434 = phi float [ %4308, %3513 ], [ %.pre-phi3345, %._crit_edge._crit_edge ]
  %4435 = phi float [ %4293, %3513 ], [ %.pre-phi3343, %._crit_edge._crit_edge ]
  %4436 = phi float [ %4292, %3513 ], [ %.pre-phi3341, %._crit_edge._crit_edge ]
  %4437 = phi float [ %4291, %3513 ], [ %.pre-phi3339, %._crit_edge._crit_edge ]
  %4438 = phi float [ %4290, %3513 ], [ %.pre-phi3337, %._crit_edge._crit_edge ]
  %4439 = phi float [ %4287, %3513 ], [ %.pre-phi3335, %._crit_edge._crit_edge ]
  %4440 = phi float [ %4286, %3513 ], [ %.pre-phi3333, %._crit_edge._crit_edge ]
  %4441 = phi float [ %4285, %3513 ], [ %.pre-phi3331, %._crit_edge._crit_edge ]
  %4442 = phi float [ %4284, %3513 ], [ %.pre-phi3329, %._crit_edge._crit_edge ]
  %4443 = phi float [ %4281, %3513 ], [ %.pre-phi3327, %._crit_edge._crit_edge ]
  %4444 = phi float [ %4280, %3513 ], [ %.pre-phi3325, %._crit_edge._crit_edge ]
  %4445 = phi float [ %4279, %3513 ], [ %.pre-phi3323, %._crit_edge._crit_edge ]
  %4446 = phi float [ %4278, %3513 ], [ %.pre-phi3321, %._crit_edge._crit_edge ]
  %4447 = phi float [ %4275, %3513 ], [ %.pre-phi3319, %._crit_edge._crit_edge ]
  %4448 = phi float [ %4274, %3513 ], [ %.pre-phi3317, %._crit_edge._crit_edge ]
  %4449 = phi float [ %4273, %3513 ], [ %.pre-phi3315, %._crit_edge._crit_edge ]
  %4450 = phi float [ %4272, %3513 ], [ %.pre-phi3313, %._crit_edge._crit_edge ]
  %4451 = phi float [ %4257, %3513 ], [ %.pre-phi3311, %._crit_edge._crit_edge ]
  %4452 = phi float [ %4256, %3513 ], [ %.pre-phi3309, %._crit_edge._crit_edge ]
  %4453 = phi float [ %4255, %3513 ], [ %.pre-phi3307, %._crit_edge._crit_edge ]
  %4454 = phi float [ %4254, %3513 ], [ %.pre-phi3305, %._crit_edge._crit_edge ]
  %4455 = phi float [ %4251, %3513 ], [ %.pre-phi3303, %._crit_edge._crit_edge ]
  %4456 = phi float [ %4250, %3513 ], [ %.pre-phi3301, %._crit_edge._crit_edge ]
  %4457 = phi float [ %4249, %3513 ], [ %.pre-phi3299, %._crit_edge._crit_edge ]
  %4458 = phi float [ %4248, %3513 ], [ %.pre-phi3297, %._crit_edge._crit_edge ]
  %4459 = phi float [ %4233, %3513 ], [ %.pre-phi3295, %._crit_edge._crit_edge ]
  %4460 = phi float [ %4232, %3513 ], [ %.pre-phi3293, %._crit_edge._crit_edge ]
  %4461 = phi float [ %4231, %3513 ], [ %.pre-phi3291, %._crit_edge._crit_edge ]
  %4462 = phi float [ %4230, %3513 ], [ %.pre-phi3289, %._crit_edge._crit_edge ]
  %4463 = phi float [ %4227, %3513 ], [ %.pre-phi3287, %._crit_edge._crit_edge ]
  %4464 = phi float [ %4226, %3513 ], [ %.pre-phi3285, %._crit_edge._crit_edge ]
  %4465 = phi float [ %4225, %3513 ], [ %.pre-phi3283, %._crit_edge._crit_edge ]
  %4466 = phi float [ %4224, %3513 ], [ %.pre-phi3281, %._crit_edge._crit_edge ]
  %4467 = phi float [ %4209, %3513 ], [ %.pre-phi3279, %._crit_edge._crit_edge ]
  %4468 = phi float [ %4208, %3513 ], [ %.pre-phi3277, %._crit_edge._crit_edge ]
  %4469 = phi float [ %4207, %3513 ], [ %.pre-phi3275, %._crit_edge._crit_edge ]
  %4470 = phi float [ %4206, %3513 ], [ %.pre-phi3273, %._crit_edge._crit_edge ]
  %4471 = phi float [ %4203, %3513 ], [ %.pre-phi3271, %._crit_edge._crit_edge ]
  %4472 = phi float [ %4202, %3513 ], [ %.pre-phi3269, %._crit_edge._crit_edge ]
  %4473 = phi float [ %4201, %3513 ], [ %.pre-phi3267, %._crit_edge._crit_edge ]
  %4474 = phi float [ %4200, %3513 ], [ %.pre-phi3265, %._crit_edge._crit_edge ]
  %4475 = phi float [ %4269, %3513 ], [ %.pre-phi3263, %._crit_edge._crit_edge ]
  %4476 = phi float [ %4268, %3513 ], [ %.pre-phi3261, %._crit_edge._crit_edge ]
  %4477 = phi float [ %4267, %3513 ], [ %.pre-phi3259, %._crit_edge._crit_edge ]
  %4478 = phi float [ %4266, %3513 ], [ %.pre-phi3257, %._crit_edge._crit_edge ]
  %4479 = phi float [ %4263, %3513 ], [ %.pre-phi3255, %._crit_edge._crit_edge ]
  %4480 = phi float [ %4262, %3513 ], [ %.pre-phi3253, %._crit_edge._crit_edge ]
  %4481 = phi float [ %4261, %3513 ], [ %.pre-phi3251, %._crit_edge._crit_edge ]
  %4482 = phi float [ %4260, %3513 ], [ %.pre-phi3249, %._crit_edge._crit_edge ]
  %4483 = phi float [ %4245, %3513 ], [ %.pre-phi3247, %._crit_edge._crit_edge ]
  %4484 = phi float [ %4244, %3513 ], [ %.pre-phi3245, %._crit_edge._crit_edge ]
  %4485 = phi float [ %4243, %3513 ], [ %.pre-phi3243, %._crit_edge._crit_edge ]
  %4486 = phi float [ %4242, %3513 ], [ %.pre-phi3241, %._crit_edge._crit_edge ]
  %4487 = phi float [ %4239, %3513 ], [ %.pre-phi3239, %._crit_edge._crit_edge ]
  %4488 = phi float [ %4238, %3513 ], [ %.pre-phi3237, %._crit_edge._crit_edge ]
  %4489 = phi float [ %4237, %3513 ], [ %.pre-phi3235, %._crit_edge._crit_edge ]
  %4490 = phi float [ %4236, %3513 ], [ %.pre-phi3233, %._crit_edge._crit_edge ]
  %4491 = phi float [ %4221, %3513 ], [ %.pre-phi3231, %._crit_edge._crit_edge ]
  %4492 = phi float [ %4220, %3513 ], [ %.pre-phi3229, %._crit_edge._crit_edge ]
  %4493 = phi float [ %4219, %3513 ], [ %.pre-phi3227, %._crit_edge._crit_edge ]
  %4494 = phi float [ %4218, %3513 ], [ %.pre-phi3225, %._crit_edge._crit_edge ]
  %4495 = phi float [ %4215, %3513 ], [ %.pre-phi3223, %._crit_edge._crit_edge ]
  %4496 = phi float [ %4214, %3513 ], [ %.pre-phi3221, %._crit_edge._crit_edge ]
  %4497 = phi float [ %4213, %3513 ], [ %.pre-phi3219, %._crit_edge._crit_edge ]
  %4498 = phi float [ %4212, %3513 ], [ %.pre-phi3217, %._crit_edge._crit_edge ]
  %4499 = phi float [ %4197, %3513 ], [ %.pre-phi3215, %._crit_edge._crit_edge ]
  %4500 = phi float [ %4196, %3513 ], [ %.pre-phi3213, %._crit_edge._crit_edge ]
  %4501 = phi float [ %4195, %3513 ], [ %.pre-phi3211, %._crit_edge._crit_edge ]
  %4502 = phi float [ %4194, %3513 ], [ %.pre-phi3209, %._crit_edge._crit_edge ]
  %4503 = phi float [ %4191, %3513 ], [ %.pre-phi3207, %._crit_edge._crit_edge ]
  %4504 = phi float [ %4190, %3513 ], [ %.pre-phi3205, %._crit_edge._crit_edge ]
  %4505 = phi float [ %4189, %3513 ], [ %.pre-phi3203, %._crit_edge._crit_edge ]
  %4506 = phi float [ %4188, %3513 ], [ %.pre-phi3201, %._crit_edge._crit_edge ]
  %4507 = phi float [ %4185, %3513 ], [ %.pre-phi3199, %._crit_edge._crit_edge ]
  %4508 = phi float [ %4184, %3513 ], [ %.pre-phi3197, %._crit_edge._crit_edge ]
  %4509 = phi float [ %4183, %3513 ], [ %.pre-phi3195, %._crit_edge._crit_edge ]
  %4510 = phi float [ %4182, %3513 ], [ %.pre-phi3193, %._crit_edge._crit_edge ]
  %4511 = phi float [ %4179, %3513 ], [ %.pre-phi3191, %._crit_edge._crit_edge ]
  %4512 = phi float [ %4178, %3513 ], [ %.pre-phi3189, %._crit_edge._crit_edge ]
  %4513 = phi float [ %4177, %3513 ], [ %.pre-phi3187, %._crit_edge._crit_edge ]
  %4514 = phi float [ %4176, %3513 ], [ %.pre-phi3185, %._crit_edge._crit_edge ]
  %4515 = phi float [ %4161, %3513 ], [ %.pre-phi3183, %._crit_edge._crit_edge ]
  %4516 = phi float [ %4160, %3513 ], [ %.pre-phi3181, %._crit_edge._crit_edge ]
  %4517 = phi float [ %4159, %3513 ], [ %.pre-phi3179, %._crit_edge._crit_edge ]
  %4518 = phi float [ %4158, %3513 ], [ %.pre-phi3177, %._crit_edge._crit_edge ]
  %4519 = phi float [ %4155, %3513 ], [ %.pre-phi3175, %._crit_edge._crit_edge ]
  %4520 = phi float [ %4154, %3513 ], [ %.pre-phi3173, %._crit_edge._crit_edge ]
  %4521 = phi float [ %4153, %3513 ], [ %.pre-phi3171, %._crit_edge._crit_edge ]
  %4522 = phi float [ %4152, %3513 ], [ %.pre-phi3169, %._crit_edge._crit_edge ]
  %4523 = phi float [ %4137, %3513 ], [ %.pre-phi3167, %._crit_edge._crit_edge ]
  %4524 = phi float [ %4136, %3513 ], [ %.pre-phi3165, %._crit_edge._crit_edge ]
  %4525 = phi float [ %4135, %3513 ], [ %.pre-phi3163, %._crit_edge._crit_edge ]
  %4526 = phi float [ %4134, %3513 ], [ %.pre-phi3161, %._crit_edge._crit_edge ]
  %4527 = phi float [ %4131, %3513 ], [ %.pre-phi3159, %._crit_edge._crit_edge ]
  %4528 = phi float [ %4130, %3513 ], [ %.pre-phi3157, %._crit_edge._crit_edge ]
  %4529 = phi float [ %4129, %3513 ], [ %.pre-phi3155, %._crit_edge._crit_edge ]
  %4530 = phi float [ %4128, %3513 ], [ %.pre-phi3153, %._crit_edge._crit_edge ]
  %4531 = phi float [ %4113, %3513 ], [ %.pre-phi3151, %._crit_edge._crit_edge ]
  %4532 = phi float [ %4112, %3513 ], [ %.pre-phi3149, %._crit_edge._crit_edge ]
  %4533 = phi float [ %4111, %3513 ], [ %.pre-phi3147, %._crit_edge._crit_edge ]
  %4534 = phi float [ %4110, %3513 ], [ %.pre-phi3145, %._crit_edge._crit_edge ]
  %4535 = phi float [ %4107, %3513 ], [ %.pre-phi3143, %._crit_edge._crit_edge ]
  %4536 = phi float [ %4106, %3513 ], [ %.pre-phi3141, %._crit_edge._crit_edge ]
  %4537 = phi float [ %4105, %3513 ], [ %.pre-phi3139, %._crit_edge._crit_edge ]
  %4538 = phi float [ %4104, %3513 ], [ %.pre-phi3137, %._crit_edge._crit_edge ]
  %4539 = phi float [ %4173, %3513 ], [ %.pre-phi3135, %._crit_edge._crit_edge ]
  %4540 = phi float [ %4172, %3513 ], [ %.pre-phi3133, %._crit_edge._crit_edge ]
  %4541 = phi float [ %4171, %3513 ], [ %.pre-phi3131, %._crit_edge._crit_edge ]
  %4542 = phi float [ %4170, %3513 ], [ %.pre-phi3129, %._crit_edge._crit_edge ]
  %4543 = phi float [ %4167, %3513 ], [ %.pre-phi3127, %._crit_edge._crit_edge ]
  %4544 = phi float [ %4166, %3513 ], [ %.pre-phi3125, %._crit_edge._crit_edge ]
  %4545 = phi float [ %4165, %3513 ], [ %.pre-phi3123, %._crit_edge._crit_edge ]
  %4546 = phi float [ %4164, %3513 ], [ %.pre-phi3121, %._crit_edge._crit_edge ]
  %4547 = phi float [ %4149, %3513 ], [ %.pre-phi3119, %._crit_edge._crit_edge ]
  %4548 = phi float [ %4148, %3513 ], [ %.pre-phi3117, %._crit_edge._crit_edge ]
  %4549 = phi float [ %4147, %3513 ], [ %.pre-phi3115, %._crit_edge._crit_edge ]
  %4550 = phi float [ %4146, %3513 ], [ %.pre-phi3113, %._crit_edge._crit_edge ]
  %4551 = phi float [ %4143, %3513 ], [ %.pre-phi3111, %._crit_edge._crit_edge ]
  %4552 = phi float [ %4142, %3513 ], [ %.pre-phi3109, %._crit_edge._crit_edge ]
  %4553 = phi float [ %4141, %3513 ], [ %.pre-phi3107, %._crit_edge._crit_edge ]
  %4554 = phi float [ %4140, %3513 ], [ %.pre-phi3105, %._crit_edge._crit_edge ]
  %4555 = phi float [ %4125, %3513 ], [ %.pre-phi3103, %._crit_edge._crit_edge ]
  %4556 = phi float [ %4124, %3513 ], [ %.pre-phi3101, %._crit_edge._crit_edge ]
  %4557 = phi float [ %4123, %3513 ], [ %.pre-phi3099, %._crit_edge._crit_edge ]
  %4558 = phi float [ %4122, %3513 ], [ %.pre-phi3097, %._crit_edge._crit_edge ]
  %4559 = phi float [ %4119, %3513 ], [ %.pre-phi3095, %._crit_edge._crit_edge ]
  %4560 = phi float [ %4118, %3513 ], [ %.pre-phi3093, %._crit_edge._crit_edge ]
  %4561 = phi float [ %4117, %3513 ], [ %.pre-phi3091, %._crit_edge._crit_edge ]
  %4562 = phi float [ %4116, %3513 ], [ %.pre-phi3089, %._crit_edge._crit_edge ]
  %4563 = phi float [ %4101, %3513 ], [ %.pre-phi3087, %._crit_edge._crit_edge ]
  %4564 = phi float [ %4100, %3513 ], [ %.pre-phi3085, %._crit_edge._crit_edge ]
  %4565 = phi float [ %4099, %3513 ], [ %.pre-phi3083, %._crit_edge._crit_edge ]
  %4566 = phi float [ %4098, %3513 ], [ %.pre-phi3081, %._crit_edge._crit_edge ]
  %4567 = phi float [ %4095, %3513 ], [ %.pre-phi3079, %._crit_edge._crit_edge ]
  %4568 = phi float [ %4094, %3513 ], [ %.pre-phi3077, %._crit_edge._crit_edge ]
  %4569 = phi float [ %4093, %3513 ], [ %.pre-phi3075, %._crit_edge._crit_edge ]
  %4570 = phi float [ %4092, %3513 ], [ %.pre-phi3073, %._crit_edge._crit_edge ]
  %4571 = phi float [ %4089, %3513 ], [ %.pre-phi3071, %._crit_edge._crit_edge ]
  %4572 = phi float [ %4088, %3513 ], [ %.pre-phi3069, %._crit_edge._crit_edge ]
  %4573 = phi float [ %4087, %3513 ], [ %.pre-phi3067, %._crit_edge._crit_edge ]
  %4574 = phi float [ %4086, %3513 ], [ %.pre-phi3065, %._crit_edge._crit_edge ]
  %4575 = phi float [ %4083, %3513 ], [ %.pre-phi3063, %._crit_edge._crit_edge ]
  %4576 = phi float [ %4082, %3513 ], [ %.pre-phi3061, %._crit_edge._crit_edge ]
  %4577 = phi float [ %4081, %3513 ], [ %.pre-phi3059, %._crit_edge._crit_edge ]
  %4578 = phi float [ %4080, %3513 ], [ %.pre-phi3057, %._crit_edge._crit_edge ]
  %4579 = phi float [ %4065, %3513 ], [ %.pre-phi3055, %._crit_edge._crit_edge ]
  %4580 = phi float [ %4064, %3513 ], [ %.pre-phi3053, %._crit_edge._crit_edge ]
  %4581 = phi float [ %4063, %3513 ], [ %.pre-phi3051, %._crit_edge._crit_edge ]
  %4582 = phi float [ %4062, %3513 ], [ %.pre-phi3049, %._crit_edge._crit_edge ]
  %4583 = phi float [ %4059, %3513 ], [ %.pre-phi3047, %._crit_edge._crit_edge ]
  %4584 = phi float [ %4058, %3513 ], [ %.pre-phi3045, %._crit_edge._crit_edge ]
  %4585 = phi float [ %4057, %3513 ], [ %.pre-phi3043, %._crit_edge._crit_edge ]
  %4586 = phi float [ %4056, %3513 ], [ %.pre-phi3041, %._crit_edge._crit_edge ]
  %4587 = phi float [ %4041, %3513 ], [ %.pre-phi3039, %._crit_edge._crit_edge ]
  %4588 = phi float [ %4040, %3513 ], [ %.pre-phi3037, %._crit_edge._crit_edge ]
  %4589 = phi float [ %4039, %3513 ], [ %.pre-phi3035, %._crit_edge._crit_edge ]
  %4590 = phi float [ %4038, %3513 ], [ %.pre-phi3033, %._crit_edge._crit_edge ]
  %4591 = phi float [ %4035, %3513 ], [ %.pre-phi3031, %._crit_edge._crit_edge ]
  %4592 = phi float [ %4034, %3513 ], [ %.pre-phi3029, %._crit_edge._crit_edge ]
  %4593 = phi float [ %4033, %3513 ], [ %.pre-phi3027, %._crit_edge._crit_edge ]
  %4594 = phi float [ %4032, %3513 ], [ %.pre-phi3025, %._crit_edge._crit_edge ]
  %4595 = phi float [ %4017, %3513 ], [ %.pre-phi3023, %._crit_edge._crit_edge ]
  %4596 = phi float [ %4016, %3513 ], [ %.pre-phi3021, %._crit_edge._crit_edge ]
  %4597 = phi float [ %4015, %3513 ], [ %.pre-phi3019, %._crit_edge._crit_edge ]
  %4598 = phi float [ %4014, %3513 ], [ %.pre-phi3017, %._crit_edge._crit_edge ]
  %4599 = phi float [ %4011, %3513 ], [ %.pre-phi3015, %._crit_edge._crit_edge ]
  %4600 = phi float [ %4010, %3513 ], [ %.pre-phi3013, %._crit_edge._crit_edge ]
  %4601 = phi float [ %4009, %3513 ], [ %.pre-phi3011, %._crit_edge._crit_edge ]
  %4602 = phi float [ %4008, %3513 ], [ %.pre-phi3009, %._crit_edge._crit_edge ]
  %4603 = phi float [ %4077, %3513 ], [ %.pre-phi3007, %._crit_edge._crit_edge ]
  %4604 = phi float [ %4076, %3513 ], [ %.pre-phi3005, %._crit_edge._crit_edge ]
  %4605 = phi float [ %4075, %3513 ], [ %.pre-phi3003, %._crit_edge._crit_edge ]
  %4606 = phi float [ %4074, %3513 ], [ %.pre-phi3001, %._crit_edge._crit_edge ]
  %4607 = phi float [ %4071, %3513 ], [ %.pre-phi2999, %._crit_edge._crit_edge ]
  %4608 = phi float [ %4070, %3513 ], [ %.pre-phi2997, %._crit_edge._crit_edge ]
  %4609 = phi float [ %4069, %3513 ], [ %.pre-phi2995, %._crit_edge._crit_edge ]
  %4610 = phi float [ %4068, %3513 ], [ %.pre-phi2993, %._crit_edge._crit_edge ]
  %4611 = phi float [ %4053, %3513 ], [ %.pre-phi2991, %._crit_edge._crit_edge ]
  %4612 = phi float [ %4052, %3513 ], [ %.pre-phi2989, %._crit_edge._crit_edge ]
  %4613 = phi float [ %4051, %3513 ], [ %.pre-phi2987, %._crit_edge._crit_edge ]
  %4614 = phi float [ %4050, %3513 ], [ %.pre-phi2985, %._crit_edge._crit_edge ]
  %4615 = phi float [ %4047, %3513 ], [ %.pre-phi2983, %._crit_edge._crit_edge ]
  %4616 = phi float [ %4046, %3513 ], [ %.pre-phi2981, %._crit_edge._crit_edge ]
  %4617 = phi float [ %4045, %3513 ], [ %.pre-phi2979, %._crit_edge._crit_edge ]
  %4618 = phi float [ %4044, %3513 ], [ %.pre-phi2977, %._crit_edge._crit_edge ]
  %4619 = phi float [ %4029, %3513 ], [ %.pre-phi2975, %._crit_edge._crit_edge ]
  %4620 = phi float [ %4028, %3513 ], [ %.pre-phi2973, %._crit_edge._crit_edge ]
  %4621 = phi float [ %4027, %3513 ], [ %.pre-phi2971, %._crit_edge._crit_edge ]
  %4622 = phi float [ %4026, %3513 ], [ %.pre-phi2969, %._crit_edge._crit_edge ]
  %4623 = phi float [ %4023, %3513 ], [ %.pre-phi2967, %._crit_edge._crit_edge ]
  %4624 = phi float [ %4022, %3513 ], [ %.pre-phi2965, %._crit_edge._crit_edge ]
  %4625 = phi float [ %4021, %3513 ], [ %.pre-phi2963, %._crit_edge._crit_edge ]
  %4626 = phi float [ %4020, %3513 ], [ %.pre-phi2961, %._crit_edge._crit_edge ]
  %4627 = phi float [ %4005, %3513 ], [ %.pre-phi2959, %._crit_edge._crit_edge ]
  %4628 = phi float [ %4004, %3513 ], [ %.pre-phi2957, %._crit_edge._crit_edge ]
  %4629 = phi float [ %4003, %3513 ], [ %.pre-phi2955, %._crit_edge._crit_edge ]
  %4630 = phi float [ %4002, %3513 ], [ %.pre-phi2953, %._crit_edge._crit_edge ]
  %4631 = phi float [ %3999, %3513 ], [ %.pre-phi2951, %._crit_edge._crit_edge ]
  %4632 = phi float [ %3998, %3513 ], [ %.pre-phi2949, %._crit_edge._crit_edge ]
  %4633 = phi float [ %3997, %3513 ], [ %.pre-phi2947, %._crit_edge._crit_edge ]
  %4634 = phi float [ %3996, %3513 ], [ %.pre-phi2945, %._crit_edge._crit_edge ]
  %4635 = and i32 %281, 28, !dbg !28
  %4636 = or disjoint i32 %4635, 224, !dbg !28
  %4637 = or disjoint i32 %4635, 192, !dbg !28
  %4638 = or disjoint i32 %4635, 160, !dbg !28
  %4639 = or disjoint i32 %4635, 128, !dbg !28
  %4640 = or disjoint i32 %4635, 96, !dbg !28
  %4641 = or disjoint i32 %4635, 64, !dbg !28
  %4642 = or disjoint i32 %4635, 32, !dbg !28
  %4643 = or disjoint i32 %225, 224, !dbg !28
  %4644 = or disjoint i32 %225, 192, !dbg !28
  %4645 = or disjoint i32 %225, 160, !dbg !28
  %4646 = or disjoint i32 %225, 128, !dbg !28
  %4647 = or disjoint i32 %225, 96, !dbg !28
  %4648 = or disjoint i32 %225, 64, !dbg !28
  %4649 = or disjoint i32 %225, 32, !dbg !28
  %4650 = fptrunc float %4634 to half, !dbg !56
  %4651 = fptrunc float %4633 to half, !dbg !56
  %4652 = fptrunc float %4632 to half, !dbg !56
  %4653 = fptrunc float %4631 to half, !dbg !56
  %4654 = fptrunc float %4630 to half, !dbg !56
  %4655 = fptrunc float %4629 to half, !dbg !56
  %4656 = fptrunc float %4628 to half, !dbg !56
  %4657 = fptrunc float %4627 to half, !dbg !56
  %4658 = fptrunc float %4626 to half, !dbg !56
  %4659 = fptrunc float %4625 to half, !dbg !56
  %4660 = fptrunc float %4624 to half, !dbg !56
  %4661 = fptrunc float %4623 to half, !dbg !56
  %4662 = fptrunc float %4622 to half, !dbg !56
  %4663 = fptrunc float %4621 to half, !dbg !56
  %4664 = fptrunc float %4620 to half, !dbg !56
  %4665 = fptrunc float %4619 to half, !dbg !56
  %4666 = fptrunc float %4618 to half, !dbg !56
  %4667 = fptrunc float %4617 to half, !dbg !56
  %4668 = fptrunc float %4616 to half, !dbg !56
  %4669 = fptrunc float %4615 to half, !dbg !56
  %4670 = fptrunc float %4614 to half, !dbg !56
  %4671 = fptrunc float %4613 to half, !dbg !56
  %4672 = fptrunc float %4612 to half, !dbg !56
  %4673 = fptrunc float %4611 to half, !dbg !56
  %4674 = fptrunc float %4610 to half, !dbg !56
  %4675 = fptrunc float %4609 to half, !dbg !56
  %4676 = fptrunc float %4608 to half, !dbg !56
  %4677 = fptrunc float %4607 to half, !dbg !56
  %4678 = fptrunc float %4606 to half, !dbg !56
  %4679 = fptrunc float %4605 to half, !dbg !56
  %4680 = fptrunc float %4604 to half, !dbg !56
  %4681 = fptrunc float %4603 to half, !dbg !56
  %4682 = fptrunc float %4602 to half, !dbg !56
  %4683 = fptrunc float %4601 to half, !dbg !56
  %4684 = fptrunc float %4600 to half, !dbg !56
  %4685 = fptrunc float %4599 to half, !dbg !56
  %4686 = fptrunc float %4598 to half, !dbg !56
  %4687 = fptrunc float %4597 to half, !dbg !56
  %4688 = fptrunc float %4596 to half, !dbg !56
  %4689 = fptrunc float %4595 to half, !dbg !56
  %4690 = fptrunc float %4594 to half, !dbg !56
  %4691 = fptrunc float %4593 to half, !dbg !56
  %4692 = fptrunc float %4592 to half, !dbg !56
  %4693 = fptrunc float %4591 to half, !dbg !56
  %4694 = fptrunc float %4590 to half, !dbg !56
  %4695 = fptrunc float %4589 to half, !dbg !56
  %4696 = fptrunc float %4588 to half, !dbg !56
  %4697 = fptrunc float %4587 to half, !dbg !56
  %4698 = fptrunc float %4586 to half, !dbg !56
  %4699 = fptrunc float %4585 to half, !dbg !56
  %4700 = fptrunc float %4584 to half, !dbg !56
  %4701 = fptrunc float %4583 to half, !dbg !56
  %4702 = fptrunc float %4582 to half, !dbg !56
  %4703 = fptrunc float %4581 to half, !dbg !56
  %4704 = fptrunc float %4580 to half, !dbg !56
  %4705 = fptrunc float %4579 to half, !dbg !56
  %4706 = fptrunc float %4578 to half, !dbg !56
  %4707 = fptrunc float %4577 to half, !dbg !56
  %4708 = fptrunc float %4576 to half, !dbg !56
  %4709 = fptrunc float %4575 to half, !dbg !56
  %4710 = fptrunc float %4574 to half, !dbg !56
  %4711 = fptrunc float %4573 to half, !dbg !56
  %4712 = fptrunc float %4572 to half, !dbg !56
  %4713 = fptrunc float %4571 to half, !dbg !56
  %4714 = fptrunc float %4570 to half, !dbg !56
  %4715 = fptrunc float %4569 to half, !dbg !56
  %4716 = fptrunc float %4568 to half, !dbg !56
  %4717 = fptrunc float %4567 to half, !dbg !56
  %4718 = fptrunc float %4566 to half, !dbg !56
  %4719 = fptrunc float %4565 to half, !dbg !56
  %4720 = fptrunc float %4564 to half, !dbg !56
  %4721 = fptrunc float %4563 to half, !dbg !56
  %4722 = fptrunc float %4562 to half, !dbg !56
  %4723 = fptrunc float %4561 to half, !dbg !56
  %4724 = fptrunc float %4560 to half, !dbg !56
  %4725 = fptrunc float %4559 to half, !dbg !56
  %4726 = fptrunc float %4558 to half, !dbg !56
  %4727 = fptrunc float %4557 to half, !dbg !56
  %4728 = fptrunc float %4556 to half, !dbg !56
  %4729 = fptrunc float %4555 to half, !dbg !56
  %4730 = fptrunc float %4554 to half, !dbg !56
  %4731 = fptrunc float %4553 to half, !dbg !56
  %4732 = fptrunc float %4552 to half, !dbg !56
  %4733 = fptrunc float %4551 to half, !dbg !56
  %4734 = fptrunc float %4550 to half, !dbg !56
  %4735 = fptrunc float %4549 to half, !dbg !56
  %4736 = fptrunc float %4548 to half, !dbg !56
  %4737 = fptrunc float %4547 to half, !dbg !56
  %4738 = fptrunc float %4546 to half, !dbg !56
  %4739 = fptrunc float %4545 to half, !dbg !56
  %4740 = fptrunc float %4544 to half, !dbg !56
  %4741 = fptrunc float %4543 to half, !dbg !56
  %4742 = fptrunc float %4542 to half, !dbg !56
  %4743 = fptrunc float %4541 to half, !dbg !56
  %4744 = fptrunc float %4540 to half, !dbg !56
  %4745 = fptrunc float %4539 to half, !dbg !56
  %4746 = fptrunc float %4538 to half, !dbg !56
  %4747 = fptrunc float %4537 to half, !dbg !56
  %4748 = fptrunc float %4536 to half, !dbg !56
  %4749 = fptrunc float %4535 to half, !dbg !56
  %4750 = fptrunc float %4534 to half, !dbg !56
  %4751 = fptrunc float %4533 to half, !dbg !56
  %4752 = fptrunc float %4532 to half, !dbg !56
  %4753 = fptrunc float %4531 to half, !dbg !56
  %4754 = fptrunc float %4530 to half, !dbg !56
  %4755 = fptrunc float %4529 to half, !dbg !56
  %4756 = fptrunc float %4528 to half, !dbg !56
  %4757 = fptrunc float %4527 to half, !dbg !56
  %4758 = fptrunc float %4526 to half, !dbg !56
  %4759 = fptrunc float %4525 to half, !dbg !56
  %4760 = fptrunc float %4524 to half, !dbg !56
  %4761 = fptrunc float %4523 to half, !dbg !56
  %4762 = fptrunc float %4522 to half, !dbg !56
  %4763 = fptrunc float %4521 to half, !dbg !56
  %4764 = fptrunc float %4520 to half, !dbg !56
  %4765 = fptrunc float %4519 to half, !dbg !56
  %4766 = fptrunc float %4518 to half, !dbg !56
  %4767 = fptrunc float %4517 to half, !dbg !56
  %4768 = fptrunc float %4516 to half, !dbg !56
  %4769 = fptrunc float %4515 to half, !dbg !56
  %4770 = fptrunc float %4514 to half, !dbg !56
  %4771 = fptrunc float %4513 to half, !dbg !56
  %4772 = fptrunc float %4512 to half, !dbg !56
  %4773 = fptrunc float %4511 to half, !dbg !56
  %4774 = fptrunc float %4510 to half, !dbg !56
  %4775 = fptrunc float %4509 to half, !dbg !56
  %4776 = fptrunc float %4508 to half, !dbg !56
  %4777 = fptrunc float %4507 to half, !dbg !56
  %4778 = fptrunc float %4506 to half, !dbg !56
  %4779 = fptrunc float %4505 to half, !dbg !56
  %4780 = fptrunc float %4504 to half, !dbg !56
  %4781 = fptrunc float %4503 to half, !dbg !56
  %4782 = fptrunc float %4502 to half, !dbg !56
  %4783 = fptrunc float %4501 to half, !dbg !56
  %4784 = fptrunc float %4500 to half, !dbg !56
  %4785 = fptrunc float %4499 to half, !dbg !56
  %4786 = fptrunc float %4498 to half, !dbg !56
  %4787 = fptrunc float %4497 to half, !dbg !56
  %4788 = fptrunc float %4496 to half, !dbg !56
  %4789 = fptrunc float %4495 to half, !dbg !56
  %4790 = fptrunc float %4494 to half, !dbg !56
  %4791 = fptrunc float %4493 to half, !dbg !56
  %4792 = fptrunc float %4492 to half, !dbg !56
  %4793 = fptrunc float %4491 to half, !dbg !56
  %4794 = fptrunc float %4490 to half, !dbg !56
  %4795 = fptrunc float %4489 to half, !dbg !56
  %4796 = fptrunc float %4488 to half, !dbg !56
  %4797 = fptrunc float %4487 to half, !dbg !56
  %4798 = fptrunc float %4486 to half, !dbg !56
  %4799 = fptrunc float %4485 to half, !dbg !56
  %4800 = fptrunc float %4484 to half, !dbg !56
  %4801 = fptrunc float %4483 to half, !dbg !56
  %4802 = fptrunc float %4482 to half, !dbg !56
  %4803 = fptrunc float %4481 to half, !dbg !56
  %4804 = fptrunc float %4480 to half, !dbg !56
  %4805 = fptrunc float %4479 to half, !dbg !56
  %4806 = fptrunc float %4478 to half, !dbg !56
  %4807 = fptrunc float %4477 to half, !dbg !56
  %4808 = fptrunc float %4476 to half, !dbg !56
  %4809 = fptrunc float %4475 to half, !dbg !56
  %4810 = fptrunc float %4474 to half, !dbg !56
  %4811 = fptrunc float %4473 to half, !dbg !56
  %4812 = fptrunc float %4472 to half, !dbg !56
  %4813 = fptrunc float %4471 to half, !dbg !56
  %4814 = fptrunc float %4470 to half, !dbg !56
  %4815 = fptrunc float %4469 to half, !dbg !56
  %4816 = fptrunc float %4468 to half, !dbg !56
  %4817 = fptrunc float %4467 to half, !dbg !56
  %4818 = fptrunc float %4466 to half, !dbg !56
  %4819 = fptrunc float %4465 to half, !dbg !56
  %4820 = fptrunc float %4464 to half, !dbg !56
  %4821 = fptrunc float %4463 to half, !dbg !56
  %4822 = fptrunc float %4462 to half, !dbg !56
  %4823 = fptrunc float %4461 to half, !dbg !56
  %4824 = fptrunc float %4460 to half, !dbg !56
  %4825 = fptrunc float %4459 to half, !dbg !56
  %4826 = fptrunc float %4458 to half, !dbg !56
  %4827 = fptrunc float %4457 to half, !dbg !56
  %4828 = fptrunc float %4456 to half, !dbg !56
  %4829 = fptrunc float %4455 to half, !dbg !56
  %4830 = fptrunc float %4454 to half, !dbg !56
  %4831 = fptrunc float %4453 to half, !dbg !56
  %4832 = fptrunc float %4452 to half, !dbg !56
  %4833 = fptrunc float %4451 to half, !dbg !56
  %4834 = fptrunc float %4450 to half, !dbg !56
  %4835 = fptrunc float %4449 to half, !dbg !56
  %4836 = fptrunc float %4448 to half, !dbg !56
  %4837 = fptrunc float %4447 to half, !dbg !56
  %4838 = fptrunc float %4446 to half, !dbg !56
  %4839 = fptrunc float %4445 to half, !dbg !56
  %4840 = fptrunc float %4444 to half, !dbg !56
  %4841 = fptrunc float %4443 to half, !dbg !56
  %4842 = fptrunc float %4442 to half, !dbg !56
  %4843 = fptrunc float %4441 to half, !dbg !56
  %4844 = fptrunc float %4440 to half, !dbg !56
  %4845 = fptrunc float %4439 to half, !dbg !56
  %4846 = fptrunc float %4438 to half, !dbg !56
  %4847 = fptrunc float %4437 to half, !dbg !56
  %4848 = fptrunc float %4436 to half, !dbg !56
  %4849 = fptrunc float %4435 to half, !dbg !56
  %4850 = fptrunc float %4434 to half, !dbg !56
  %4851 = fptrunc float %4433 to half, !dbg !56
  %4852 = fptrunc float %4432 to half, !dbg !56
  %4853 = fptrunc float %4431 to half, !dbg !56
  %4854 = fptrunc float %4430 to half, !dbg !56
  %4855 = fptrunc float %4429 to half, !dbg !56
  %4856 = fptrunc float %4428 to half, !dbg !56
  %4857 = fptrunc float %4427 to half, !dbg !56
  %4858 = fptrunc float %4426 to half, !dbg !56
  %4859 = fptrunc float %4425 to half, !dbg !56
  %4860 = fptrunc float %4424 to half, !dbg !56
  %4861 = fptrunc float %4423 to half, !dbg !56
  %4862 = fptrunc float %4422 to half, !dbg !56
  %4863 = fptrunc float %4421 to half, !dbg !56
  %4864 = fptrunc float %4420 to half, !dbg !56
  %4865 = fptrunc float %4419 to half, !dbg !56
  %4866 = fptrunc float %4418 to half, !dbg !56
  %4867 = fptrunc float %4417 to half, !dbg !56
  %4868 = fptrunc float %4416 to half, !dbg !56
  %4869 = fptrunc float %4415 to half, !dbg !56
  %4870 = fptrunc float %4414 to half, !dbg !56
  %4871 = fptrunc float %4413 to half, !dbg !56
  %4872 = fptrunc float %4412 to half, !dbg !56
  %4873 = fptrunc float %4411 to half, !dbg !56
  %4874 = fptrunc float %4410 to half, !dbg !56
  %4875 = fptrunc float %4409 to half, !dbg !56
  %4876 = fptrunc float %4408 to half, !dbg !56
  %4877 = fptrunc float %4407 to half, !dbg !56
  %4878 = fptrunc float %4406 to half, !dbg !56
  %4879 = fptrunc float %4405 to half, !dbg !56
  %4880 = fptrunc float %4404 to half, !dbg !56
  %4881 = fptrunc float %4403 to half, !dbg !56
  %4882 = fptrunc float %4402 to half, !dbg !56
  %4883 = fptrunc float %4401 to half, !dbg !56
  %4884 = fptrunc float %4400 to half, !dbg !56
  %4885 = fptrunc float %4399 to half, !dbg !56
  %4886 = fptrunc float %4398 to half, !dbg !56
  %4887 = fptrunc float %4397 to half, !dbg !56
  %4888 = fptrunc float %4396 to half, !dbg !56
  %4889 = fptrunc float %4395 to half, !dbg !56
  %4890 = fptrunc float %4394 to half, !dbg !56
  %4891 = fptrunc float %4393 to half, !dbg !56
  %4892 = fptrunc float %4392 to half, !dbg !56
  %4893 = fptrunc float %4391 to half, !dbg !56
  %4894 = fptrunc float %4390 to half, !dbg !56
  %4895 = fptrunc float %4389 to half, !dbg !56
  %4896 = fptrunc float %4388 to half, !dbg !56
  %4897 = fptrunc float %4387 to half, !dbg !56
  %4898 = fptrunc float %4386 to half, !dbg !56
  %4899 = fptrunc float %4385 to half, !dbg !56
  %4900 = fptrunc float %4384 to half, !dbg !56
  %4901 = fptrunc float %4383 to half, !dbg !56
  %4902 = fptrunc float %4382 to half, !dbg !56
  %4903 = fptrunc float %4381 to half, !dbg !56
  %4904 = fptrunc float %4380 to half, !dbg !56
  %4905 = fptrunc float %4379 to half, !dbg !56
  %4906 = mul i32 %31, %9, !dbg !57
  %4907 = mul i32 %9, %225, !dbg !57
  %4908 = mul i32 %9, %4649, !dbg !57
  %4909 = mul i32 %9, %4648, !dbg !57
  %4910 = mul i32 %9, %4647, !dbg !57
  %4911 = mul i32 %9, %4646, !dbg !57
  %4912 = mul i32 %9, %4645, !dbg !57
  %4913 = mul i32 %9, %4644, !dbg !57
  %4914 = mul i32 %9, %4643, !dbg !57
  %4915 = sext i32 %4906 to i64, !dbg !57
  %4916 = getelementptr half, ptr addrspace(1) %2, i64 %4915, !dbg !57
  %4917 = sext i32 %118 to i64, !dbg !58
  %4918 = getelementptr half, ptr addrspace(1) %4916, i64 %4917, !dbg !58
  %4919 = add i32 %4907, %4635, !dbg !58
  %4920 = add i32 %4907, %4642, !dbg !58
  %4921 = add i32 %4907, %4641, !dbg !58
  %4922 = add i32 %4907, %4640, !dbg !58
  %4923 = add i32 %4907, %4639, !dbg !58
  %4924 = add i32 %4907, %4638, !dbg !58
  %4925 = add i32 %4907, %4637, !dbg !58
  %4926 = add i32 %4907, %4636, !dbg !58
  %4927 = add i32 %4908, %4635, !dbg !58
  %4928 = add i32 %4908, %4642, !dbg !58
  %4929 = add i32 %4908, %4641, !dbg !58
  %4930 = add i32 %4908, %4640, !dbg !58
  %4931 = add i32 %4908, %4639, !dbg !58
  %4932 = add i32 %4908, %4638, !dbg !58
  %4933 = add i32 %4908, %4637, !dbg !58
  %4934 = add i32 %4908, %4636, !dbg !58
  %4935 = add i32 %4909, %4635, !dbg !58
  %4936 = add i32 %4909, %4642, !dbg !58
  %4937 = add i32 %4909, %4641, !dbg !58
  %4938 = add i32 %4909, %4640, !dbg !58
  %4939 = add i32 %4909, %4639, !dbg !58
  %4940 = add i32 %4909, %4638, !dbg !58
  %4941 = add i32 %4909, %4637, !dbg !58
  %4942 = add i32 %4909, %4636, !dbg !58
  %4943 = add i32 %4910, %4635, !dbg !58
  %4944 = add i32 %4910, %4642, !dbg !58
  %4945 = add i32 %4910, %4641, !dbg !58
  %4946 = add i32 %4910, %4640, !dbg !58
  %4947 = add i32 %4910, %4639, !dbg !58
  %4948 = add i32 %4910, %4638, !dbg !58
  %4949 = add i32 %4910, %4637, !dbg !58
  %4950 = add i32 %4910, %4636, !dbg !58
  %4951 = add i32 %4911, %4635, !dbg !58
  %4952 = add i32 %4911, %4642, !dbg !58
  %4953 = add i32 %4911, %4641, !dbg !58
  %4954 = add i32 %4911, %4640, !dbg !58
  %4955 = add i32 %4911, %4639, !dbg !58
  %4956 = add i32 %4911, %4638, !dbg !58
  %4957 = add i32 %4911, %4637, !dbg !58
  %4958 = add i32 %4911, %4636, !dbg !58
  %4959 = add i32 %4912, %4635, !dbg !58
  %4960 = add i32 %4912, %4642, !dbg !58
  %4961 = add i32 %4912, %4641, !dbg !58
  %4962 = add i32 %4912, %4640, !dbg !58
  %4963 = add i32 %4912, %4639, !dbg !58
  %4964 = add i32 %4912, %4638, !dbg !58
  %4965 = add i32 %4912, %4637, !dbg !58
  %4966 = add i32 %4912, %4636, !dbg !58
  %4967 = add i32 %4913, %4635, !dbg !58
  %4968 = add i32 %4913, %4642, !dbg !58
  %4969 = add i32 %4913, %4641, !dbg !58
  %4970 = add i32 %4913, %4640, !dbg !58
  %4971 = add i32 %4913, %4639, !dbg !58
  %4972 = add i32 %4913, %4638, !dbg !58
  %4973 = add i32 %4913, %4637, !dbg !58
  %4974 = add i32 %4913, %4636, !dbg !58
  %4975 = add i32 %4914, %4635, !dbg !58
  %4976 = add i32 %4914, %4642, !dbg !58
  %4977 = add i32 %4914, %4641, !dbg !58
  %4978 = add i32 %4914, %4640, !dbg !58
  %4979 = add i32 %4914, %4639, !dbg !58
  %4980 = add i32 %4914, %4638, !dbg !58
  %4981 = add i32 %4914, %4637, !dbg !58
  %4982 = add i32 %4914, %4636, !dbg !58
  %4983 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) %4918, i16 0, i32 2147483646, i32 159744), !dbg !59
  %4984 = insertelement <4 x half> poison, half %4650, i64 0, !dbg !59
  %4985 = insertelement <4 x half> %4984, half %4651, i64 1, !dbg !59
  %4986 = insertelement <4 x half> %4985, half %4652, i64 2, !dbg !59
  %4987 = insertelement <4 x half> %4986, half %4653, i64 3, !dbg !59
  %4988 = bitcast <4 x half> %4987 to <2 x i32>, !dbg !59
  %4989 = shl i32 %4919, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4988, ptr addrspace(8) %4983, i32 %4989, i32 0, i32 0), !dbg !59
  %4990 = insertelement <4 x half> poison, half %4654, i64 0, !dbg !59
  %4991 = insertelement <4 x half> %4990, half %4655, i64 1, !dbg !59
  %4992 = insertelement <4 x half> %4991, half %4656, i64 2, !dbg !59
  %4993 = insertelement <4 x half> %4992, half %4657, i64 3, !dbg !59
  %4994 = bitcast <4 x half> %4993 to <2 x i32>, !dbg !59
  %4995 = shl i32 %4920, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %4994, ptr addrspace(8) %4983, i32 %4995, i32 0, i32 0), !dbg !59
  %4996 = insertelement <4 x half> poison, half %4658, i64 0, !dbg !59
  %4997 = insertelement <4 x half> %4996, half %4659, i64 1, !dbg !59
  %4998 = insertelement <4 x half> %4997, half %4660, i64 2, !dbg !59
  %4999 = insertelement <4 x half> %4998, half %4661, i64 3, !dbg !59
  %5000 = bitcast <4 x half> %4999 to <2 x i32>, !dbg !59
  %5001 = shl i32 %4921, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5000, ptr addrspace(8) %4983, i32 %5001, i32 0, i32 0), !dbg !59
  %5002 = insertelement <4 x half> poison, half %4662, i64 0, !dbg !59
  %5003 = insertelement <4 x half> %5002, half %4663, i64 1, !dbg !59
  %5004 = insertelement <4 x half> %5003, half %4664, i64 2, !dbg !59
  %5005 = insertelement <4 x half> %5004, half %4665, i64 3, !dbg !59
  %5006 = bitcast <4 x half> %5005 to <2 x i32>, !dbg !59
  %5007 = shl i32 %4922, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5006, ptr addrspace(8) %4983, i32 %5007, i32 0, i32 0), !dbg !59
  %5008 = insertelement <4 x half> poison, half %4666, i64 0, !dbg !59
  %5009 = insertelement <4 x half> %5008, half %4667, i64 1, !dbg !59
  %5010 = insertelement <4 x half> %5009, half %4668, i64 2, !dbg !59
  %5011 = insertelement <4 x half> %5010, half %4669, i64 3, !dbg !59
  %5012 = bitcast <4 x half> %5011 to <2 x i32>, !dbg !59
  %5013 = shl i32 %4923, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5012, ptr addrspace(8) %4983, i32 %5013, i32 0, i32 0), !dbg !59
  %5014 = insertelement <4 x half> poison, half %4670, i64 0, !dbg !59
  %5015 = insertelement <4 x half> %5014, half %4671, i64 1, !dbg !59
  %5016 = insertelement <4 x half> %5015, half %4672, i64 2, !dbg !59
  %5017 = insertelement <4 x half> %5016, half %4673, i64 3, !dbg !59
  %5018 = bitcast <4 x half> %5017 to <2 x i32>, !dbg !59
  %5019 = shl i32 %4924, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5018, ptr addrspace(8) %4983, i32 %5019, i32 0, i32 0), !dbg !59
  %5020 = insertelement <4 x half> poison, half %4674, i64 0, !dbg !59
  %5021 = insertelement <4 x half> %5020, half %4675, i64 1, !dbg !59
  %5022 = insertelement <4 x half> %5021, half %4676, i64 2, !dbg !59
  %5023 = insertelement <4 x half> %5022, half %4677, i64 3, !dbg !59
  %5024 = bitcast <4 x half> %5023 to <2 x i32>, !dbg !59
  %5025 = shl i32 %4925, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5024, ptr addrspace(8) %4983, i32 %5025, i32 0, i32 0), !dbg !59
  %5026 = insertelement <4 x half> poison, half %4678, i64 0, !dbg !59
  %5027 = insertelement <4 x half> %5026, half %4679, i64 1, !dbg !59
  %5028 = insertelement <4 x half> %5027, half %4680, i64 2, !dbg !59
  %5029 = insertelement <4 x half> %5028, half %4681, i64 3, !dbg !59
  %5030 = bitcast <4 x half> %5029 to <2 x i32>, !dbg !59
  %5031 = shl i32 %4926, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5030, ptr addrspace(8) %4983, i32 %5031, i32 0, i32 0), !dbg !59
  %5032 = insertelement <4 x half> poison, half %4682, i64 0, !dbg !59
  %5033 = insertelement <4 x half> %5032, half %4683, i64 1, !dbg !59
  %5034 = insertelement <4 x half> %5033, half %4684, i64 2, !dbg !59
  %5035 = insertelement <4 x half> %5034, half %4685, i64 3, !dbg !59
  %5036 = bitcast <4 x half> %5035 to <2 x i32>, !dbg !59
  %5037 = shl i32 %4927, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5036, ptr addrspace(8) %4983, i32 %5037, i32 0, i32 0), !dbg !59
  %5038 = insertelement <4 x half> poison, half %4686, i64 0, !dbg !59
  %5039 = insertelement <4 x half> %5038, half %4687, i64 1, !dbg !59
  %5040 = insertelement <4 x half> %5039, half %4688, i64 2, !dbg !59
  %5041 = insertelement <4 x half> %5040, half %4689, i64 3, !dbg !59
  %5042 = bitcast <4 x half> %5041 to <2 x i32>, !dbg !59
  %5043 = shl i32 %4928, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5042, ptr addrspace(8) %4983, i32 %5043, i32 0, i32 0), !dbg !59
  %5044 = insertelement <4 x half> poison, half %4690, i64 0, !dbg !59
  %5045 = insertelement <4 x half> %5044, half %4691, i64 1, !dbg !59
  %5046 = insertelement <4 x half> %5045, half %4692, i64 2, !dbg !59
  %5047 = insertelement <4 x half> %5046, half %4693, i64 3, !dbg !59
  %5048 = bitcast <4 x half> %5047 to <2 x i32>, !dbg !59
  %5049 = shl i32 %4929, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5048, ptr addrspace(8) %4983, i32 %5049, i32 0, i32 0), !dbg !59
  %5050 = insertelement <4 x half> poison, half %4694, i64 0, !dbg !59
  %5051 = insertelement <4 x half> %5050, half %4695, i64 1, !dbg !59
  %5052 = insertelement <4 x half> %5051, half %4696, i64 2, !dbg !59
  %5053 = insertelement <4 x half> %5052, half %4697, i64 3, !dbg !59
  %5054 = bitcast <4 x half> %5053 to <2 x i32>, !dbg !59
  %5055 = shl i32 %4930, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5054, ptr addrspace(8) %4983, i32 %5055, i32 0, i32 0), !dbg !59
  %5056 = insertelement <4 x half> poison, half %4698, i64 0, !dbg !59
  %5057 = insertelement <4 x half> %5056, half %4699, i64 1, !dbg !59
  %5058 = insertelement <4 x half> %5057, half %4700, i64 2, !dbg !59
  %5059 = insertelement <4 x half> %5058, half %4701, i64 3, !dbg !59
  %5060 = bitcast <4 x half> %5059 to <2 x i32>, !dbg !59
  %5061 = shl i32 %4931, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5060, ptr addrspace(8) %4983, i32 %5061, i32 0, i32 0), !dbg !59
  %5062 = insertelement <4 x half> poison, half %4702, i64 0, !dbg !59
  %5063 = insertelement <4 x half> %5062, half %4703, i64 1, !dbg !59
  %5064 = insertelement <4 x half> %5063, half %4704, i64 2, !dbg !59
  %5065 = insertelement <4 x half> %5064, half %4705, i64 3, !dbg !59
  %5066 = bitcast <4 x half> %5065 to <2 x i32>, !dbg !59
  %5067 = shl i32 %4932, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5066, ptr addrspace(8) %4983, i32 %5067, i32 0, i32 0), !dbg !59
  %5068 = insertelement <4 x half> poison, half %4706, i64 0, !dbg !59
  %5069 = insertelement <4 x half> %5068, half %4707, i64 1, !dbg !59
  %5070 = insertelement <4 x half> %5069, half %4708, i64 2, !dbg !59
  %5071 = insertelement <4 x half> %5070, half %4709, i64 3, !dbg !59
  %5072 = bitcast <4 x half> %5071 to <2 x i32>, !dbg !59
  %5073 = shl i32 %4933, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5072, ptr addrspace(8) %4983, i32 %5073, i32 0, i32 0), !dbg !59
  %5074 = insertelement <4 x half> poison, half %4710, i64 0, !dbg !59
  %5075 = insertelement <4 x half> %5074, half %4711, i64 1, !dbg !59
  %5076 = insertelement <4 x half> %5075, half %4712, i64 2, !dbg !59
  %5077 = insertelement <4 x half> %5076, half %4713, i64 3, !dbg !59
  %5078 = bitcast <4 x half> %5077 to <2 x i32>, !dbg !59
  %5079 = shl i32 %4934, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5078, ptr addrspace(8) %4983, i32 %5079, i32 0, i32 0), !dbg !59
  %5080 = insertelement <4 x half> poison, half %4714, i64 0, !dbg !59
  %5081 = insertelement <4 x half> %5080, half %4715, i64 1, !dbg !59
  %5082 = insertelement <4 x half> %5081, half %4716, i64 2, !dbg !59
  %5083 = insertelement <4 x half> %5082, half %4717, i64 3, !dbg !59
  %5084 = bitcast <4 x half> %5083 to <2 x i32>, !dbg !59
  %5085 = shl i32 %4935, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5084, ptr addrspace(8) %4983, i32 %5085, i32 0, i32 0), !dbg !59
  %5086 = insertelement <4 x half> poison, half %4718, i64 0, !dbg !59
  %5087 = insertelement <4 x half> %5086, half %4719, i64 1, !dbg !59
  %5088 = insertelement <4 x half> %5087, half %4720, i64 2, !dbg !59
  %5089 = insertelement <4 x half> %5088, half %4721, i64 3, !dbg !59
  %5090 = bitcast <4 x half> %5089 to <2 x i32>, !dbg !59
  %5091 = shl i32 %4936, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5090, ptr addrspace(8) %4983, i32 %5091, i32 0, i32 0), !dbg !59
  %5092 = insertelement <4 x half> poison, half %4722, i64 0, !dbg !59
  %5093 = insertelement <4 x half> %5092, half %4723, i64 1, !dbg !59
  %5094 = insertelement <4 x half> %5093, half %4724, i64 2, !dbg !59
  %5095 = insertelement <4 x half> %5094, half %4725, i64 3, !dbg !59
  %5096 = bitcast <4 x half> %5095 to <2 x i32>, !dbg !59
  %5097 = shl i32 %4937, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5096, ptr addrspace(8) %4983, i32 %5097, i32 0, i32 0), !dbg !59
  %5098 = insertelement <4 x half> poison, half %4726, i64 0, !dbg !59
  %5099 = insertelement <4 x half> %5098, half %4727, i64 1, !dbg !59
  %5100 = insertelement <4 x half> %5099, half %4728, i64 2, !dbg !59
  %5101 = insertelement <4 x half> %5100, half %4729, i64 3, !dbg !59
  %5102 = bitcast <4 x half> %5101 to <2 x i32>, !dbg !59
  %5103 = shl i32 %4938, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5102, ptr addrspace(8) %4983, i32 %5103, i32 0, i32 0), !dbg !59
  %5104 = insertelement <4 x half> poison, half %4730, i64 0, !dbg !59
  %5105 = insertelement <4 x half> %5104, half %4731, i64 1, !dbg !59
  %5106 = insertelement <4 x half> %5105, half %4732, i64 2, !dbg !59
  %5107 = insertelement <4 x half> %5106, half %4733, i64 3, !dbg !59
  %5108 = bitcast <4 x half> %5107 to <2 x i32>, !dbg !59
  %5109 = shl i32 %4939, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5108, ptr addrspace(8) %4983, i32 %5109, i32 0, i32 0), !dbg !59
  %5110 = insertelement <4 x half> poison, half %4734, i64 0, !dbg !59
  %5111 = insertelement <4 x half> %5110, half %4735, i64 1, !dbg !59
  %5112 = insertelement <4 x half> %5111, half %4736, i64 2, !dbg !59
  %5113 = insertelement <4 x half> %5112, half %4737, i64 3, !dbg !59
  %5114 = bitcast <4 x half> %5113 to <2 x i32>, !dbg !59
  %5115 = shl i32 %4940, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5114, ptr addrspace(8) %4983, i32 %5115, i32 0, i32 0), !dbg !59
  %5116 = insertelement <4 x half> poison, half %4738, i64 0, !dbg !59
  %5117 = insertelement <4 x half> %5116, half %4739, i64 1, !dbg !59
  %5118 = insertelement <4 x half> %5117, half %4740, i64 2, !dbg !59
  %5119 = insertelement <4 x half> %5118, half %4741, i64 3, !dbg !59
  %5120 = bitcast <4 x half> %5119 to <2 x i32>, !dbg !59
  %5121 = shl i32 %4941, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5120, ptr addrspace(8) %4983, i32 %5121, i32 0, i32 0), !dbg !59
  %5122 = insertelement <4 x half> poison, half %4742, i64 0, !dbg !59
  %5123 = insertelement <4 x half> %5122, half %4743, i64 1, !dbg !59
  %5124 = insertelement <4 x half> %5123, half %4744, i64 2, !dbg !59
  %5125 = insertelement <4 x half> %5124, half %4745, i64 3, !dbg !59
  %5126 = bitcast <4 x half> %5125 to <2 x i32>, !dbg !59
  %5127 = shl i32 %4942, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5126, ptr addrspace(8) %4983, i32 %5127, i32 0, i32 0), !dbg !59
  %5128 = insertelement <4 x half> poison, half %4746, i64 0, !dbg !59
  %5129 = insertelement <4 x half> %5128, half %4747, i64 1, !dbg !59
  %5130 = insertelement <4 x half> %5129, half %4748, i64 2, !dbg !59
  %5131 = insertelement <4 x half> %5130, half %4749, i64 3, !dbg !59
  %5132 = bitcast <4 x half> %5131 to <2 x i32>, !dbg !59
  %5133 = shl i32 %4943, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5132, ptr addrspace(8) %4983, i32 %5133, i32 0, i32 0), !dbg !59
  %5134 = insertelement <4 x half> poison, half %4750, i64 0, !dbg !59
  %5135 = insertelement <4 x half> %5134, half %4751, i64 1, !dbg !59
  %5136 = insertelement <4 x half> %5135, half %4752, i64 2, !dbg !59
  %5137 = insertelement <4 x half> %5136, half %4753, i64 3, !dbg !59
  %5138 = bitcast <4 x half> %5137 to <2 x i32>, !dbg !59
  %5139 = shl i32 %4944, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5138, ptr addrspace(8) %4983, i32 %5139, i32 0, i32 0), !dbg !59
  %5140 = insertelement <4 x half> poison, half %4754, i64 0, !dbg !59
  %5141 = insertelement <4 x half> %5140, half %4755, i64 1, !dbg !59
  %5142 = insertelement <4 x half> %5141, half %4756, i64 2, !dbg !59
  %5143 = insertelement <4 x half> %5142, half %4757, i64 3, !dbg !59
  %5144 = bitcast <4 x half> %5143 to <2 x i32>, !dbg !59
  %5145 = shl i32 %4945, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5144, ptr addrspace(8) %4983, i32 %5145, i32 0, i32 0), !dbg !59
  %5146 = insertelement <4 x half> poison, half %4758, i64 0, !dbg !59
  %5147 = insertelement <4 x half> %5146, half %4759, i64 1, !dbg !59
  %5148 = insertelement <4 x half> %5147, half %4760, i64 2, !dbg !59
  %5149 = insertelement <4 x half> %5148, half %4761, i64 3, !dbg !59
  %5150 = bitcast <4 x half> %5149 to <2 x i32>, !dbg !59
  %5151 = shl i32 %4946, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5150, ptr addrspace(8) %4983, i32 %5151, i32 0, i32 0), !dbg !59
  %5152 = insertelement <4 x half> poison, half %4762, i64 0, !dbg !59
  %5153 = insertelement <4 x half> %5152, half %4763, i64 1, !dbg !59
  %5154 = insertelement <4 x half> %5153, half %4764, i64 2, !dbg !59
  %5155 = insertelement <4 x half> %5154, half %4765, i64 3, !dbg !59
  %5156 = bitcast <4 x half> %5155 to <2 x i32>, !dbg !59
  %5157 = shl i32 %4947, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5156, ptr addrspace(8) %4983, i32 %5157, i32 0, i32 0), !dbg !59
  %5158 = insertelement <4 x half> poison, half %4766, i64 0, !dbg !59
  %5159 = insertelement <4 x half> %5158, half %4767, i64 1, !dbg !59
  %5160 = insertelement <4 x half> %5159, half %4768, i64 2, !dbg !59
  %5161 = insertelement <4 x half> %5160, half %4769, i64 3, !dbg !59
  %5162 = bitcast <4 x half> %5161 to <2 x i32>, !dbg !59
  %5163 = shl i32 %4948, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5162, ptr addrspace(8) %4983, i32 %5163, i32 0, i32 0), !dbg !59
  %5164 = insertelement <4 x half> poison, half %4770, i64 0, !dbg !59
  %5165 = insertelement <4 x half> %5164, half %4771, i64 1, !dbg !59
  %5166 = insertelement <4 x half> %5165, half %4772, i64 2, !dbg !59
  %5167 = insertelement <4 x half> %5166, half %4773, i64 3, !dbg !59
  %5168 = bitcast <4 x half> %5167 to <2 x i32>, !dbg !59
  %5169 = shl i32 %4949, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5168, ptr addrspace(8) %4983, i32 %5169, i32 0, i32 0), !dbg !59
  %5170 = insertelement <4 x half> poison, half %4774, i64 0, !dbg !59
  %5171 = insertelement <4 x half> %5170, half %4775, i64 1, !dbg !59
  %5172 = insertelement <4 x half> %5171, half %4776, i64 2, !dbg !59
  %5173 = insertelement <4 x half> %5172, half %4777, i64 3, !dbg !59
  %5174 = bitcast <4 x half> %5173 to <2 x i32>, !dbg !59
  %5175 = shl i32 %4950, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5174, ptr addrspace(8) %4983, i32 %5175, i32 0, i32 0), !dbg !59
  %5176 = insertelement <4 x half> poison, half %4778, i64 0, !dbg !59
  %5177 = insertelement <4 x half> %5176, half %4779, i64 1, !dbg !59
  %5178 = insertelement <4 x half> %5177, half %4780, i64 2, !dbg !59
  %5179 = insertelement <4 x half> %5178, half %4781, i64 3, !dbg !59
  %5180 = bitcast <4 x half> %5179 to <2 x i32>, !dbg !59
  %5181 = shl i32 %4951, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5180, ptr addrspace(8) %4983, i32 %5181, i32 0, i32 0), !dbg !59
  %5182 = insertelement <4 x half> poison, half %4782, i64 0, !dbg !59
  %5183 = insertelement <4 x half> %5182, half %4783, i64 1, !dbg !59
  %5184 = insertelement <4 x half> %5183, half %4784, i64 2, !dbg !59
  %5185 = insertelement <4 x half> %5184, half %4785, i64 3, !dbg !59
  %5186 = bitcast <4 x half> %5185 to <2 x i32>, !dbg !59
  %5187 = shl i32 %4952, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5186, ptr addrspace(8) %4983, i32 %5187, i32 0, i32 0), !dbg !59
  %5188 = insertelement <4 x half> poison, half %4786, i64 0, !dbg !59
  %5189 = insertelement <4 x half> %5188, half %4787, i64 1, !dbg !59
  %5190 = insertelement <4 x half> %5189, half %4788, i64 2, !dbg !59
  %5191 = insertelement <4 x half> %5190, half %4789, i64 3, !dbg !59
  %5192 = bitcast <4 x half> %5191 to <2 x i32>, !dbg !59
  %5193 = shl i32 %4953, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5192, ptr addrspace(8) %4983, i32 %5193, i32 0, i32 0), !dbg !59
  %5194 = insertelement <4 x half> poison, half %4790, i64 0, !dbg !59
  %5195 = insertelement <4 x half> %5194, half %4791, i64 1, !dbg !59
  %5196 = insertelement <4 x half> %5195, half %4792, i64 2, !dbg !59
  %5197 = insertelement <4 x half> %5196, half %4793, i64 3, !dbg !59
  %5198 = bitcast <4 x half> %5197 to <2 x i32>, !dbg !59
  %5199 = shl i32 %4954, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5198, ptr addrspace(8) %4983, i32 %5199, i32 0, i32 0), !dbg !59
  %5200 = insertelement <4 x half> poison, half %4794, i64 0, !dbg !59
  %5201 = insertelement <4 x half> %5200, half %4795, i64 1, !dbg !59
  %5202 = insertelement <4 x half> %5201, half %4796, i64 2, !dbg !59
  %5203 = insertelement <4 x half> %5202, half %4797, i64 3, !dbg !59
  %5204 = bitcast <4 x half> %5203 to <2 x i32>, !dbg !59
  %5205 = shl i32 %4955, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5204, ptr addrspace(8) %4983, i32 %5205, i32 0, i32 0), !dbg !59
  %5206 = insertelement <4 x half> poison, half %4798, i64 0, !dbg !59
  %5207 = insertelement <4 x half> %5206, half %4799, i64 1, !dbg !59
  %5208 = insertelement <4 x half> %5207, half %4800, i64 2, !dbg !59
  %5209 = insertelement <4 x half> %5208, half %4801, i64 3, !dbg !59
  %5210 = bitcast <4 x half> %5209 to <2 x i32>, !dbg !59
  %5211 = shl i32 %4956, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5210, ptr addrspace(8) %4983, i32 %5211, i32 0, i32 0), !dbg !59
  %5212 = insertelement <4 x half> poison, half %4802, i64 0, !dbg !59
  %5213 = insertelement <4 x half> %5212, half %4803, i64 1, !dbg !59
  %5214 = insertelement <4 x half> %5213, half %4804, i64 2, !dbg !59
  %5215 = insertelement <4 x half> %5214, half %4805, i64 3, !dbg !59
  %5216 = bitcast <4 x half> %5215 to <2 x i32>, !dbg !59
  %5217 = shl i32 %4957, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5216, ptr addrspace(8) %4983, i32 %5217, i32 0, i32 0), !dbg !59
  %5218 = insertelement <4 x half> poison, half %4806, i64 0, !dbg !59
  %5219 = insertelement <4 x half> %5218, half %4807, i64 1, !dbg !59
  %5220 = insertelement <4 x half> %5219, half %4808, i64 2, !dbg !59
  %5221 = insertelement <4 x half> %5220, half %4809, i64 3, !dbg !59
  %5222 = bitcast <4 x half> %5221 to <2 x i32>, !dbg !59
  %5223 = shl i32 %4958, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5222, ptr addrspace(8) %4983, i32 %5223, i32 0, i32 0), !dbg !59
  %5224 = insertelement <4 x half> poison, half %4810, i64 0, !dbg !59
  %5225 = insertelement <4 x half> %5224, half %4811, i64 1, !dbg !59
  %5226 = insertelement <4 x half> %5225, half %4812, i64 2, !dbg !59
  %5227 = insertelement <4 x half> %5226, half %4813, i64 3, !dbg !59
  %5228 = bitcast <4 x half> %5227 to <2 x i32>, !dbg !59
  %5229 = shl i32 %4959, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5228, ptr addrspace(8) %4983, i32 %5229, i32 0, i32 0), !dbg !59
  %5230 = insertelement <4 x half> poison, half %4814, i64 0, !dbg !59
  %5231 = insertelement <4 x half> %5230, half %4815, i64 1, !dbg !59
  %5232 = insertelement <4 x half> %5231, half %4816, i64 2, !dbg !59
  %5233 = insertelement <4 x half> %5232, half %4817, i64 3, !dbg !59
  %5234 = bitcast <4 x half> %5233 to <2 x i32>, !dbg !59
  %5235 = shl i32 %4960, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5234, ptr addrspace(8) %4983, i32 %5235, i32 0, i32 0), !dbg !59
  %5236 = insertelement <4 x half> poison, half %4818, i64 0, !dbg !59
  %5237 = insertelement <4 x half> %5236, half %4819, i64 1, !dbg !59
  %5238 = insertelement <4 x half> %5237, half %4820, i64 2, !dbg !59
  %5239 = insertelement <4 x half> %5238, half %4821, i64 3, !dbg !59
  %5240 = bitcast <4 x half> %5239 to <2 x i32>, !dbg !59
  %5241 = shl i32 %4961, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5240, ptr addrspace(8) %4983, i32 %5241, i32 0, i32 0), !dbg !59
  %5242 = insertelement <4 x half> poison, half %4822, i64 0, !dbg !59
  %5243 = insertelement <4 x half> %5242, half %4823, i64 1, !dbg !59
  %5244 = insertelement <4 x half> %5243, half %4824, i64 2, !dbg !59
  %5245 = insertelement <4 x half> %5244, half %4825, i64 3, !dbg !59
  %5246 = bitcast <4 x half> %5245 to <2 x i32>, !dbg !59
  %5247 = shl i32 %4962, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5246, ptr addrspace(8) %4983, i32 %5247, i32 0, i32 0), !dbg !59
  %5248 = insertelement <4 x half> poison, half %4826, i64 0, !dbg !59
  %5249 = insertelement <4 x half> %5248, half %4827, i64 1, !dbg !59
  %5250 = insertelement <4 x half> %5249, half %4828, i64 2, !dbg !59
  %5251 = insertelement <4 x half> %5250, half %4829, i64 3, !dbg !59
  %5252 = bitcast <4 x half> %5251 to <2 x i32>, !dbg !59
  %5253 = shl i32 %4963, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5252, ptr addrspace(8) %4983, i32 %5253, i32 0, i32 0), !dbg !59
  %5254 = insertelement <4 x half> poison, half %4830, i64 0, !dbg !59
  %5255 = insertelement <4 x half> %5254, half %4831, i64 1, !dbg !59
  %5256 = insertelement <4 x half> %5255, half %4832, i64 2, !dbg !59
  %5257 = insertelement <4 x half> %5256, half %4833, i64 3, !dbg !59
  %5258 = bitcast <4 x half> %5257 to <2 x i32>, !dbg !59
  %5259 = shl i32 %4964, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5258, ptr addrspace(8) %4983, i32 %5259, i32 0, i32 0), !dbg !59
  %5260 = insertelement <4 x half> poison, half %4834, i64 0, !dbg !59
  %5261 = insertelement <4 x half> %5260, half %4835, i64 1, !dbg !59
  %5262 = insertelement <4 x half> %5261, half %4836, i64 2, !dbg !59
  %5263 = insertelement <4 x half> %5262, half %4837, i64 3, !dbg !59
  %5264 = bitcast <4 x half> %5263 to <2 x i32>, !dbg !59
  %5265 = shl i32 %4965, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5264, ptr addrspace(8) %4983, i32 %5265, i32 0, i32 0), !dbg !59
  %5266 = insertelement <4 x half> poison, half %4838, i64 0, !dbg !59
  %5267 = insertelement <4 x half> %5266, half %4839, i64 1, !dbg !59
  %5268 = insertelement <4 x half> %5267, half %4840, i64 2, !dbg !59
  %5269 = insertelement <4 x half> %5268, half %4841, i64 3, !dbg !59
  %5270 = bitcast <4 x half> %5269 to <2 x i32>, !dbg !59
  %5271 = shl i32 %4966, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5270, ptr addrspace(8) %4983, i32 %5271, i32 0, i32 0), !dbg !59
  %5272 = insertelement <4 x half> poison, half %4842, i64 0, !dbg !59
  %5273 = insertelement <4 x half> %5272, half %4843, i64 1, !dbg !59
  %5274 = insertelement <4 x half> %5273, half %4844, i64 2, !dbg !59
  %5275 = insertelement <4 x half> %5274, half %4845, i64 3, !dbg !59
  %5276 = bitcast <4 x half> %5275 to <2 x i32>, !dbg !59
  %5277 = shl i32 %4967, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5276, ptr addrspace(8) %4983, i32 %5277, i32 0, i32 0), !dbg !59
  %5278 = insertelement <4 x half> poison, half %4846, i64 0, !dbg !59
  %5279 = insertelement <4 x half> %5278, half %4847, i64 1, !dbg !59
  %5280 = insertelement <4 x half> %5279, half %4848, i64 2, !dbg !59
  %5281 = insertelement <4 x half> %5280, half %4849, i64 3, !dbg !59
  %5282 = bitcast <4 x half> %5281 to <2 x i32>, !dbg !59
  %5283 = shl i32 %4968, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5282, ptr addrspace(8) %4983, i32 %5283, i32 0, i32 0), !dbg !59
  %5284 = insertelement <4 x half> poison, half %4850, i64 0, !dbg !59
  %5285 = insertelement <4 x half> %5284, half %4851, i64 1, !dbg !59
  %5286 = insertelement <4 x half> %5285, half %4852, i64 2, !dbg !59
  %5287 = insertelement <4 x half> %5286, half %4853, i64 3, !dbg !59
  %5288 = bitcast <4 x half> %5287 to <2 x i32>, !dbg !59
  %5289 = shl i32 %4969, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5288, ptr addrspace(8) %4983, i32 %5289, i32 0, i32 0), !dbg !59
  %5290 = insertelement <4 x half> poison, half %4854, i64 0, !dbg !59
  %5291 = insertelement <4 x half> %5290, half %4855, i64 1, !dbg !59
  %5292 = insertelement <4 x half> %5291, half %4856, i64 2, !dbg !59
  %5293 = insertelement <4 x half> %5292, half %4857, i64 3, !dbg !59
  %5294 = bitcast <4 x half> %5293 to <2 x i32>, !dbg !59
  %5295 = shl i32 %4970, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5294, ptr addrspace(8) %4983, i32 %5295, i32 0, i32 0), !dbg !59
  %5296 = insertelement <4 x half> poison, half %4858, i64 0, !dbg !59
  %5297 = insertelement <4 x half> %5296, half %4859, i64 1, !dbg !59
  %5298 = insertelement <4 x half> %5297, half %4860, i64 2, !dbg !59
  %5299 = insertelement <4 x half> %5298, half %4861, i64 3, !dbg !59
  %5300 = bitcast <4 x half> %5299 to <2 x i32>, !dbg !59
  %5301 = shl i32 %4971, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5300, ptr addrspace(8) %4983, i32 %5301, i32 0, i32 0), !dbg !59
  %5302 = insertelement <4 x half> poison, half %4862, i64 0, !dbg !59
  %5303 = insertelement <4 x half> %5302, half %4863, i64 1, !dbg !59
  %5304 = insertelement <4 x half> %5303, half %4864, i64 2, !dbg !59
  %5305 = insertelement <4 x half> %5304, half %4865, i64 3, !dbg !59
  %5306 = bitcast <4 x half> %5305 to <2 x i32>, !dbg !59
  %5307 = shl i32 %4972, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5306, ptr addrspace(8) %4983, i32 %5307, i32 0, i32 0), !dbg !59
  %5308 = insertelement <4 x half> poison, half %4866, i64 0, !dbg !59
  %5309 = insertelement <4 x half> %5308, half %4867, i64 1, !dbg !59
  %5310 = insertelement <4 x half> %5309, half %4868, i64 2, !dbg !59
  %5311 = insertelement <4 x half> %5310, half %4869, i64 3, !dbg !59
  %5312 = bitcast <4 x half> %5311 to <2 x i32>, !dbg !59
  %5313 = shl i32 %4973, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5312, ptr addrspace(8) %4983, i32 %5313, i32 0, i32 0), !dbg !59
  %5314 = insertelement <4 x half> poison, half %4870, i64 0, !dbg !59
  %5315 = insertelement <4 x half> %5314, half %4871, i64 1, !dbg !59
  %5316 = insertelement <4 x half> %5315, half %4872, i64 2, !dbg !59
  %5317 = insertelement <4 x half> %5316, half %4873, i64 3, !dbg !59
  %5318 = bitcast <4 x half> %5317 to <2 x i32>, !dbg !59
  %5319 = shl i32 %4974, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5318, ptr addrspace(8) %4983, i32 %5319, i32 0, i32 0), !dbg !59
  %5320 = insertelement <4 x half> poison, half %4874, i64 0, !dbg !59
  %5321 = insertelement <4 x half> %5320, half %4875, i64 1, !dbg !59
  %5322 = insertelement <4 x half> %5321, half %4876, i64 2, !dbg !59
  %5323 = insertelement <4 x half> %5322, half %4877, i64 3, !dbg !59
  %5324 = bitcast <4 x half> %5323 to <2 x i32>, !dbg !59
  %5325 = shl i32 %4975, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5324, ptr addrspace(8) %4983, i32 %5325, i32 0, i32 0), !dbg !59
  %5326 = insertelement <4 x half> poison, half %4878, i64 0, !dbg !59
  %5327 = insertelement <4 x half> %5326, half %4879, i64 1, !dbg !59
  %5328 = insertelement <4 x half> %5327, half %4880, i64 2, !dbg !59
  %5329 = insertelement <4 x half> %5328, half %4881, i64 3, !dbg !59
  %5330 = bitcast <4 x half> %5329 to <2 x i32>, !dbg !59
  %5331 = shl i32 %4976, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5330, ptr addrspace(8) %4983, i32 %5331, i32 0, i32 0), !dbg !59
  %5332 = insertelement <4 x half> poison, half %4882, i64 0, !dbg !59
  %5333 = insertelement <4 x half> %5332, half %4883, i64 1, !dbg !59
  %5334 = insertelement <4 x half> %5333, half %4884, i64 2, !dbg !59
  %5335 = insertelement <4 x half> %5334, half %4885, i64 3, !dbg !59
  %5336 = bitcast <4 x half> %5335 to <2 x i32>, !dbg !59
  %5337 = shl i32 %4977, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5336, ptr addrspace(8) %4983, i32 %5337, i32 0, i32 0), !dbg !59
  %5338 = insertelement <4 x half> poison, half %4886, i64 0, !dbg !59
  %5339 = insertelement <4 x half> %5338, half %4887, i64 1, !dbg !59
  %5340 = insertelement <4 x half> %5339, half %4888, i64 2, !dbg !59
  %5341 = insertelement <4 x half> %5340, half %4889, i64 3, !dbg !59
  %5342 = bitcast <4 x half> %5341 to <2 x i32>, !dbg !59
  %5343 = shl i32 %4978, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5342, ptr addrspace(8) %4983, i32 %5343, i32 0, i32 0), !dbg !59
  %5344 = insertelement <4 x half> poison, half %4890, i64 0, !dbg !59
  %5345 = insertelement <4 x half> %5344, half %4891, i64 1, !dbg !59
  %5346 = insertelement <4 x half> %5345, half %4892, i64 2, !dbg !59
  %5347 = insertelement <4 x half> %5346, half %4893, i64 3, !dbg !59
  %5348 = bitcast <4 x half> %5347 to <2 x i32>, !dbg !59
  %5349 = shl i32 %4979, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5348, ptr addrspace(8) %4983, i32 %5349, i32 0, i32 0), !dbg !59
  %5350 = insertelement <4 x half> poison, half %4894, i64 0, !dbg !59
  %5351 = insertelement <4 x half> %5350, half %4895, i64 1, !dbg !59
  %5352 = insertelement <4 x half> %5351, half %4896, i64 2, !dbg !59
  %5353 = insertelement <4 x half> %5352, half %4897, i64 3, !dbg !59
  %5354 = bitcast <4 x half> %5353 to <2 x i32>, !dbg !59
  %5355 = shl i32 %4980, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5354, ptr addrspace(8) %4983, i32 %5355, i32 0, i32 0), !dbg !59
  %5356 = insertelement <4 x half> poison, half %4898, i64 0, !dbg !59
  %5357 = insertelement <4 x half> %5356, half %4899, i64 1, !dbg !59
  %5358 = insertelement <4 x half> %5357, half %4900, i64 2, !dbg !59
  %5359 = insertelement <4 x half> %5358, half %4901, i64 3, !dbg !59
  %5360 = bitcast <4 x half> %5359 to <2 x i32>, !dbg !59
  %5361 = shl i32 %4981, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5360, ptr addrspace(8) %4983, i32 %5361, i32 0, i32 0), !dbg !59
  %5362 = insertelement <4 x half> poison, half %4902, i64 0, !dbg !59
  %5363 = insertelement <4 x half> %5362, half %4903, i64 1, !dbg !59
  %5364 = insertelement <4 x half> %5363, half %4904, i64 2, !dbg !59
  %5365 = insertelement <4 x half> %5364, half %4905, i64 3, !dbg !59
  %5366 = bitcast <4 x half> %5365 to <2 x i32>, !dbg !59
  %5367 = shl i32 %4982, 1, !dbg !59
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %5366, ptr addrspace(8) %4983, i32 %5367, i32 0, i32 0), !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) nocapture readonly, i32, i32, i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write)
declare void @llvm.assume(i1 noundef) #3

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #4

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half>, <4 x half>, <4 x float>, i32 immarg, i32 immarg, i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.sched.barrier(i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32>, ptr addrspace(8) nocapture writeonly, i32, i32, i32 immarg) #6

attributes #0 = { nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="0" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #5 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "gemm_sub.py", directory: "/home/dtanner/repos/rocm_triton/golden_ttgir")
!4 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !3, file: !3, line: 72, type: !5, scopeLine: 72, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 106, column: 24, scope: !4)
!8 = !DILocation(line: 117, column: 27, scope: !4)
!9 = !DILocation(line: 119, column: 35, scope: !4)
!10 = !DILocation(line: 40, column: 22, scope: !11, inlinedAt: !13)
!11 = distinct !DILexicalBlockFile(scope: !4, file: !12, discriminator: 0)
!12 = !DIFile(filename: "standard.py", directory: "/home/dtanner/repos/triton/python/triton/language")
!13 = !DILocation(line: 109, column: 27, scope: !4)
!14 = !DILocation(line: 40, column: 28, scope: !11, inlinedAt: !13)
!15 = !DILocation(line: 125, column: 42, scope: !4)
!16 = !DILocation(line: 126, column: 26, scope: !4)
!17 = !DILocation(line: 127, column: 33, scope: !4)
!18 = !DILocation(line: 129, column: 38, scope: !4)
!19 = !DILocation(line: 40, column: 22, scope: !11, inlinedAt: !20)
!20 = !DILocation(line: 108, column: 27, scope: !4)
!21 = !DILocation(line: 40, column: 28, scope: !11, inlinedAt: !20)
!22 = !DILocation(line: 128, column: 39, scope: !4)
!23 = !DILocation(line: 128, column: 52, scope: !4)
!24 = !DILocation(line: 130, column: 44, scope: !4)
!25 = !DILocation(line: 129, column: 58, scope: !4)
!26 = !DILocation(line: 129, column: 31, scope: !4)
!27 = !DILocation(line: 139, column: 23, scope: !4)
!28 = !DILocation(line: 139, column: 51, scope: !4)
!29 = !DILocation(line: 141, column: 21, scope: !4)
!30 = !DILocation(line: 141, column: 59, scope: !4)
!31 = !DILocation(line: 141, column: 52, scope: !4)
!32 = !DILocation(line: 157, column: 18, scope: !4)
!33 = !DILocation(line: 40, column: 22, scope: !11, inlinedAt: !34)
!34 = !DILocation(line: 149, column: 36, scope: !4)
!35 = !DILocation(line: 149, column: 25, scope: !4)
!36 = !DILocation(line: 151, column: 24, scope: !4)
!37 = !DILocation(line: 140, column: 23, scope: !4)
!38 = !DILocation(line: 142, column: 51, scope: !4)
!39 = !DILocation(line: 158, column: 18, scope: !4)
!40 = !DILocation(line: 152, column: 24, scope: !4)
!41 = !DILocation(line: 98, column: 26, scope: !4)
!42 = !DILocation(line: 98, column: 14, scope: !4)
!43 = !DILocation(line: 101, column: 26, scope: !4)
!44 = !DILocation(line: 101, column: 14, scope: !4)
!45 = !DILocation(line: 102, column: 26, scope: !4)
!46 = !DILocation(line: 102, column: 14, scope: !4)
!47 = !DILocation(line: 104, column: 28, scope: !4)
!48 = !DILocation(line: 104, column: 14, scope: !4)
!49 = !DILocation(line: 132, column: 22, scope: !4)
!50 = !DILocation(line: 132, column: 14, scope: !4)
!51 = !DILocation(line: 133, column: 22, scope: !4)
!52 = !DILocation(line: 133, column: 14, scope: !4)
!53 = !DILocation(line: 40, column: 28, scope: !11, inlinedAt: !34)
!54 = !DILocation(line: 156, column: 33, scope: !4)
!55 = !DILocation(line: 106, column: 68, scope: !4)
!56 = !DILocation(line: 159, column: 23, scope: !4)
!57 = !DILocation(line: 164, column: 21, scope: !4)
!58 = !DILocation(line: 164, column: 52, scope: !4)
!59 = !DILocation(line: 167, column: 25, scope: !4)
!60 = !DILocation(line: 166, column: 4, scope: !4)
